/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    LOAD_STACK_GUARD	= 19,
    STATEPOINT	= 20,
    LOCAL_ESCAPE	= 21,
    FAULTING_LOAD_OP	= 22,
    PATCHABLE_OP	= 23,
    PATCHABLE_FUNCTION_ENTER	= 24,
    PATCHABLE_RET	= 25,
    PATCHABLE_FUNCTION_EXIT	= 26,
    PATCHABLE_TAIL_CALL	= 27,
    G_ADD	= 28,
    G_SUB	= 29,
    G_MUL	= 30,
    G_SDIV	= 31,
    G_UDIV	= 32,
    G_SREM	= 33,
    G_UREM	= 34,
    G_AND	= 35,
    G_OR	= 36,
    G_XOR	= 37,
    G_FRAME_INDEX	= 38,
    G_GLOBAL_VALUE	= 39,
    G_EXTRACT	= 40,
    G_INSERT	= 41,
    G_SEQUENCE	= 42,
    G_PTRTOINT	= 43,
    G_INTTOPTR	= 44,
    G_BITCAST	= 45,
    G_LOAD	= 46,
    G_STORE	= 47,
    G_BRCOND	= 48,
    G_INTRINSIC	= 49,
    G_INTRINSIC_W_SIDE_EFFECTS	= 50,
    G_ANYEXT	= 51,
    G_TRUNC	= 52,
    G_CONSTANT	= 53,
    G_FCONSTANT	= 54,
    G_SEXT	= 55,
    G_ZEXT	= 56,
    G_SHL	= 57,
    G_LSHR	= 58,
    G_ASHR	= 59,
    G_ICMP	= 60,
    G_FCMP	= 61,
    G_SELECT	= 62,
    G_UADDE	= 63,
    G_USUBE	= 64,
    G_SADDO	= 65,
    G_SSUBO	= 66,
    G_UMULO	= 67,
    G_SMULO	= 68,
    G_FADD	= 69,
    G_FSUB	= 70,
    G_FMUL	= 71,
    G_FDIV	= 72,
    G_FREM	= 73,
    G_FPEXT	= 74,
    G_FPTRUNC	= 75,
    G_FPTOSI	= 76,
    G_FPTOUI	= 77,
    G_SITOFP	= 78,
    G_UITOFP	= 79,
    G_GEP	= 80,
    G_BR	= 81,
    ADD4	= 82,
    ADD4TLS	= 83,
    ADD4o	= 84,
    ADD8	= 85,
    ADD8TLS	= 86,
    ADD8TLS_	= 87,
    ADD8o	= 88,
    ADDC	= 89,
    ADDC8	= 90,
    ADDC8o	= 91,
    ADDCo	= 92,
    ADDE	= 93,
    ADDE8	= 94,
    ADDE8o	= 95,
    ADDEo	= 96,
    ADDI	= 97,
    ADDI8	= 98,
    ADDIC	= 99,
    ADDIC8	= 100,
    ADDICo	= 101,
    ADDIS	= 102,
    ADDIS8	= 103,
    ADDISdtprelHA	= 104,
    ADDISdtprelHA32	= 105,
    ADDISgotTprelHA	= 106,
    ADDIStlsgdHA	= 107,
    ADDIStlsldHA	= 108,
    ADDIStocHA	= 109,
    ADDIdtprelL	= 110,
    ADDIdtprelL32	= 111,
    ADDItlsgdL	= 112,
    ADDItlsgdL32	= 113,
    ADDItlsgdLADDR	= 114,
    ADDItlsgdLADDR32	= 115,
    ADDItlsldL	= 116,
    ADDItlsldL32	= 117,
    ADDItlsldLADDR	= 118,
    ADDItlsldLADDR32	= 119,
    ADDItocL	= 120,
    ADDME	= 121,
    ADDME8	= 122,
    ADDME8o	= 123,
    ADDMEo	= 124,
    ADDZE	= 125,
    ADDZE8	= 126,
    ADDZE8o	= 127,
    ADDZEo	= 128,
    ADJCALLSTACKDOWN	= 129,
    ADJCALLSTACKUP	= 130,
    AND	= 131,
    AND8	= 132,
    AND8o	= 133,
    ANDC	= 134,
    ANDC8	= 135,
    ANDC8o	= 136,
    ANDCo	= 137,
    ANDISo	= 138,
    ANDISo8	= 139,
    ANDIo	= 140,
    ANDIo8	= 141,
    ANDIo_1_EQ_BIT	= 142,
    ANDIo_1_EQ_BIT8	= 143,
    ANDIo_1_GT_BIT	= 144,
    ANDIo_1_GT_BIT8	= 145,
    ANDo	= 146,
    ATOMIC_CMP_SWAP_I16	= 147,
    ATOMIC_CMP_SWAP_I32	= 148,
    ATOMIC_CMP_SWAP_I64	= 149,
    ATOMIC_CMP_SWAP_I8	= 150,
    ATOMIC_LOAD_ADD_I16	= 151,
    ATOMIC_LOAD_ADD_I32	= 152,
    ATOMIC_LOAD_ADD_I64	= 153,
    ATOMIC_LOAD_ADD_I8	= 154,
    ATOMIC_LOAD_AND_I16	= 155,
    ATOMIC_LOAD_AND_I32	= 156,
    ATOMIC_LOAD_AND_I64	= 157,
    ATOMIC_LOAD_AND_I8	= 158,
    ATOMIC_LOAD_MAX_I16	= 159,
    ATOMIC_LOAD_MAX_I32	= 160,
    ATOMIC_LOAD_MAX_I64	= 161,
    ATOMIC_LOAD_MAX_I8	= 162,
    ATOMIC_LOAD_MIN_I16	= 163,
    ATOMIC_LOAD_MIN_I32	= 164,
    ATOMIC_LOAD_MIN_I64	= 165,
    ATOMIC_LOAD_MIN_I8	= 166,
    ATOMIC_LOAD_NAND_I16	= 167,
    ATOMIC_LOAD_NAND_I32	= 168,
    ATOMIC_LOAD_NAND_I64	= 169,
    ATOMIC_LOAD_NAND_I8	= 170,
    ATOMIC_LOAD_OR_I16	= 171,
    ATOMIC_LOAD_OR_I32	= 172,
    ATOMIC_LOAD_OR_I64	= 173,
    ATOMIC_LOAD_OR_I8	= 174,
    ATOMIC_LOAD_SUB_I16	= 175,
    ATOMIC_LOAD_SUB_I32	= 176,
    ATOMIC_LOAD_SUB_I64	= 177,
    ATOMIC_LOAD_SUB_I8	= 178,
    ATOMIC_LOAD_UMAX_I16	= 179,
    ATOMIC_LOAD_UMAX_I32	= 180,
    ATOMIC_LOAD_UMAX_I64	= 181,
    ATOMIC_LOAD_UMAX_I8	= 182,
    ATOMIC_LOAD_UMIN_I16	= 183,
    ATOMIC_LOAD_UMIN_I32	= 184,
    ATOMIC_LOAD_UMIN_I64	= 185,
    ATOMIC_LOAD_UMIN_I8	= 186,
    ATOMIC_LOAD_XOR_I16	= 187,
    ATOMIC_LOAD_XOR_I32	= 188,
    ATOMIC_LOAD_XOR_I64	= 189,
    ATOMIC_LOAD_XOR_I8	= 190,
    ATOMIC_SWAP_I16	= 191,
    ATOMIC_SWAP_I32	= 192,
    ATOMIC_SWAP_I64	= 193,
    ATOMIC_SWAP_I8	= 194,
    ATTN	= 195,
    B	= 196,
    BA	= 197,
    BC	= 198,
    BCC	= 199,
    BCCA	= 200,
    BCCCTR	= 201,
    BCCCTR8	= 202,
    BCCCTRL	= 203,
    BCCCTRL8	= 204,
    BCCL	= 205,
    BCCLA	= 206,
    BCCLR	= 207,
    BCCLRL	= 208,
    BCCTR	= 209,
    BCCTR8	= 210,
    BCCTR8n	= 211,
    BCCTRL	= 212,
    BCCTRL8	= 213,
    BCCTRL8n	= 214,
    BCCTRLn	= 215,
    BCCTRn	= 216,
    BCDCFNo	= 217,
    BCDCFSQo	= 218,
    BCDCFZo	= 219,
    BCDCPSGNo	= 220,
    BCDCTNo	= 221,
    BCDCTSQo	= 222,
    BCDCTZo	= 223,
    BCDSETSGNo	= 224,
    BCDSRo	= 225,
    BCDSo	= 226,
    BCDTRUNCo	= 227,
    BCDUSo	= 228,
    BCDUTRUNCo	= 229,
    BCL	= 230,
    BCLR	= 231,
    BCLRL	= 232,
    BCLRLn	= 233,
    BCLRn	= 234,
    BCLalways	= 235,
    BCLn	= 236,
    BCTR	= 237,
    BCTR8	= 238,
    BCTRL	= 239,
    BCTRL8	= 240,
    BCTRL8_LDinto_toc	= 241,
    BCn	= 242,
    BDNZ	= 243,
    BDNZ8	= 244,
    BDNZA	= 245,
    BDNZAm	= 246,
    BDNZAp	= 247,
    BDNZL	= 248,
    BDNZLA	= 249,
    BDNZLAm	= 250,
    BDNZLAp	= 251,
    BDNZLR	= 252,
    BDNZLR8	= 253,
    BDNZLRL	= 254,
    BDNZLRLm	= 255,
    BDNZLRLp	= 256,
    BDNZLRm	= 257,
    BDNZLRp	= 258,
    BDNZLm	= 259,
    BDNZLp	= 260,
    BDNZm	= 261,
    BDNZp	= 262,
    BDZ	= 263,
    BDZ8	= 264,
    BDZA	= 265,
    BDZAm	= 266,
    BDZAp	= 267,
    BDZL	= 268,
    BDZLA	= 269,
    BDZLAm	= 270,
    BDZLAp	= 271,
    BDZLR	= 272,
    BDZLR8	= 273,
    BDZLRL	= 274,
    BDZLRLm	= 275,
    BDZLRLp	= 276,
    BDZLRm	= 277,
    BDZLRp	= 278,
    BDZLm	= 279,
    BDZLp	= 280,
    BDZm	= 281,
    BDZp	= 282,
    BL	= 283,
    BL8	= 284,
    BL8_NOP	= 285,
    BL8_NOP_TLS	= 286,
    BL8_TLS	= 287,
    BL8_TLS_	= 288,
    BLA	= 289,
    BLA8	= 290,
    BLA8_NOP	= 291,
    BLR	= 292,
    BLR8	= 293,
    BLRL	= 294,
    BL_TLS	= 295,
    BPERMD	= 296,
    BRINC	= 297,
    CLRBHRB	= 298,
    CLRLSLDI	= 299,
    CLRLSLDIo	= 300,
    CLRLSLWI	= 301,
    CLRLSLWIo	= 302,
    CLRRDI	= 303,
    CLRRDIo	= 304,
    CLRRWI	= 305,
    CLRRWIo	= 306,
    CMPB	= 307,
    CMPB8	= 308,
    CMPD	= 309,
    CMPDI	= 310,
    CMPEQB	= 311,
    CMPLD	= 312,
    CMPLDI	= 313,
    CMPLW	= 314,
    CMPLWI	= 315,
    CMPRB	= 316,
    CMPRB8	= 317,
    CMPW	= 318,
    CMPWI	= 319,
    CNTLZD	= 320,
    CNTLZDo	= 321,
    CNTLZW	= 322,
    CNTLZW8	= 323,
    CNTLZW8o	= 324,
    CNTLZWo	= 325,
    CNTTZD	= 326,
    CNTTZDo	= 327,
    CNTTZW	= 328,
    CNTTZW8	= 329,
    CNTTZW8o	= 330,
    CNTTZWo	= 331,
    CP_ABORT	= 332,
    CP_COPY	= 333,
    CP_COPY8	= 334,
    CP_COPY_FIRST	= 335,
    CP_COPYx	= 336,
    CP_PASTE	= 337,
    CP_PASTE8	= 338,
    CP_PASTE8o	= 339,
    CP_PASTE_LAST	= 340,
    CP_PASTEo	= 341,
    CP_PASTEx	= 342,
    CR6SET	= 343,
    CR6UNSET	= 344,
    CRAND	= 345,
    CRANDC	= 346,
    CREQV	= 347,
    CRNAND	= 348,
    CRNOR	= 349,
    CROR	= 350,
    CRORC	= 351,
    CRSET	= 352,
    CRUNSET	= 353,
    CRXOR	= 354,
    DCBA	= 355,
    DCBF	= 356,
    DCBFL	= 357,
    DCBFLP	= 358,
    DCBFx	= 359,
    DCBI	= 360,
    DCBST	= 361,
    DCBT	= 362,
    DCBTCT	= 363,
    DCBTDS	= 364,
    DCBTST	= 365,
    DCBTSTCT	= 366,
    DCBTSTDS	= 367,
    DCBTSTT	= 368,
    DCBTSTx	= 369,
    DCBTT	= 370,
    DCBTx	= 371,
    DCBZ	= 372,
    DCBZL	= 373,
    DCCCI	= 374,
    DFLOADf32	= 375,
    DFLOADf64	= 376,
    DFSTOREf32	= 377,
    DFSTOREf64	= 378,
    DIVD	= 379,
    DIVDE	= 380,
    DIVDEU	= 381,
    DIVDEUo	= 382,
    DIVDEo	= 383,
    DIVDU	= 384,
    DIVDUo	= 385,
    DIVDo	= 386,
    DIVW	= 387,
    DIVWE	= 388,
    DIVWEU	= 389,
    DIVWEUo	= 390,
    DIVWEo	= 391,
    DIVWU	= 392,
    DIVWUo	= 393,
    DIVWo	= 394,
    DSS	= 395,
    DSSALL	= 396,
    DST	= 397,
    DST64	= 398,
    DSTST	= 399,
    DSTST64	= 400,
    DSTSTT	= 401,
    DSTSTT64	= 402,
    DSTT	= 403,
    DSTT64	= 404,
    DYNALLOC	= 405,
    DYNALLOC8	= 406,
    DYNAREAOFFSET	= 407,
    DYNAREAOFFSET8	= 408,
    EH_SjLj_LongJmp32	= 409,
    EH_SjLj_LongJmp64	= 410,
    EH_SjLj_SetJmp32	= 411,
    EH_SjLj_SetJmp64	= 412,
    EH_SjLj_Setup	= 413,
    EQV	= 414,
    EQV8	= 415,
    EQV8o	= 416,
    EQVo	= 417,
    EVABS	= 418,
    EVADDIW	= 419,
    EVADDSMIAAW	= 420,
    EVADDSSIAAW	= 421,
    EVADDUMIAAW	= 422,
    EVADDUSIAAW	= 423,
    EVADDW	= 424,
    EVAND	= 425,
    EVANDC	= 426,
    EVCMPEQ	= 427,
    EVCMPGTS	= 428,
    EVCMPGTU	= 429,
    EVCMPLTS	= 430,
    EVCMPLTU	= 431,
    EVCNTLSW	= 432,
    EVCNTLZW	= 433,
    EVDIVWS	= 434,
    EVDIVWU	= 435,
    EVEQV	= 436,
    EVEXTSB	= 437,
    EVEXTSH	= 438,
    EVLDD	= 439,
    EVLDDX	= 440,
    EVLDH	= 441,
    EVLDHX	= 442,
    EVLDW	= 443,
    EVLDWX	= 444,
    EVLHHESPLAT	= 445,
    EVLHHESPLATX	= 446,
    EVLHHOSSPLAT	= 447,
    EVLHHOSSPLATX	= 448,
    EVLHHOUSPLAT	= 449,
    EVLHHOUSPLATX	= 450,
    EVLWHE	= 451,
    EVLWHEX	= 452,
    EVLWHOS	= 453,
    EVLWHOSX	= 454,
    EVLWHOU	= 455,
    EVLWHOUX	= 456,
    EVLWHSPLAT	= 457,
    EVLWHSPLATX	= 458,
    EVLWWSPLAT	= 459,
    EVLWWSPLATX	= 460,
    EVMERGEHI	= 461,
    EVMERGEHILO	= 462,
    EVMERGELO	= 463,
    EVMERGELOHI	= 464,
    EVMHEGSMFAA	= 465,
    EVMHEGSMFAN	= 466,
    EVMHEGSMIAA	= 467,
    EVMHEGSMIAN	= 468,
    EVMHEGUMIAA	= 469,
    EVMHEGUMIAN	= 470,
    EVMHESMF	= 471,
    EVMHESMFA	= 472,
    EVMHESMFAAW	= 473,
    EVMHESMFANW	= 474,
    EVMHESMI	= 475,
    EVMHESMIA	= 476,
    EVMHESMIAAW	= 477,
    EVMHESMIANW	= 478,
    EVMHESSF	= 479,
    EVMHESSFA	= 480,
    EVMHESSFAAW	= 481,
    EVMHESSFANW	= 482,
    EVMHESSIAAW	= 483,
    EVMHESSIANW	= 484,
    EVMHEUMI	= 485,
    EVMHEUMIA	= 486,
    EVMHEUMIAAW	= 487,
    EVMHEUMIANW	= 488,
    EVMHEUSIAAW	= 489,
    EVMHEUSIANW	= 490,
    EVMHOGSMFAA	= 491,
    EVMHOGSMFAN	= 492,
    EVMHOGSMIAA	= 493,
    EVMHOGSMIAN	= 494,
    EVMHOGUMIAA	= 495,
    EVMHOGUMIAN	= 496,
    EVMHOSMF	= 497,
    EVMHOSMFA	= 498,
    EVMHOSMFAAW	= 499,
    EVMHOSMFANW	= 500,
    EVMHOSMI	= 501,
    EVMHOSMIA	= 502,
    EVMHOSMIAAW	= 503,
    EVMHOSMIANW	= 504,
    EVMHOSSF	= 505,
    EVMHOSSFA	= 506,
    EVMHOSSFAAW	= 507,
    EVMHOSSFANW	= 508,
    EVMHOSSIAAW	= 509,
    EVMHOSSIANW	= 510,
    EVMHOUMI	= 511,
    EVMHOUMIA	= 512,
    EVMHOUMIAAW	= 513,
    EVMHOUMIANW	= 514,
    EVMHOUSIAAW	= 515,
    EVMHOUSIANW	= 516,
    EVMRA	= 517,
    EVMWHSMF	= 518,
    EVMWHSMFA	= 519,
    EVMWHSMI	= 520,
    EVMWHSMIA	= 521,
    EVMWHSSF	= 522,
    EVMWHSSFA	= 523,
    EVMWHUMI	= 524,
    EVMWHUMIA	= 525,
    EVMWLSMIAAW	= 526,
    EVMWLSMIANW	= 527,
    EVMWLSSIAAW	= 528,
    EVMWLSSIANW	= 529,
    EVMWLUMI	= 530,
    EVMWLUMIA	= 531,
    EVMWLUMIAAW	= 532,
    EVMWLUMIANW	= 533,
    EVMWLUSIAAW	= 534,
    EVMWLUSIANW	= 535,
    EVMWSMF	= 536,
    EVMWSMFA	= 537,
    EVMWSMFAA	= 538,
    EVMWSMFAN	= 539,
    EVMWSMI	= 540,
    EVMWSMIA	= 541,
    EVMWSMIAA	= 542,
    EVMWSMIAN	= 543,
    EVMWSSF	= 544,
    EVMWSSFA	= 545,
    EVMWSSFAA	= 546,
    EVMWSSFAN	= 547,
    EVMWUMI	= 548,
    EVMWUMIA	= 549,
    EVMWUMIAA	= 550,
    EVMWUMIAN	= 551,
    EVNAND	= 552,
    EVNEG	= 553,
    EVNOR	= 554,
    EVOR	= 555,
    EVORC	= 556,
    EVRLW	= 557,
    EVRLWI	= 558,
    EVRNDW	= 559,
    EVSLW	= 560,
    EVSLWI	= 561,
    EVSPLATFI	= 562,
    EVSPLATI	= 563,
    EVSRWIS	= 564,
    EVSRWIU	= 565,
    EVSRWS	= 566,
    EVSRWU	= 567,
    EVSTDD	= 568,
    EVSTDDX	= 569,
    EVSTDH	= 570,
    EVSTDHX	= 571,
    EVSTDW	= 572,
    EVSTDWX	= 573,
    EVSTWHE	= 574,
    EVSTWHEX	= 575,
    EVSTWHO	= 576,
    EVSTWHOX	= 577,
    EVSTWWE	= 578,
    EVSTWWEX	= 579,
    EVSTWWO	= 580,
    EVSTWWOX	= 581,
    EVSUBFSMIAAW	= 582,
    EVSUBFSSIAAW	= 583,
    EVSUBFUMIAAW	= 584,
    EVSUBFUSIAAW	= 585,
    EVSUBFW	= 586,
    EVSUBIFW	= 587,
    EVXOR	= 588,
    EXTLDI	= 589,
    EXTLDIo	= 590,
    EXTLWI	= 591,
    EXTLWIo	= 592,
    EXTRDI	= 593,
    EXTRDIo	= 594,
    EXTRWI	= 595,
    EXTRWIo	= 596,
    EXTSB	= 597,
    EXTSB8	= 598,
    EXTSB8_32_64	= 599,
    EXTSB8o	= 600,
    EXTSBo	= 601,
    EXTSH	= 602,
    EXTSH8	= 603,
    EXTSH8_32_64	= 604,
    EXTSH8o	= 605,
    EXTSHo	= 606,
    EXTSW	= 607,
    EXTSW_32_64	= 608,
    EXTSW_32_64o	= 609,
    EXTSWo	= 610,
    EnforceIEIO	= 611,
    FABSD	= 612,
    FABSDo	= 613,
    FABSS	= 614,
    FABSSo	= 615,
    FADD	= 616,
    FADDS	= 617,
    FADDSo	= 618,
    FADDo	= 619,
    FADDrtz	= 620,
    FCFID	= 621,
    FCFIDS	= 622,
    FCFIDSo	= 623,
    FCFIDU	= 624,
    FCFIDUS	= 625,
    FCFIDUSo	= 626,
    FCFIDUo	= 627,
    FCFIDo	= 628,
    FCMPUD	= 629,
    FCMPUS	= 630,
    FCPSGND	= 631,
    FCPSGNDo	= 632,
    FCPSGNS	= 633,
    FCPSGNSo	= 634,
    FCTID	= 635,
    FCTIDUZ	= 636,
    FCTIDUZo	= 637,
    FCTIDZ	= 638,
    FCTIDZo	= 639,
    FCTIDo	= 640,
    FCTIW	= 641,
    FCTIWUZ	= 642,
    FCTIWUZo	= 643,
    FCTIWZ	= 644,
    FCTIWZo	= 645,
    FCTIWo	= 646,
    FDIV	= 647,
    FDIVS	= 648,
    FDIVSo	= 649,
    FDIVo	= 650,
    FMADD	= 651,
    FMADDS	= 652,
    FMADDSo	= 653,
    FMADDo	= 654,
    FMR	= 655,
    FMRo	= 656,
    FMSUB	= 657,
    FMSUBS	= 658,
    FMSUBSo	= 659,
    FMSUBo	= 660,
    FMUL	= 661,
    FMULS	= 662,
    FMULSo	= 663,
    FMULo	= 664,
    FNABSD	= 665,
    FNABSDo	= 666,
    FNABSS	= 667,
    FNABSSo	= 668,
    FNEGD	= 669,
    FNEGDo	= 670,
    FNEGS	= 671,
    FNEGSo	= 672,
    FNMADD	= 673,
    FNMADDS	= 674,
    FNMADDSo	= 675,
    FNMADDo	= 676,
    FNMSUB	= 677,
    FNMSUBS	= 678,
    FNMSUBSo	= 679,
    FNMSUBo	= 680,
    FRE	= 681,
    FRES	= 682,
    FRESo	= 683,
    FREo	= 684,
    FRIMD	= 685,
    FRIMDo	= 686,
    FRIMS	= 687,
    FRIMSo	= 688,
    FRIND	= 689,
    FRINDo	= 690,
    FRINS	= 691,
    FRINSo	= 692,
    FRIPD	= 693,
    FRIPDo	= 694,
    FRIPS	= 695,
    FRIPSo	= 696,
    FRIZD	= 697,
    FRIZDo	= 698,
    FRIZS	= 699,
    FRIZSo	= 700,
    FRSP	= 701,
    FRSPo	= 702,
    FRSQRTE	= 703,
    FRSQRTES	= 704,
    FRSQRTESo	= 705,
    FRSQRTEo	= 706,
    FSELD	= 707,
    FSELDo	= 708,
    FSELS	= 709,
    FSELSo	= 710,
    FSQRT	= 711,
    FSQRTS	= 712,
    FSQRTSo	= 713,
    FSQRTo	= 714,
    FSUB	= 715,
    FSUBS	= 716,
    FSUBSo	= 717,
    FSUBo	= 718,
    GETtlsADDR	= 719,
    GETtlsADDR32	= 720,
    GETtlsldADDR	= 721,
    GETtlsldADDR32	= 722,
    HRFID	= 723,
    ICBI	= 724,
    ICBT	= 725,
    ICCCI	= 726,
    INSLWI	= 727,
    INSLWIo	= 728,
    INSRDI	= 729,
    INSRDIo	= 730,
    INSRWI	= 731,
    INSRWIo	= 732,
    ISEL	= 733,
    ISEL8	= 734,
    ISYNC	= 735,
    LA	= 736,
    LAx	= 737,
    LBARX	= 738,
    LBARXL	= 739,
    LBZ	= 740,
    LBZ8	= 741,
    LBZCIX	= 742,
    LBZU	= 743,
    LBZU8	= 744,
    LBZUX	= 745,
    LBZUX8	= 746,
    LBZX	= 747,
    LBZX8	= 748,
    LD	= 749,
    LDARX	= 750,
    LDARXL	= 751,
    LDAT	= 752,
    LDBRX	= 753,
    LDCIX	= 754,
    LDMX	= 755,
    LDU	= 756,
    LDUX	= 757,
    LDX	= 758,
    LDgotTprelL	= 759,
    LDgotTprelL32	= 760,
    LDtoc	= 761,
    LDtocBA	= 762,
    LDtocCPT	= 763,
    LDtocJTI	= 764,
    LDtocL	= 765,
    LFD	= 766,
    LFDU	= 767,
    LFDUX	= 768,
    LFDX	= 769,
    LFIWAX	= 770,
    LFIWZX	= 771,
    LFS	= 772,
    LFSU	= 773,
    LFSUX	= 774,
    LFSX	= 775,
    LHA	= 776,
    LHA8	= 777,
    LHARX	= 778,
    LHARXL	= 779,
    LHAU	= 780,
    LHAU8	= 781,
    LHAUX	= 782,
    LHAUX8	= 783,
    LHAX	= 784,
    LHAX8	= 785,
    LHBRX	= 786,
    LHBRX8	= 787,
    LHZ	= 788,
    LHZ8	= 789,
    LHZCIX	= 790,
    LHZU	= 791,
    LHZU8	= 792,
    LHZUX	= 793,
    LHZUX8	= 794,
    LHZX	= 795,
    LHZX8	= 796,
    LI	= 797,
    LI8	= 798,
    LIS	= 799,
    LIS8	= 800,
    LMW	= 801,
    LSWI	= 802,
    LVEBX	= 803,
    LVEHX	= 804,
    LVEWX	= 805,
    LVSL	= 806,
    LVSR	= 807,
    LVX	= 808,
    LVXL	= 809,
    LWA	= 810,
    LWARX	= 811,
    LWARXL	= 812,
    LWAT	= 813,
    LWAUX	= 814,
    LWAX	= 815,
    LWAX_32	= 816,
    LWA_32	= 817,
    LWBRX	= 818,
    LWBRX8	= 819,
    LWZ	= 820,
    LWZ8	= 821,
    LWZCIX	= 822,
    LWZU	= 823,
    LWZU8	= 824,
    LWZUX	= 825,
    LWZUX8	= 826,
    LWZX	= 827,
    LWZX8	= 828,
    LWZtoc	= 829,
    LXSD	= 830,
    LXSDX	= 831,
    LXSIBZX	= 832,
    LXSIHZX	= 833,
    LXSIWAX	= 834,
    LXSIWZX	= 835,
    LXSSP	= 836,
    LXSSPX	= 837,
    LXV	= 838,
    LXVB16X	= 839,
    LXVD2X	= 840,
    LXVDSX	= 841,
    LXVH8X	= 842,
    LXVL	= 843,
    LXVLL	= 844,
    LXVW4X	= 845,
    LXVWSX	= 846,
    LXVX	= 847,
    MBAR	= 848,
    MCRF	= 849,
    MCRFS	= 850,
    MCRXRX	= 851,
    MFBHRBE	= 852,
    MFCR	= 853,
    MFCR8	= 854,
    MFCTR	= 855,
    MFCTR8	= 856,
    MFDCR	= 857,
    MFFS	= 858,
    MFFSo	= 859,
    MFLR	= 860,
    MFLR8	= 861,
    MFMSR	= 862,
    MFOCRF	= 863,
    MFOCRF8	= 864,
    MFSPR	= 865,
    MFSPR8	= 866,
    MFSR	= 867,
    MFSRIN	= 868,
    MFTB	= 869,
    MFTB8	= 870,
    MFVRSAVE	= 871,
    MFVRSAVEv	= 872,
    MFVSCR	= 873,
    MFVSRD	= 874,
    MFVSRLD	= 875,
    MFVSRWZ	= 876,
    MSGSYNC	= 877,
    MSYNC	= 878,
    MTCRF	= 879,
    MTCRF8	= 880,
    MTCTR	= 881,
    MTCTR8	= 882,
    MTCTR8loop	= 883,
    MTCTRloop	= 884,
    MTDCR	= 885,
    MTFSB0	= 886,
    MTFSB1	= 887,
    MTFSF	= 888,
    MTFSFI	= 889,
    MTFSFIo	= 890,
    MTFSFb	= 891,
    MTFSFo	= 892,
    MTLR	= 893,
    MTLR8	= 894,
    MTMSR	= 895,
    MTMSRD	= 896,
    MTOCRF	= 897,
    MTOCRF8	= 898,
    MTSPR	= 899,
    MTSPR8	= 900,
    MTSR	= 901,
    MTSRIN	= 902,
    MTVRSAVE	= 903,
    MTVRSAVEv	= 904,
    MTVSCR	= 905,
    MTVSRD	= 906,
    MTVSRDD	= 907,
    MTVSRWA	= 908,
    MTVSRWS	= 909,
    MTVSRWZ	= 910,
    MULHD	= 911,
    MULHDU	= 912,
    MULHDUo	= 913,
    MULHDo	= 914,
    MULHW	= 915,
    MULHWU	= 916,
    MULHWUo	= 917,
    MULHWo	= 918,
    MULLD	= 919,
    MULLDo	= 920,
    MULLI	= 921,
    MULLI8	= 922,
    MULLW	= 923,
    MULLWo	= 924,
    MoveGOTtoLR	= 925,
    MovePCtoLR	= 926,
    MovePCtoLR8	= 927,
    NAND	= 928,
    NAND8	= 929,
    NAND8o	= 930,
    NANDo	= 931,
    NAP	= 932,
    NEG	= 933,
    NEG8	= 934,
    NEG8o	= 935,
    NEGo	= 936,
    NOP	= 937,
    NOP_GT_PWR6	= 938,
    NOP_GT_PWR7	= 939,
    NOR	= 940,
    NOR8	= 941,
    NOR8o	= 942,
    NORo	= 943,
    OR	= 944,
    OR8	= 945,
    OR8o	= 946,
    ORC	= 947,
    ORC8	= 948,
    ORC8o	= 949,
    ORCo	= 950,
    ORI	= 951,
    ORI8	= 952,
    ORIS	= 953,
    ORIS8	= 954,
    ORo	= 955,
    POPCNTD	= 956,
    POPCNTW	= 957,
    PPC32GOT	= 958,
    PPC32PICGOT	= 959,
    QVALIGNI	= 960,
    QVALIGNIb	= 961,
    QVALIGNIs	= 962,
    QVESPLATI	= 963,
    QVESPLATIb	= 964,
    QVESPLATIs	= 965,
    QVFABS	= 966,
    QVFABSs	= 967,
    QVFADD	= 968,
    QVFADDS	= 969,
    QVFADDSs	= 970,
    QVFCFID	= 971,
    QVFCFIDS	= 972,
    QVFCFIDU	= 973,
    QVFCFIDUS	= 974,
    QVFCFIDb	= 975,
    QVFCMPEQ	= 976,
    QVFCMPEQb	= 977,
    QVFCMPEQbs	= 978,
    QVFCMPGT	= 979,
    QVFCMPGTb	= 980,
    QVFCMPGTbs	= 981,
    QVFCMPLT	= 982,
    QVFCMPLTb	= 983,
    QVFCMPLTbs	= 984,
    QVFCPSGN	= 985,
    QVFCPSGNs	= 986,
    QVFCTID	= 987,
    QVFCTIDU	= 988,
    QVFCTIDUZ	= 989,
    QVFCTIDZ	= 990,
    QVFCTIDb	= 991,
    QVFCTIW	= 992,
    QVFCTIWU	= 993,
    QVFCTIWUZ	= 994,
    QVFCTIWZ	= 995,
    QVFLOGICAL	= 996,
    QVFLOGICALb	= 997,
    QVFLOGICALs	= 998,
    QVFMADD	= 999,
    QVFMADDS	= 1000,
    QVFMADDSs	= 1001,
    QVFMR	= 1002,
    QVFMRb	= 1003,
    QVFMRs	= 1004,
    QVFMSUB	= 1005,
    QVFMSUBS	= 1006,
    QVFMSUBSs	= 1007,
    QVFMUL	= 1008,
    QVFMULS	= 1009,
    QVFMULSs	= 1010,
    QVFNABS	= 1011,
    QVFNABSs	= 1012,
    QVFNEG	= 1013,
    QVFNEGs	= 1014,
    QVFNMADD	= 1015,
    QVFNMADDS	= 1016,
    QVFNMADDSs	= 1017,
    QVFNMSUB	= 1018,
    QVFNMSUBS	= 1019,
    QVFNMSUBSs	= 1020,
    QVFPERM	= 1021,
    QVFPERMs	= 1022,
    QVFRE	= 1023,
    QVFRES	= 1024,
    QVFRESs	= 1025,
    QVFRIM	= 1026,
    QVFRIMs	= 1027,
    QVFRIN	= 1028,
    QVFRINs	= 1029,
    QVFRIP	= 1030,
    QVFRIPs	= 1031,
    QVFRIZ	= 1032,
    QVFRIZs	= 1033,
    QVFRSP	= 1034,
    QVFRSPs	= 1035,
    QVFRSQRTE	= 1036,
    QVFRSQRTES	= 1037,
    QVFRSQRTESs	= 1038,
    QVFSEL	= 1039,
    QVFSELb	= 1040,
    QVFSELbb	= 1041,
    QVFSELbs	= 1042,
    QVFSUB	= 1043,
    QVFSUBS	= 1044,
    QVFSUBSs	= 1045,
    QVFTSTNAN	= 1046,
    QVFTSTNANb	= 1047,
    QVFTSTNANbs	= 1048,
    QVFXMADD	= 1049,
    QVFXMADDS	= 1050,
    QVFXMUL	= 1051,
    QVFXMULS	= 1052,
    QVFXXCPNMADD	= 1053,
    QVFXXCPNMADDS	= 1054,
    QVFXXMADD	= 1055,
    QVFXXMADDS	= 1056,
    QVFXXNPMADD	= 1057,
    QVFXXNPMADDS	= 1058,
    QVGPCI	= 1059,
    QVLFCDUX	= 1060,
    QVLFCDUXA	= 1061,
    QVLFCDX	= 1062,
    QVLFCDXA	= 1063,
    QVLFCSUX	= 1064,
    QVLFCSUXA	= 1065,
    QVLFCSX	= 1066,
    QVLFCSXA	= 1067,
    QVLFCSXs	= 1068,
    QVLFDUX	= 1069,
    QVLFDUXA	= 1070,
    QVLFDX	= 1071,
    QVLFDXA	= 1072,
    QVLFDXb	= 1073,
    QVLFIWAX	= 1074,
    QVLFIWAXA	= 1075,
    QVLFIWZX	= 1076,
    QVLFIWZXA	= 1077,
    QVLFSUX	= 1078,
    QVLFSUXA	= 1079,
    QVLFSX	= 1080,
    QVLFSXA	= 1081,
    QVLFSXb	= 1082,
    QVLFSXs	= 1083,
    QVLPCLDX	= 1084,
    QVLPCLSX	= 1085,
    QVLPCLSXint	= 1086,
    QVLPCRDX	= 1087,
    QVLPCRSX	= 1088,
    QVSTFCDUX	= 1089,
    QVSTFCDUXA	= 1090,
    QVSTFCDUXI	= 1091,
    QVSTFCDUXIA	= 1092,
    QVSTFCDX	= 1093,
    QVSTFCDXA	= 1094,
    QVSTFCDXI	= 1095,
    QVSTFCDXIA	= 1096,
    QVSTFCSUX	= 1097,
    QVSTFCSUXA	= 1098,
    QVSTFCSUXI	= 1099,
    QVSTFCSUXIA	= 1100,
    QVSTFCSX	= 1101,
    QVSTFCSXA	= 1102,
    QVSTFCSXI	= 1103,
    QVSTFCSXIA	= 1104,
    QVSTFCSXs	= 1105,
    QVSTFDUX	= 1106,
    QVSTFDUXA	= 1107,
    QVSTFDUXI	= 1108,
    QVSTFDUXIA	= 1109,
    QVSTFDX	= 1110,
    QVSTFDXA	= 1111,
    QVSTFDXI	= 1112,
    QVSTFDXIA	= 1113,
    QVSTFDXb	= 1114,
    QVSTFIWX	= 1115,
    QVSTFIWXA	= 1116,
    QVSTFSUX	= 1117,
    QVSTFSUXA	= 1118,
    QVSTFSUXI	= 1119,
    QVSTFSUXIA	= 1120,
    QVSTFSUXs	= 1121,
    QVSTFSX	= 1122,
    QVSTFSXA	= 1123,
    QVSTFSXI	= 1124,
    QVSTFSXIA	= 1125,
    QVSTFSXs	= 1126,
    RESTORE_CR	= 1127,
    RESTORE_CRBIT	= 1128,
    RESTORE_VRSAVE	= 1129,
    RFCI	= 1130,
    RFDI	= 1131,
    RFEBB	= 1132,
    RFI	= 1133,
    RFID	= 1134,
    RFMCI	= 1135,
    RLDCL	= 1136,
    RLDCLo	= 1137,
    RLDCR	= 1138,
    RLDCRo	= 1139,
    RLDIC	= 1140,
    RLDICL	= 1141,
    RLDICL_32_64	= 1142,
    RLDICLo	= 1143,
    RLDICR	= 1144,
    RLDICRo	= 1145,
    RLDICo	= 1146,
    RLDIMI	= 1147,
    RLDIMIo	= 1148,
    RLWIMI	= 1149,
    RLWIMI8	= 1150,
    RLWIMI8o	= 1151,
    RLWIMIbm	= 1152,
    RLWIMIo	= 1153,
    RLWIMIobm	= 1154,
    RLWINM	= 1155,
    RLWINM8	= 1156,
    RLWINM8o	= 1157,
    RLWINMbm	= 1158,
    RLWINMo	= 1159,
    RLWINMobm	= 1160,
    RLWNM	= 1161,
    RLWNM8	= 1162,
    RLWNM8o	= 1163,
    RLWNMbm	= 1164,
    RLWNMo	= 1165,
    RLWNMobm	= 1166,
    ROTRDI	= 1167,
    ROTRDIo	= 1168,
    ROTRWI	= 1169,
    ROTRWIo	= 1170,
    ReadTB	= 1171,
    SC	= 1172,
    SELECT_CC_F4	= 1173,
    SELECT_CC_F8	= 1174,
    SELECT_CC_I4	= 1175,
    SELECT_CC_I8	= 1176,
    SELECT_CC_QBRC	= 1177,
    SELECT_CC_QFRC	= 1178,
    SELECT_CC_QSRC	= 1179,
    SELECT_CC_VRRC	= 1180,
    SELECT_CC_VSFRC	= 1181,
    SELECT_CC_VSRC	= 1182,
    SELECT_CC_VSSRC	= 1183,
    SELECT_F4	= 1184,
    SELECT_F8	= 1185,
    SELECT_I4	= 1186,
    SELECT_I8	= 1187,
    SELECT_QBRC	= 1188,
    SELECT_QFRC	= 1189,
    SELECT_QSRC	= 1190,
    SELECT_VRRC	= 1191,
    SELECT_VSFRC	= 1192,
    SELECT_VSRC	= 1193,
    SELECT_VSSRC	= 1194,
    SLBIA	= 1195,
    SLBIE	= 1196,
    SLBIEG	= 1197,
    SLBMFEE	= 1198,
    SLBMFEV	= 1199,
    SLBMTE	= 1200,
    SLBSYNC	= 1201,
    SLD	= 1202,
    SLDI	= 1203,
    SLDIo	= 1204,
    SLDo	= 1205,
    SLW	= 1206,
    SLW8	= 1207,
    SLW8o	= 1208,
    SLWI	= 1209,
    SLWIo	= 1210,
    SLWo	= 1211,
    SPILL_CR	= 1212,
    SPILL_CRBIT	= 1213,
    SPILL_VRSAVE	= 1214,
    SRAD	= 1215,
    SRADI	= 1216,
    SRADIo	= 1217,
    SRADo	= 1218,
    SRAW	= 1219,
    SRAWI	= 1220,
    SRAWIo	= 1221,
    SRAWo	= 1222,
    SRD	= 1223,
    SRDI	= 1224,
    SRDIo	= 1225,
    SRDo	= 1226,
    SRW	= 1227,
    SRW8	= 1228,
    SRW8o	= 1229,
    SRWI	= 1230,
    SRWIo	= 1231,
    SRWo	= 1232,
    STB	= 1233,
    STB8	= 1234,
    STBCIX	= 1235,
    STBCX	= 1236,
    STBU	= 1237,
    STBU8	= 1238,
    STBUX	= 1239,
    STBUX8	= 1240,
    STBX	= 1241,
    STBX8	= 1242,
    STD	= 1243,
    STDAT	= 1244,
    STDBRX	= 1245,
    STDCIX	= 1246,
    STDCX	= 1247,
    STDU	= 1248,
    STDUX	= 1249,
    STDX	= 1250,
    STFD	= 1251,
    STFDU	= 1252,
    STFDUX	= 1253,
    STFDX	= 1254,
    STFIWX	= 1255,
    STFS	= 1256,
    STFSU	= 1257,
    STFSUX	= 1258,
    STFSX	= 1259,
    STH	= 1260,
    STH8	= 1261,
    STHBRX	= 1262,
    STHCIX	= 1263,
    STHCX	= 1264,
    STHU	= 1265,
    STHU8	= 1266,
    STHUX	= 1267,
    STHUX8	= 1268,
    STHX	= 1269,
    STHX8	= 1270,
    STMW	= 1271,
    STOP	= 1272,
    STSWI	= 1273,
    STVEBX	= 1274,
    STVEHX	= 1275,
    STVEWX	= 1276,
    STVX	= 1277,
    STVXL	= 1278,
    STW	= 1279,
    STW8	= 1280,
    STWAT	= 1281,
    STWBRX	= 1282,
    STWCIX	= 1283,
    STWCX	= 1284,
    STWU	= 1285,
    STWU8	= 1286,
    STWUX	= 1287,
    STWUX8	= 1288,
    STWX	= 1289,
    STWX8	= 1290,
    STXSD	= 1291,
    STXSDX	= 1292,
    STXSIBX	= 1293,
    STXSIBXv	= 1294,
    STXSIHX	= 1295,
    STXSIHXv	= 1296,
    STXSIWX	= 1297,
    STXSSP	= 1298,
    STXSSPX	= 1299,
    STXV	= 1300,
    STXVB16X	= 1301,
    STXVD2X	= 1302,
    STXVH8X	= 1303,
    STXVL	= 1304,
    STXVLL	= 1305,
    STXVW4X	= 1306,
    STXVX	= 1307,
    SUBF	= 1308,
    SUBF8	= 1309,
    SUBF8o	= 1310,
    SUBFC	= 1311,
    SUBFC8	= 1312,
    SUBFC8o	= 1313,
    SUBFCo	= 1314,
    SUBFE	= 1315,
    SUBFE8	= 1316,
    SUBFE8o	= 1317,
    SUBFEo	= 1318,
    SUBFIC	= 1319,
    SUBFIC8	= 1320,
    SUBFME	= 1321,
    SUBFME8	= 1322,
    SUBFME8o	= 1323,
    SUBFMEo	= 1324,
    SUBFZE	= 1325,
    SUBFZE8	= 1326,
    SUBFZE8o	= 1327,
    SUBFZEo	= 1328,
    SUBFo	= 1329,
    SUBI	= 1330,
    SUBIC	= 1331,
    SUBICo	= 1332,
    SUBIS	= 1333,
    SYNC	= 1334,
    TABORT	= 1335,
    TABORTDC	= 1336,
    TABORTDCI	= 1337,
    TABORTWC	= 1338,
    TABORTWCI	= 1339,
    TAILB	= 1340,
    TAILB8	= 1341,
    TAILBA	= 1342,
    TAILBA8	= 1343,
    TAILBCTR	= 1344,
    TAILBCTR8	= 1345,
    TBEGIN	= 1346,
    TCHECK	= 1347,
    TCHECK_RET	= 1348,
    TCRETURNai	= 1349,
    TCRETURNai8	= 1350,
    TCRETURNdi	= 1351,
    TCRETURNdi8	= 1352,
    TCRETURNri	= 1353,
    TCRETURNri8	= 1354,
    TD	= 1355,
    TDI	= 1356,
    TEND	= 1357,
    TLBIA	= 1358,
    TLBIE	= 1359,
    TLBIEL	= 1360,
    TLBIVAX	= 1361,
    TLBLD	= 1362,
    TLBLI	= 1363,
    TLBRE	= 1364,
    TLBRE2	= 1365,
    TLBSX	= 1366,
    TLBSX2	= 1367,
    TLBSX2D	= 1368,
    TLBSYNC	= 1369,
    TLBWE	= 1370,
    TLBWE2	= 1371,
    TRAP	= 1372,
    TRECHKPT	= 1373,
    TRECLAIM	= 1374,
    TSR	= 1375,
    TW	= 1376,
    TWI	= 1377,
    UPDATE_VRSAVE	= 1378,
    UpdateGBR	= 1379,
    VABSDUB	= 1380,
    VABSDUH	= 1381,
    VABSDUW	= 1382,
    VADDCUQ	= 1383,
    VADDCUW	= 1384,
    VADDECUQ	= 1385,
    VADDEUQM	= 1386,
    VADDFP	= 1387,
    VADDSBS	= 1388,
    VADDSHS	= 1389,
    VADDSWS	= 1390,
    VADDUBM	= 1391,
    VADDUBS	= 1392,
    VADDUDM	= 1393,
    VADDUHM	= 1394,
    VADDUHS	= 1395,
    VADDUQM	= 1396,
    VADDUWM	= 1397,
    VADDUWS	= 1398,
    VAND	= 1399,
    VANDC	= 1400,
    VAVGSB	= 1401,
    VAVGSH	= 1402,
    VAVGSW	= 1403,
    VAVGUB	= 1404,
    VAVGUH	= 1405,
    VAVGUW	= 1406,
    VBPERMD	= 1407,
    VBPERMQ	= 1408,
    VCFSX	= 1409,
    VCFSX_0	= 1410,
    VCFUX	= 1411,
    VCFUX_0	= 1412,
    VCIPHER	= 1413,
    VCIPHERLAST	= 1414,
    VCLZB	= 1415,
    VCLZD	= 1416,
    VCLZH	= 1417,
    VCLZLSBB	= 1418,
    VCLZW	= 1419,
    VCMPBFP	= 1420,
    VCMPBFPo	= 1421,
    VCMPEQFP	= 1422,
    VCMPEQFPo	= 1423,
    VCMPEQUB	= 1424,
    VCMPEQUBo	= 1425,
    VCMPEQUD	= 1426,
    VCMPEQUDo	= 1427,
    VCMPEQUH	= 1428,
    VCMPEQUHo	= 1429,
    VCMPEQUW	= 1430,
    VCMPEQUWo	= 1431,
    VCMPGEFP	= 1432,
    VCMPGEFPo	= 1433,
    VCMPGTFP	= 1434,
    VCMPGTFPo	= 1435,
    VCMPGTSB	= 1436,
    VCMPGTSBo	= 1437,
    VCMPGTSD	= 1438,
    VCMPGTSDo	= 1439,
    VCMPGTSH	= 1440,
    VCMPGTSHo	= 1441,
    VCMPGTSW	= 1442,
    VCMPGTSWo	= 1443,
    VCMPGTUB	= 1444,
    VCMPGTUBo	= 1445,
    VCMPGTUD	= 1446,
    VCMPGTUDo	= 1447,
    VCMPGTUH	= 1448,
    VCMPGTUHo	= 1449,
    VCMPGTUW	= 1450,
    VCMPGTUWo	= 1451,
    VCMPNEB	= 1452,
    VCMPNEBo	= 1453,
    VCMPNEH	= 1454,
    VCMPNEHo	= 1455,
    VCMPNEW	= 1456,
    VCMPNEWo	= 1457,
    VCMPNEZB	= 1458,
    VCMPNEZBo	= 1459,
    VCMPNEZH	= 1460,
    VCMPNEZHo	= 1461,
    VCMPNEZW	= 1462,
    VCMPNEZWo	= 1463,
    VCTSXS	= 1464,
    VCTSXS_0	= 1465,
    VCTUXS	= 1466,
    VCTUXS_0	= 1467,
    VCTZB	= 1468,
    VCTZD	= 1469,
    VCTZH	= 1470,
    VCTZLSBB	= 1471,
    VCTZW	= 1472,
    VEQV	= 1473,
    VEXPTEFP	= 1474,
    VEXTRACTD	= 1475,
    VEXTRACTUB	= 1476,
    VEXTRACTUH	= 1477,
    VEXTRACTUW	= 1478,
    VEXTSB2D	= 1479,
    VEXTSB2Ds	= 1480,
    VEXTSB2W	= 1481,
    VEXTSB2Ws	= 1482,
    VEXTSH2D	= 1483,
    VEXTSH2Ds	= 1484,
    VEXTSH2W	= 1485,
    VEXTSH2Ws	= 1486,
    VEXTSW2D	= 1487,
    VEXTSW2Ds	= 1488,
    VEXTUBLX	= 1489,
    VEXTUBRX	= 1490,
    VEXTUHLX	= 1491,
    VEXTUHRX	= 1492,
    VEXTUWLX	= 1493,
    VEXTUWRX	= 1494,
    VGBBD	= 1495,
    VINSERTB	= 1496,
    VINSERTD	= 1497,
    VINSERTH	= 1498,
    VINSERTW	= 1499,
    VLOGEFP	= 1500,
    VMADDFP	= 1501,
    VMAXFP	= 1502,
    VMAXSB	= 1503,
    VMAXSD	= 1504,
    VMAXSH	= 1505,
    VMAXSW	= 1506,
    VMAXUB	= 1507,
    VMAXUD	= 1508,
    VMAXUH	= 1509,
    VMAXUW	= 1510,
    VMHADDSHS	= 1511,
    VMHRADDSHS	= 1512,
    VMINFP	= 1513,
    VMINSB	= 1514,
    VMINSD	= 1515,
    VMINSH	= 1516,
    VMINSW	= 1517,
    VMINUB	= 1518,
    VMINUD	= 1519,
    VMINUH	= 1520,
    VMINUW	= 1521,
    VMLADDUHM	= 1522,
    VMRGEW	= 1523,
    VMRGHB	= 1524,
    VMRGHH	= 1525,
    VMRGHW	= 1526,
    VMRGLB	= 1527,
    VMRGLH	= 1528,
    VMRGLW	= 1529,
    VMRGOW	= 1530,
    VMSUMMBM	= 1531,
    VMSUMSHM	= 1532,
    VMSUMSHS	= 1533,
    VMSUMUBM	= 1534,
    VMSUMUHM	= 1535,
    VMSUMUHS	= 1536,
    VMUL10CUQ	= 1537,
    VMUL10ECUQ	= 1538,
    VMUL10EUQ	= 1539,
    VMUL10UQ	= 1540,
    VMULESB	= 1541,
    VMULESH	= 1542,
    VMULESW	= 1543,
    VMULEUB	= 1544,
    VMULEUH	= 1545,
    VMULEUW	= 1546,
    VMULOSB	= 1547,
    VMULOSH	= 1548,
    VMULOSW	= 1549,
    VMULOUB	= 1550,
    VMULOUH	= 1551,
    VMULOUW	= 1552,
    VMULUWM	= 1553,
    VNAND	= 1554,
    VNCIPHER	= 1555,
    VNCIPHERLAST	= 1556,
    VNEGD	= 1557,
    VNEGW	= 1558,
    VNMSUBFP	= 1559,
    VNOR	= 1560,
    VOR	= 1561,
    VORC	= 1562,
    VPERM	= 1563,
    VPERMR	= 1564,
    VPERMXOR	= 1565,
    VPKPX	= 1566,
    VPKSDSS	= 1567,
    VPKSDUS	= 1568,
    VPKSHSS	= 1569,
    VPKSHUS	= 1570,
    VPKSWSS	= 1571,
    VPKSWUS	= 1572,
    VPKUDUM	= 1573,
    VPKUDUS	= 1574,
    VPKUHUM	= 1575,
    VPKUHUS	= 1576,
    VPKUWUM	= 1577,
    VPKUWUS	= 1578,
    VPMSUMB	= 1579,
    VPMSUMD	= 1580,
    VPMSUMH	= 1581,
    VPMSUMW	= 1582,
    VPOPCNTB	= 1583,
    VPOPCNTD	= 1584,
    VPOPCNTH	= 1585,
    VPOPCNTW	= 1586,
    VPRTYBD	= 1587,
    VPRTYBQ	= 1588,
    VPRTYBW	= 1589,
    VREFP	= 1590,
    VRFIM	= 1591,
    VRFIN	= 1592,
    VRFIP	= 1593,
    VRFIZ	= 1594,
    VRLB	= 1595,
    VRLD	= 1596,
    VRLDMI	= 1597,
    VRLDNM	= 1598,
    VRLH	= 1599,
    VRLW	= 1600,
    VRLWMI	= 1601,
    VRLWNM	= 1602,
    VRSQRTEFP	= 1603,
    VSBOX	= 1604,
    VSEL	= 1605,
    VSHASIGMAD	= 1606,
    VSHASIGMAW	= 1607,
    VSL	= 1608,
    VSLB	= 1609,
    VSLD	= 1610,
    VSLDOI	= 1611,
    VSLH	= 1612,
    VSLO	= 1613,
    VSLV	= 1614,
    VSLW	= 1615,
    VSPLTB	= 1616,
    VSPLTBs	= 1617,
    VSPLTH	= 1618,
    VSPLTHs	= 1619,
    VSPLTISB	= 1620,
    VSPLTISH	= 1621,
    VSPLTISW	= 1622,
    VSPLTW	= 1623,
    VSR	= 1624,
    VSRAB	= 1625,
    VSRAD	= 1626,
    VSRAH	= 1627,
    VSRAW	= 1628,
    VSRB	= 1629,
    VSRD	= 1630,
    VSRH	= 1631,
    VSRO	= 1632,
    VSRV	= 1633,
    VSRW	= 1634,
    VSUBCUQ	= 1635,
    VSUBCUW	= 1636,
    VSUBECUQ	= 1637,
    VSUBEUQM	= 1638,
    VSUBFP	= 1639,
    VSUBSBS	= 1640,
    VSUBSHS	= 1641,
    VSUBSWS	= 1642,
    VSUBUBM	= 1643,
    VSUBUBS	= 1644,
    VSUBUDM	= 1645,
    VSUBUHM	= 1646,
    VSUBUHS	= 1647,
    VSUBUQM	= 1648,
    VSUBUWM	= 1649,
    VSUBUWS	= 1650,
    VSUM2SWS	= 1651,
    VSUM4SBS	= 1652,
    VSUM4SHS	= 1653,
    VSUM4UBS	= 1654,
    VSUMSWS	= 1655,
    VUPKHPX	= 1656,
    VUPKHSB	= 1657,
    VUPKHSH	= 1658,
    VUPKHSW	= 1659,
    VUPKLPX	= 1660,
    VUPKLSB	= 1661,
    VUPKLSH	= 1662,
    VUPKLSW	= 1663,
    VXOR	= 1664,
    V_SET0	= 1665,
    V_SET0B	= 1666,
    V_SET0H	= 1667,
    V_SETALLONES	= 1668,
    V_SETALLONESB	= 1669,
    V_SETALLONESH	= 1670,
    WAIT	= 1671,
    WRTEE	= 1672,
    WRTEEI	= 1673,
    XOR	= 1674,
    XOR8	= 1675,
    XOR8o	= 1676,
    XORI	= 1677,
    XORI8	= 1678,
    XORIS	= 1679,
    XORIS8	= 1680,
    XORo	= 1681,
    XSABSDP	= 1682,
    XSABSQP	= 1683,
    XSADDDP	= 1684,
    XSADDQP	= 1685,
    XSADDQPO	= 1686,
    XSADDSP	= 1687,
    XSCMPEQDP	= 1688,
    XSCMPEXPDP	= 1689,
    XSCMPEXPQP	= 1690,
    XSCMPGEDP	= 1691,
    XSCMPGTDP	= 1692,
    XSCMPNEDP	= 1693,
    XSCMPODP	= 1694,
    XSCMPOQP	= 1695,
    XSCMPUDP	= 1696,
    XSCMPUQP	= 1697,
    XSCPSGNDP	= 1698,
    XSCPSGNQP	= 1699,
    XSCVDPHP	= 1700,
    XSCVDPQP	= 1701,
    XSCVDPSP	= 1702,
    XSCVDPSPN	= 1703,
    XSCVDPSXDS	= 1704,
    XSCVDPSXDSs	= 1705,
    XSCVDPSXWS	= 1706,
    XSCVDPSXWSs	= 1707,
    XSCVDPUXDS	= 1708,
    XSCVDPUXDSs	= 1709,
    XSCVDPUXWS	= 1710,
    XSCVDPUXWSs	= 1711,
    XSCVHPDP	= 1712,
    XSCVQPDP	= 1713,
    XSCVQPDPO	= 1714,
    XSCVQPSDZ	= 1715,
    XSCVQPSWZ	= 1716,
    XSCVQPUDZ	= 1717,
    XSCVQPUWZ	= 1718,
    XSCVSDQP	= 1719,
    XSCVSPDP	= 1720,
    XSCVSPDPN	= 1721,
    XSCVSXDDP	= 1722,
    XSCVSXDSP	= 1723,
    XSCVUDQP	= 1724,
    XSCVUXDDP	= 1725,
    XSCVUXDSP	= 1726,
    XSDIVDP	= 1727,
    XSDIVQP	= 1728,
    XSDIVQPO	= 1729,
    XSDIVSP	= 1730,
    XSIEXPDP	= 1731,
    XSIEXPQP	= 1732,
    XSMADDADP	= 1733,
    XSMADDASP	= 1734,
    XSMADDMDP	= 1735,
    XSMADDMSP	= 1736,
    XSMADDQP	= 1737,
    XSMADDQPO	= 1738,
    XSMAXCDP	= 1739,
    XSMAXDP	= 1740,
    XSMAXJDP	= 1741,
    XSMINCDP	= 1742,
    XSMINDP	= 1743,
    XSMINJDP	= 1744,
    XSMSUBADP	= 1745,
    XSMSUBASP	= 1746,
    XSMSUBMDP	= 1747,
    XSMSUBMSP	= 1748,
    XSMSUBQP	= 1749,
    XSMSUBQPO	= 1750,
    XSMULDP	= 1751,
    XSMULQP	= 1752,
    XSMULQPO	= 1753,
    XSMULSP	= 1754,
    XSNABSDP	= 1755,
    XSNABSQP	= 1756,
    XSNEGDP	= 1757,
    XSNEGQP	= 1758,
    XSNMADDADP	= 1759,
    XSNMADDASP	= 1760,
    XSNMADDMDP	= 1761,
    XSNMADDMSP	= 1762,
    XSNMADDQP	= 1763,
    XSNMADDQPO	= 1764,
    XSNMSUBADP	= 1765,
    XSNMSUBASP	= 1766,
    XSNMSUBMDP	= 1767,
    XSNMSUBMSP	= 1768,
    XSNMSUBQP	= 1769,
    XSNMSUBQPO	= 1770,
    XSRDPI	= 1771,
    XSRDPIC	= 1772,
    XSRDPIM	= 1773,
    XSRDPIP	= 1774,
    XSRDPIZ	= 1775,
    XSREDP	= 1776,
    XSRESP	= 1777,
    XSRQPI	= 1778,
    XSRQPIX	= 1779,
    XSRQPXP	= 1780,
    XSRSQRTEDP	= 1781,
    XSRSQRTESP	= 1782,
    XSSQRTDP	= 1783,
    XSSQRTQP	= 1784,
    XSSQRTQPO	= 1785,
    XSSQRTSP	= 1786,
    XSSUBDP	= 1787,
    XSSUBQP	= 1788,
    XSSUBQPO	= 1789,
    XSSUBSP	= 1790,
    XSTDIVDP	= 1791,
    XSTSQRTDP	= 1792,
    XSTSTDCDP	= 1793,
    XSTSTDCQP	= 1794,
    XSTSTDCSP	= 1795,
    XSXEXPDP	= 1796,
    XSXEXPQP	= 1797,
    XSXSIGDP	= 1798,
    XSXSIGQP	= 1799,
    XVABSDP	= 1800,
    XVABSSP	= 1801,
    XVADDDP	= 1802,
    XVADDSP	= 1803,
    XVCMPEQDP	= 1804,
    XVCMPEQDPo	= 1805,
    XVCMPEQSP	= 1806,
    XVCMPEQSPo	= 1807,
    XVCMPGEDP	= 1808,
    XVCMPGEDPo	= 1809,
    XVCMPGESP	= 1810,
    XVCMPGESPo	= 1811,
    XVCMPGTDP	= 1812,
    XVCMPGTDPo	= 1813,
    XVCMPGTSP	= 1814,
    XVCMPGTSPo	= 1815,
    XVCMPNEDP	= 1816,
    XVCMPNEDPo	= 1817,
    XVCMPNESP	= 1818,
    XVCMPNESPo	= 1819,
    XVCPSGNDP	= 1820,
    XVCPSGNSP	= 1821,
    XVCVDPSP	= 1822,
    XVCVDPSXDS	= 1823,
    XVCVDPSXWS	= 1824,
    XVCVDPUXDS	= 1825,
    XVCVDPUXWS	= 1826,
    XVCVHPSP	= 1827,
    XVCVSPDP	= 1828,
    XVCVSPHP	= 1829,
    XVCVSPSXDS	= 1830,
    XVCVSPSXWS	= 1831,
    XVCVSPUXDS	= 1832,
    XVCVSPUXWS	= 1833,
    XVCVSXDDP	= 1834,
    XVCVSXDSP	= 1835,
    XVCVSXWDP	= 1836,
    XVCVSXWSP	= 1837,
    XVCVUXDDP	= 1838,
    XVCVUXDSP	= 1839,
    XVCVUXWDP	= 1840,
    XVCVUXWSP	= 1841,
    XVDIVDP	= 1842,
    XVDIVSP	= 1843,
    XVIEXPDP	= 1844,
    XVIEXPSP	= 1845,
    XVMADDADP	= 1846,
    XVMADDASP	= 1847,
    XVMADDMDP	= 1848,
    XVMADDMSP	= 1849,
    XVMAXDP	= 1850,
    XVMAXSP	= 1851,
    XVMINDP	= 1852,
    XVMINSP	= 1853,
    XVMSUBADP	= 1854,
    XVMSUBASP	= 1855,
    XVMSUBMDP	= 1856,
    XVMSUBMSP	= 1857,
    XVMULDP	= 1858,
    XVMULSP	= 1859,
    XVNABSDP	= 1860,
    XVNABSSP	= 1861,
    XVNEGDP	= 1862,
    XVNEGSP	= 1863,
    XVNMADDADP	= 1864,
    XVNMADDASP	= 1865,
    XVNMADDMDP	= 1866,
    XVNMADDMSP	= 1867,
    XVNMSUBADP	= 1868,
    XVNMSUBASP	= 1869,
    XVNMSUBMDP	= 1870,
    XVNMSUBMSP	= 1871,
    XVRDPI	= 1872,
    XVRDPIC	= 1873,
    XVRDPIM	= 1874,
    XVRDPIP	= 1875,
    XVRDPIZ	= 1876,
    XVREDP	= 1877,
    XVRESP	= 1878,
    XVRSPI	= 1879,
    XVRSPIC	= 1880,
    XVRSPIM	= 1881,
    XVRSPIP	= 1882,
    XVRSPIZ	= 1883,
    XVRSQRTEDP	= 1884,
    XVRSQRTESP	= 1885,
    XVSQRTDP	= 1886,
    XVSQRTSP	= 1887,
    XVSUBDP	= 1888,
    XVSUBSP	= 1889,
    XVTDIVDP	= 1890,
    XVTDIVSP	= 1891,
    XVTSQRTDP	= 1892,
    XVTSQRTSP	= 1893,
    XVTSTDCDP	= 1894,
    XVTSTDCSP	= 1895,
    XVXEXPDP	= 1896,
    XVXEXPSP	= 1897,
    XVXSIGDP	= 1898,
    XVXSIGSP	= 1899,
    XXBRD	= 1900,
    XXBRH	= 1901,
    XXBRQ	= 1902,
    XXBRW	= 1903,
    XXEXTRACTUW	= 1904,
    XXINSERTW	= 1905,
    XXLAND	= 1906,
    XXLANDC	= 1907,
    XXLEQV	= 1908,
    XXLNAND	= 1909,
    XXLNOR	= 1910,
    XXLOR	= 1911,
    XXLORC	= 1912,
    XXLORf	= 1913,
    XXLXOR	= 1914,
    XXLXORdpz	= 1915,
    XXLXORspz	= 1916,
    XXLXORz	= 1917,
    XXMRGHW	= 1918,
    XXMRGLW	= 1919,
    XXPERM	= 1920,
    XXPERMDI	= 1921,
    XXPERMDIs	= 1922,
    XXPERMR	= 1923,
    XXSEL	= 1924,
    XXSLDWI	= 1925,
    XXSPLTIB	= 1926,
    XXSPLTW	= 1927,
    XXSPLTWs	= 1928,
    gBC	= 1929,
    gBCA	= 1930,
    gBCAat	= 1931,
    gBCCTR	= 1932,
    gBCCTRL	= 1933,
    gBCL	= 1934,
    gBCLA	= 1935,
    gBCLAat	= 1936,
    gBCLR	= 1937,
    gBCLRL	= 1938,
    gBCLat	= 1939,
    gBCat	= 1940,
    INSTRUCTION_LIST_END = 1941
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_IntSimple	= 1,
    IIC_IntGeneral	= 2,
    IIC_BrB	= 3,
    IIC_VecFP	= 4,
    IIC_IntCompare	= 5,
    IIC_SprABORT	= 6,
    IIC_LdStCOPY	= 7,
    IIC_LdStPASTE	= 8,
    IIC_BrCR	= 9,
    IIC_LdStDCBF	= 10,
    IIC_LdStLoad	= 11,
    IIC_IntDivD	= 12,
    IIC_IntDivW	= 13,
    IIC_FPGeneral	= 14,
    IIC_FPAddSub	= 15,
    IIC_FPCompare	= 16,
    IIC_FPDivD	= 17,
    IIC_FPDivS	= 18,
    IIC_FPFused	= 19,
    IIC_FPSqrtD	= 20,
    IIC_FPSqrtS	= 21,
    IIC_LdStICBI	= 22,
    IIC_IntISEL	= 23,
    IIC_SprISYNC	= 24,
    IIC_LdStLWARX	= 25,
    IIC_LdStLoadUpd	= 26,
    IIC_LdStLoadUpdX	= 27,
    IIC_LdStLD	= 28,
    IIC_LdStLDARX	= 29,
    IIC_LdStLDU	= 30,
    IIC_LdStLDUX	= 31,
    IIC_LdStLFD	= 32,
    IIC_LdStLFDU	= 33,
    IIC_LdStLFDUX	= 34,
    IIC_LdStLHA	= 35,
    IIC_LdStLHAU	= 36,
    IIC_LdStLHAUX	= 37,
    IIC_LdStLMW	= 38,
    IIC_LdStLWA	= 39,
    IIC_BrMCR	= 40,
    IIC_BrMCRX	= 41,
    IIC_SprMFCR	= 42,
    IIC_SprMFSPR	= 43,
    IIC_IntMFFS	= 44,
    IIC_SprMFMSR	= 45,
    IIC_SprMFCRF	= 46,
    IIC_SprMFSR	= 47,
    IIC_SprMFTB	= 48,
    IIC_LdStStore	= 49,
    IIC_VecGeneral	= 50,
    IIC_SprMSGSYNC	= 51,
    IIC_LdStSync	= 52,
    IIC_SprMTSPR	= 53,
    IIC_IntMTFSB0	= 54,
    IIC_SprMTMSR	= 55,
    IIC_SprMTMSRD	= 56,
    IIC_SprMTSR	= 57,
    IIC_IntMulHW	= 58,
    IIC_IntMulHWU	= 59,
    IIC_IntMulHD	= 60,
    IIC_IntMulLI	= 61,
    IIC_VecPerm	= 62,
    IIC_LdStSTFD	= 63,
    IIC_LdStSTFDU	= 64,
    IIC_SprRFI	= 65,
    IIC_IntRFID	= 66,
    IIC_IntRotateD	= 67,
    IIC_IntRotateDI	= 68,
    IIC_IntRotate	= 69,
    IIC_SprSLBIA	= 70,
    IIC_SprSLBIE	= 71,
    IIC_SprSLBIEG	= 72,
    IIC_SprSLBMFEE	= 73,
    IIC_SprSLBMFEV	= 74,
    IIC_SprSLBMTE	= 75,
    IIC_SprSLBSYNC	= 76,
    IIC_IntShift	= 77,
    IIC_LdStSTWCX	= 78,
    IIC_LdStStoreUpd	= 79,
    IIC_LdStSTD	= 80,
    IIC_LdStSTDCX	= 81,
    IIC_LdStSTDU	= 82,
    IIC_LdStSTDUX	= 83,
    IIC_SprSTOP	= 84,
    IIC_IntTrapD	= 85,
    IIC_SprTLBIA	= 86,
    IIC_SprTLBIE	= 87,
    IIC_SprTLBIEL	= 88,
    IIC_SprTLBSYNC	= 89,
    IIC_IntTrapW	= 90,
    IIC_VecFPCompare	= 91,
    SCHED_LIST_END = 92
  };
} // end Sched namespace
} // end PPC namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { PPC::CR0, 0 };
static const MCPhysReg ImplicitList2[] = { PPC::CARRY, 0 };
static const MCPhysReg ImplicitList3[] = { PPC::CARRY, PPC::CR0, 0 };
static const MCPhysReg ImplicitList4[] = { PPC::X0, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList5[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList6[] = { PPC::R1, 0 };
static const MCPhysReg ImplicitList7[] = { PPC::CTR, 0 };
static const MCPhysReg ImplicitList8[] = { PPC::CTR8, 0 };
static const MCPhysReg ImplicitList9[] = { PPC::CTR, PPC::RM, 0 };
static const MCPhysReg ImplicitList10[] = { PPC::LR, 0 };
static const MCPhysReg ImplicitList11[] = { PPC::CTR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList12[] = { PPC::LR8, 0 };
static const MCPhysReg ImplicitList13[] = { PPC::RM, 0 };
static const MCPhysReg ImplicitList14[] = { PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList15[] = { PPC::CR6, 0 };
static const MCPhysReg ImplicitList16[] = { PPC::LR8, PPC::X2, 0 };
static const MCPhysReg ImplicitList17[] = { PPC::CTR, PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList18[] = { PPC::CTR8, PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList19[] = { PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList20[] = { PPC::CR1EQ, 0 };
static const MCPhysReg ImplicitList21[] = { PPC::X1, 0 };
static const MCPhysReg ImplicitList22[] = { PPC::CR1, 0 };
static const MCPhysReg ImplicitList23[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList24[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList25[] = { PPC::LR, PPC::CTR, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo94[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo98[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo195[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo196[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo199[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo201[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { PPC::CTRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { PPC::CTRRC8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo220[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };

extern const MCInstrDesc PPCInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #18 = PATCHPOINT
  { 19,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #19 = LOAD_STACK_GUARD
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #20 = STATEPOINT
  { 21,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #21 = LOCAL_ESCAPE
  { 22,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #22 = FAULTING_LOAD_OP
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = PATCHABLE_OP
  { 24,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #24 = PATCHABLE_FUNCTION_ENTER
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #25 = PATCHABLE_RET
  { 26,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #26 = PATCHABLE_FUNCTION_EXIT
  { 27,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #27 = PATCHABLE_TAIL_CALL
  { 28,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #28 = G_ADD
  { 29,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #29 = G_SUB
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #30 = G_MUL
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_SDIV
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_UDIV
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_SREM
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_UREM
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_AND
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_OR
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_XOR
  { 38,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #38 = G_FRAME_INDEX
  { 39,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #39 = G_GLOBAL_VALUE
  { 40,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #40 = G_EXTRACT
  { 41,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #41 = G_INSERT
  { 42,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #42 = G_SEQUENCE
  { 43,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #43 = G_PTRTOINT
  { 44,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #44 = G_INTTOPTR
  { 45,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = G_BITCAST
  { 46,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #46 = G_LOAD
  { 47,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #47 = G_STORE
  { 48,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #48 = G_BRCOND
  { 49,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #49 = G_INTRINSIC
  { 50,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #50 = G_INTRINSIC_W_SIDE_EFFECTS
  { 51,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #51 = G_ANYEXT
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = G_TRUNC
  { 53,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #53 = G_CONSTANT
  { 54,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #54 = G_FCONSTANT
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #55 = G_SEXT
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #56 = G_ZEXT
  { 57,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #57 = G_SHL
  { 58,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #58 = G_LSHR
  { 59,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #59 = G_ASHR
  { 60,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #60 = G_ICMP
  { 61,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #61 = G_FCMP
  { 62,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #62 = G_SELECT
  { 63,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #63 = G_UADDE
  { 64,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #64 = G_USUBE
  { 65,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #65 = G_SADDO
  { 66,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #66 = G_SSUBO
  { 67,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #67 = G_UMULO
  { 68,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #68 = G_SMULO
  { 69,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #69 = G_FADD
  { 70,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #70 = G_FSUB
  { 71,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #71 = G_FMUL
  { 72,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #72 = G_FDIV
  { 73,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #73 = G_FREM
  { 74,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #74 = G_FPEXT
  { 75,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #75 = G_FPTRUNC
  { 76,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #76 = G_FPTOSI
  { 77,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #77 = G_FPTOUI
  { 78,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #78 = G_SITOFP
  { 79,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #79 = G_UITOFP
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #80 = G_GEP
  { 81,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #81 = G_BR
  { 82,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #82 = ADD4
  { 83,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #83 = ADD4TLS
  { 84,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #84 = ADD4o
  { 85,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #85 = ADD8
  { 86,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #86 = ADD8TLS
  { 87,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #87 = ADD8TLS_
  { 88,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #88 = ADD8o
  { 89,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #89 = ADDC
  { 90,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo23, -1 ,nullptr },  // Inst #90 = ADDC8
  { 91,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo23, -1 ,nullptr },  // Inst #91 = ADDC8o
  { 92,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #92 = ADDCo
  { 93,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #93 = ADDE
  { 94,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo23, -1 ,nullptr },  // Inst #94 = ADDE8
  { 95,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo23, -1 ,nullptr },  // Inst #95 = ADDE8o
  { 96,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #96 = ADDEo
  { 97,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #97 = ADDI
  { 98,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #98 = ADDI8
  { 99,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #99 = ADDIC
  { 100,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo25, -1 ,nullptr },  // Inst #100 = ADDIC8
  { 101,	3,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, ImplicitList3, OperandInfo22, -1 ,nullptr },  // Inst #101 = ADDICo
  { 102,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #102 = ADDIS
  { 103,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #103 = ADDIS8
  { 104,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #104 = ADDISdtprelHA
  { 105,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #105 = ADDISdtprelHA32
  { 106,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #106 = ADDISgotTprelHA
  { 107,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #107 = ADDIStlsgdHA
  { 108,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #108 = ADDIStlsldHA
  { 109,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #109 = ADDIStocHA
  { 110,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #110 = ADDIdtprelL
  { 111,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #111 = ADDIdtprelL32
  { 112,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #112 = ADDItlsgdL
  { 113,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #113 = ADDItlsgdL32
  { 114,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo27, -1 ,nullptr },  // Inst #114 = ADDItlsgdLADDR
  { 115,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo28, -1 ,nullptr },  // Inst #115 = ADDItlsgdLADDR32
  { 116,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #116 = ADDItlsldL
  { 117,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #117 = ADDItlsldL32
  { 118,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo27, -1 ,nullptr },  // Inst #118 = ADDItlsldLADDR
  { 119,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo28, -1 ,nullptr },  // Inst #119 = ADDItlsldLADDR32
  { 120,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #120 = ADDItocL
  { 121,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #121 = ADDME
  { 122,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #122 = ADDME8
  { 123,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo30, -1 ,nullptr },  // Inst #123 = ADDME8o
  { 124,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #124 = ADDMEo
  { 125,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #125 = ADDZE
  { 126,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #126 = ADDZE8
  { 127,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo30, -1 ,nullptr },  // Inst #127 = ADDZE8o
  { 128,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #128 = ADDZEo
  { 129,	1,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo2, -1 ,nullptr },  // Inst #129 = ADJCALLSTACKDOWN
  { 130,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo7, -1 ,nullptr },  // Inst #130 = ADJCALLSTACKUP
  { 131,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #131 = AND
  { 132,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #132 = AND8
  { 133,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #133 = AND8o
  { 134,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #134 = ANDC
  { 135,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #135 = ANDC8
  { 136,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #136 = ANDC8o
  { 137,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #137 = ANDCo
  { 138,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #138 = ANDISo
  { 139,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo25, -1 ,nullptr },  // Inst #139 = ANDISo8
  { 140,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #140 = ANDIo
  { 141,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo25, -1 ,nullptr },  // Inst #141 = ANDIo8
  { 142,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #142 = ANDIo_1_EQ_BIT
  { 143,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #143 = ANDIo_1_EQ_BIT8
  { 144,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #144 = ANDIo_1_GT_BIT
  { 145,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #145 = ANDIo_1_GT_BIT8
  { 146,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #146 = ANDo
  { 147,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #147 = ATOMIC_CMP_SWAP_I16
  { 148,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #148 = ATOMIC_CMP_SWAP_I32
  { 149,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #149 = ATOMIC_CMP_SWAP_I64
  { 150,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #150 = ATOMIC_CMP_SWAP_I8
  { 151,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #151 = ATOMIC_LOAD_ADD_I16
  { 152,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #152 = ATOMIC_LOAD_ADD_I32
  { 153,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #153 = ATOMIC_LOAD_ADD_I64
  { 154,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #154 = ATOMIC_LOAD_ADD_I8
  { 155,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #155 = ATOMIC_LOAD_AND_I16
  { 156,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #156 = ATOMIC_LOAD_AND_I32
  { 157,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #157 = ATOMIC_LOAD_AND_I64
  { 158,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #158 = ATOMIC_LOAD_AND_I8
  { 159,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #159 = ATOMIC_LOAD_MAX_I16
  { 160,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #160 = ATOMIC_LOAD_MAX_I32
  { 161,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #161 = ATOMIC_LOAD_MAX_I64
  { 162,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #162 = ATOMIC_LOAD_MAX_I8
  { 163,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #163 = ATOMIC_LOAD_MIN_I16
  { 164,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #164 = ATOMIC_LOAD_MIN_I32
  { 165,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #165 = ATOMIC_LOAD_MIN_I64
  { 166,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #166 = ATOMIC_LOAD_MIN_I8
  { 167,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #167 = ATOMIC_LOAD_NAND_I16
  { 168,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #168 = ATOMIC_LOAD_NAND_I32
  { 169,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #169 = ATOMIC_LOAD_NAND_I64
  { 170,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #170 = ATOMIC_LOAD_NAND_I8
  { 171,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #171 = ATOMIC_LOAD_OR_I16
  { 172,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #172 = ATOMIC_LOAD_OR_I32
  { 173,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #173 = ATOMIC_LOAD_OR_I64
  { 174,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #174 = ATOMIC_LOAD_OR_I8
  { 175,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #175 = ATOMIC_LOAD_SUB_I16
  { 176,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #176 = ATOMIC_LOAD_SUB_I32
  { 177,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #177 = ATOMIC_LOAD_SUB_I64
  { 178,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #178 = ATOMIC_LOAD_SUB_I8
  { 179,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #179 = ATOMIC_LOAD_UMAX_I16
  { 180,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #180 = ATOMIC_LOAD_UMAX_I32
  { 181,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #181 = ATOMIC_LOAD_UMAX_I64
  { 182,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #182 = ATOMIC_LOAD_UMAX_I8
  { 183,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #183 = ATOMIC_LOAD_UMIN_I16
  { 184,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #184 = ATOMIC_LOAD_UMIN_I32
  { 185,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #185 = ATOMIC_LOAD_UMIN_I64
  { 186,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #186 = ATOMIC_LOAD_UMIN_I8
  { 187,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #187 = ATOMIC_LOAD_XOR_I16
  { 188,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #188 = ATOMIC_LOAD_XOR_I32
  { 189,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #189 = ATOMIC_LOAD_XOR_I64
  { 190,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #190 = ATOMIC_LOAD_XOR_I8
  { 191,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #191 = ATOMIC_SWAP_I16
  { 192,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #192 = ATOMIC_SWAP_I32
  { 193,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #193 = ATOMIC_SWAP_I64
  { 194,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #194 = ATOMIC_SWAP_I8
  { 195,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #195 = ATTN
  { 196,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #196 = B
  { 197,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #197 = BA
  { 198,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #198 = BC
  { 199,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #199 = BCC
  { 200,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #200 = BCCA
  { 201,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #201 = BCCCTR
  { 202,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #202 = BCCCTR8
  { 203,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo39, -1 ,nullptr },  // Inst #203 = BCCCTRL
  { 204,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo39, -1 ,nullptr },  // Inst #204 = BCCCTRL8
  { 205,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo38, -1 ,nullptr },  // Inst #205 = BCCL
  { 206,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo38, -1 ,nullptr },  // Inst #206 = BCCLA
  { 207,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #207 = BCCLR
  { 208,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo39, -1 ,nullptr },  // Inst #208 = BCCLRL
  { 209,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #209 = BCCTR
  { 210,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #210 = BCCTR8
  { 211,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #211 = BCCTR8n
  { 212,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo40, -1 ,nullptr },  // Inst #212 = BCCTRL
  { 213,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo40, -1 ,nullptr },  // Inst #213 = BCCTRL8
  { 214,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo40, -1 ,nullptr },  // Inst #214 = BCCTRL8n
  { 215,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo40, -1 ,nullptr },  // Inst #215 = BCCTRLn
  { 216,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #216 = BCCTRn
  { 217,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo41, -1 ,nullptr },  // Inst #217 = BCDCFNo
  { 218,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo41, -1 ,nullptr },  // Inst #218 = BCDCFSQo
  { 219,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo41, -1 ,nullptr },  // Inst #219 = BCDCFZo
  { 220,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #220 = BCDCPSGNo
  { 221,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo43, -1 ,nullptr },  // Inst #221 = BCDCTNo
  { 222,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo43, -1 ,nullptr },  // Inst #222 = BCDCTSQo
  { 223,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo41, -1 ,nullptr },  // Inst #223 = BCDCTZo
  { 224,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo41, -1 ,nullptr },  // Inst #224 = BCDSETSGNo
  { 225,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo44, -1 ,nullptr },  // Inst #225 = BCDSRo
  { 226,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo44, -1 ,nullptr },  // Inst #226 = BCDSo
  { 227,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo44, -1 ,nullptr },  // Inst #227 = BCDTRUNCo
  { 228,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #228 = BCDUSo
  { 229,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #229 = BCDUTRUNCo
  { 230,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo37, -1 ,nullptr },  // Inst #230 = BCL
  { 231,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #231 = BCLR
  { 232,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo40, -1 ,nullptr },  // Inst #232 = BCLRL
  { 233,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo40, -1 ,nullptr },  // Inst #233 = BCLRLn
  { 234,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #234 = BCLRn
  { 235,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #235 = BCLalways
  { 236,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo37, -1 ,nullptr },  // Inst #236 = BCLn
  { 237,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, nullptr, -1 ,nullptr },  // Inst #237 = BCTR
  { 238,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, nullptr, -1 ,nullptr },  // Inst #238 = BCTR8
  { 239,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList9, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #239 = BCTRL
  { 240,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #240 = BCTRL8
  { 241,	2,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList16, OperandInfo45, -1 ,nullptr },  // Inst #241 = BCTRL8_LDinto_toc
  { 242,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #242 = BCn
  { 243,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #243 = BDNZ
  { 244,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #244 = BDNZ8
  { 245,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #245 = BDNZA
  { 246,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #246 = BDNZAm
  { 247,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #247 = BDNZAp
  { 248,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #248 = BDNZL
  { 249,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #249 = BDNZLA
  { 250,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #250 = BDNZLAm
  { 251,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #251 = BDNZLAp
  { 252,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #252 = BDNZLR
  { 253,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #253 = BDNZLR8
  { 254,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #254 = BDNZLRL
  { 255,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #255 = BDNZLRLm
  { 256,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #256 = BDNZLRLp
  { 257,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #257 = BDNZLRm
  { 258,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #258 = BDNZLRp
  { 259,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #259 = BDNZLm
  { 260,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #260 = BDNZLp
  { 261,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #261 = BDNZm
  { 262,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #262 = BDNZp
  { 263,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #263 = BDZ
  { 264,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #264 = BDZ8
  { 265,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #265 = BDZA
  { 266,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #266 = BDZAm
  { 267,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #267 = BDZAp
  { 268,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #268 = BDZL
  { 269,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #269 = BDZLA
  { 270,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #270 = BDZLAm
  { 271,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #271 = BDZLAp
  { 272,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #272 = BDZLR
  { 273,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #273 = BDZLR8
  { 274,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #274 = BDZLRL
  { 275,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #275 = BDZLRLm
  { 276,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #276 = BDZLRLp
  { 277,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #277 = BDZLRm
  { 278,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #278 = BDZLRp
  { 279,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #279 = BDZLm
  { 280,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #280 = BDZLp
  { 281,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #281 = BDZm
  { 282,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #282 = BDZp
  { 283,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #283 = BL
  { 284,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #284 = BL8
  { 285,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #285 = BL8_NOP
  { 286,	2,	0,	8,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #286 = BL8_NOP_TLS
  { 287,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #287 = BL8_TLS
  { 288,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #288 = BL8_TLS_
  { 289,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #289 = BLA
  { 290,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #290 = BLA8
  { 291,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #291 = BLA8_NOP
  { 292,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList14, nullptr, nullptr, -1 ,nullptr },  // Inst #292 = BLR
  { 293,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, nullptr, -1 ,nullptr },  // Inst #293 = BLR8
  { 294,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #294 = BLRL
  { 295,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo7, -1 ,nullptr },  // Inst #295 = BL_TLS
  { 296,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #296 = BPERMD
  { 297,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #297 = BRINC
  { 298,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #298 = CLRBHRB
  { 299,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #299 = CLRLSLDI
  { 300,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #300 = CLRLSLDIo
  { 301,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #301 = CLRLSLWI
  { 302,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #302 = CLRLSLWIo
  { 303,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #303 = CLRRDI
  { 304,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #304 = CLRRDIo
  { 305,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #305 = CLRRWI
  { 306,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #306 = CLRRWIo
  { 307,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #307 = CMPB
  { 308,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #308 = CMPB8
  { 309,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #309 = CMPD
  { 310,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #310 = CMPDI
  { 311,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #311 = CMPEQB
  { 312,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #312 = CMPLD
  { 313,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #313 = CMPLDI
  { 314,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #314 = CMPLW
  { 315,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #315 = CMPLWI
  { 316,	4,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #316 = CMPRB
  { 317,	4,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #317 = CMPRB8
  { 318,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #318 = CMPW
  { 319,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #319 = CMPWI
  { 320,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #320 = CNTLZD
  { 321,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #321 = CNTLZDo
  { 322,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #322 = CNTLZW
  { 323,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #323 = CNTLZW8
  { 324,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #324 = CNTLZW8o
  { 325,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #325 = CNTLZWo
  { 326,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #326 = CNTTZD
  { 327,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #327 = CNTTZDo
  { 328,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #328 = CNTTZW
  { 329,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #329 = CNTTZW8
  { 330,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #330 = CNTTZW8o
  { 331,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #331 = CNTTZWo
  { 332,	0,	0,	4,	6,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #332 = CP_ABORT
  { 333,	3,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #333 = CP_COPY
  { 334,	3,	0,	4,	7,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #334 = CP_COPY8
  { 335,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #335 = CP_COPY_FIRST
  { 336,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #336 = CP_COPYx
  { 337,	3,	0,	4,	8,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #337 = CP_PASTE
  { 338,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #338 = CP_PASTE8
  { 339,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #339 = CP_PASTE8o
  { 340,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #340 = CP_PASTE_LAST
  { 341,	3,	0,	4,	8,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #341 = CP_PASTEo
  { 342,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #342 = CP_PASTEx
  { 343,	0,	0,	4,	9,	0, 0x0ULL, nullptr, ImplicitList20, nullptr, -1 ,nullptr },  // Inst #343 = CR6SET
  { 344,	0,	0,	4,	9,	0, 0x0ULL, nullptr, ImplicitList20, nullptr, -1 ,nullptr },  // Inst #344 = CR6UNSET
  { 345,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #345 = CRAND
  { 346,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #346 = CRANDC
  { 347,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #347 = CREQV
  { 348,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #348 = CRNAND
  { 349,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #349 = CRNOR
  { 350,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #350 = CROR
  { 351,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #351 = CRORC
  { 352,	1,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #352 = CRSET
  { 353,	1,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #353 = CRUNSET
  { 354,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #354 = CRXOR
  { 355,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #355 = DCBA
  { 356,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #356 = DCBF
  { 357,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #357 = DCBFL
  { 358,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #358 = DCBFLP
  { 359,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #359 = DCBFx
  { 360,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #360 = DCBI
  { 361,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #361 = DCBST
  { 362,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #362 = DCBT
  { 363,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #363 = DCBTCT
  { 364,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #364 = DCBTDS
  { 365,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #365 = DCBTST
  { 366,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #366 = DCBTSTCT
  { 367,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #367 = DCBTSTDS
  { 368,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #368 = DCBTSTT
  { 369,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #369 = DCBTSTx
  { 370,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #370 = DCBTT
  { 371,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #371 = DCBTx
  { 372,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #372 = DCBZ
  { 373,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #373 = DCBZL
  { 374,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #374 = DCCCI
  { 375,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #375 = DFLOADf32
  { 376,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #376 = DFLOADf64
  { 377,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #377 = DFSTOREf32
  { 378,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #378 = DFSTOREf64
  { 379,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #379 = DIVD
  { 380,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #380 = DIVDE
  { 381,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #381 = DIVDEU
  { 382,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #382 = DIVDEUo
  { 383,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #383 = DIVDEo
  { 384,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #384 = DIVDU
  { 385,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #385 = DIVDUo
  { 386,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #386 = DIVDo
  { 387,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #387 = DIVW
  { 388,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #388 = DIVWE
  { 389,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #389 = DIVWEU
  { 390,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #390 = DIVWEUo
  { 391,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #391 = DIVWEo
  { 392,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #392 = DIVWU
  { 393,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #393 = DIVWUo
  { 394,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #394 = DIVWo
  { 395,	1,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, PPC::DeprecatedDST ,nullptr },  // Inst #395 = DSS
  { 396,	0,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, PPC::DeprecatedDST ,nullptr },  // Inst #396 = DSSALL
  { 397,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, PPC::DeprecatedDST ,nullptr },  // Inst #397 = DST
  { 398,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, PPC::DeprecatedDST ,nullptr },  // Inst #398 = DST64
  { 399,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, PPC::DeprecatedDST ,nullptr },  // Inst #399 = DSTST
  { 400,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, PPC::DeprecatedDST ,nullptr },  // Inst #400 = DSTST64
  { 401,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, PPC::DeprecatedDST ,nullptr },  // Inst #401 = DSTSTT
  { 402,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, PPC::DeprecatedDST ,nullptr },  // Inst #402 = DSTSTT64
  { 403,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, PPC::DeprecatedDST ,nullptr },  // Inst #403 = DSTT
  { 404,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, PPC::DeprecatedDST ,nullptr },  // Inst #404 = DSTT64
  { 405,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo62, -1 ,nullptr },  // Inst #405 = DYNALLOC
  { 406,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList21, ImplicitList21, OperandInfo63, -1 ,nullptr },  // Inst #406 = DYNALLOC8
  { 407,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #407 = DYNAREAOFFSET
  { 408,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #408 = DYNAREAOFFSET8
  { 409,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #409 = EH_SjLj_LongJmp32
  { 410,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #410 = EH_SjLj_LongJmp64
  { 411,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo65, -1 ,nullptr },  // Inst #411 = EH_SjLj_SetJmp32
  { 412,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo65, -1 ,nullptr },  // Inst #412 = EH_SjLj_SetJmp64
  { 413,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #413 = EH_SjLj_Setup
  { 414,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #414 = EQV
  { 415,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #415 = EQV8
  { 416,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #416 = EQV8o
  { 417,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #417 = EQVo
  { 418,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #418 = EVABS
  { 419,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #419 = EVADDIW
  { 420,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #420 = EVADDSMIAAW
  { 421,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #421 = EVADDSSIAAW
  { 422,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #422 = EVADDUMIAAW
  { 423,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #423 = EVADDUSIAAW
  { 424,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #424 = EVADDW
  { 425,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #425 = EVAND
  { 426,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #426 = EVANDC
  { 427,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #427 = EVCMPEQ
  { 428,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #428 = EVCMPGTS
  { 429,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #429 = EVCMPGTU
  { 430,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #430 = EVCMPLTS
  { 431,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #431 = EVCMPLTU
  { 432,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #432 = EVCNTLSW
  { 433,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #433 = EVCNTLZW
  { 434,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #434 = EVDIVWS
  { 435,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #435 = EVDIVWU
  { 436,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #436 = EVEQV
  { 437,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #437 = EVEXTSB
  { 438,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #438 = EVEXTSH
  { 439,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #439 = EVLDD
  { 440,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #440 = EVLDDX
  { 441,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #441 = EVLDH
  { 442,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #442 = EVLDHX
  { 443,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #443 = EVLDW
  { 444,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #444 = EVLDWX
  { 445,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #445 = EVLHHESPLAT
  { 446,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #446 = EVLHHESPLATX
  { 447,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #447 = EVLHHOSSPLAT
  { 448,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #448 = EVLHHOSSPLATX
  { 449,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #449 = EVLHHOUSPLAT
  { 450,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #450 = EVLHHOUSPLATX
  { 451,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #451 = EVLWHE
  { 452,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #452 = EVLWHEX
  { 453,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #453 = EVLWHOS
  { 454,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #454 = EVLWHOSX
  { 455,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #455 = EVLWHOU
  { 456,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #456 = EVLWHOUX
  { 457,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #457 = EVLWHSPLAT
  { 458,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #458 = EVLWHSPLATX
  { 459,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #459 = EVLWWSPLAT
  { 460,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #460 = EVLWWSPLATX
  { 461,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #461 = EVMERGEHI
  { 462,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #462 = EVMERGEHILO
  { 463,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #463 = EVMERGELO
  { 464,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #464 = EVMERGELOHI
  { 465,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #465 = EVMHEGSMFAA
  { 466,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #466 = EVMHEGSMFAN
  { 467,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #467 = EVMHEGSMIAA
  { 468,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #468 = EVMHEGSMIAN
  { 469,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #469 = EVMHEGUMIAA
  { 470,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #470 = EVMHEGUMIAN
  { 471,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #471 = EVMHESMF
  { 472,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #472 = EVMHESMFA
  { 473,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #473 = EVMHESMFAAW
  { 474,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #474 = EVMHESMFANW
  { 475,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #475 = EVMHESMI
  { 476,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #476 = EVMHESMIA
  { 477,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #477 = EVMHESMIAAW
  { 478,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #478 = EVMHESMIANW
  { 479,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #479 = EVMHESSF
  { 480,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #480 = EVMHESSFA
  { 481,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #481 = EVMHESSFAAW
  { 482,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #482 = EVMHESSFANW
  { 483,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #483 = EVMHESSIAAW
  { 484,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #484 = EVMHESSIANW
  { 485,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #485 = EVMHEUMI
  { 486,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #486 = EVMHEUMIA
  { 487,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #487 = EVMHEUMIAAW
  { 488,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #488 = EVMHEUMIANW
  { 489,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #489 = EVMHEUSIAAW
  { 490,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #490 = EVMHEUSIANW
  { 491,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #491 = EVMHOGSMFAA
  { 492,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #492 = EVMHOGSMFAN
  { 493,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #493 = EVMHOGSMIAA
  { 494,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #494 = EVMHOGSMIAN
  { 495,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #495 = EVMHOGUMIAA
  { 496,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #496 = EVMHOGUMIAN
  { 497,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #497 = EVMHOSMF
  { 498,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #498 = EVMHOSMFA
  { 499,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #499 = EVMHOSMFAAW
  { 500,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #500 = EVMHOSMFANW
  { 501,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #501 = EVMHOSMI
  { 502,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #502 = EVMHOSMIA
  { 503,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #503 = EVMHOSMIAAW
  { 504,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #504 = EVMHOSMIANW
  { 505,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #505 = EVMHOSSF
  { 506,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #506 = EVMHOSSFA
  { 507,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #507 = EVMHOSSFAAW
  { 508,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #508 = EVMHOSSFANW
  { 509,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #509 = EVMHOSSIAAW
  { 510,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #510 = EVMHOSSIANW
  { 511,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #511 = EVMHOUMI
  { 512,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #512 = EVMHOUMIA
  { 513,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #513 = EVMHOUMIAAW
  { 514,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #514 = EVMHOUMIANW
  { 515,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #515 = EVMHOUSIAAW
  { 516,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #516 = EVMHOUSIANW
  { 517,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #517 = EVMRA
  { 518,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #518 = EVMWHSMF
  { 519,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #519 = EVMWHSMFA
  { 520,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #520 = EVMWHSMI
  { 521,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #521 = EVMWHSMIA
  { 522,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #522 = EVMWHSSF
  { 523,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #523 = EVMWHSSFA
  { 524,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #524 = EVMWHUMI
  { 525,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #525 = EVMWHUMIA
  { 526,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #526 = EVMWLSMIAAW
  { 527,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #527 = EVMWLSMIANW
  { 528,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #528 = EVMWLSSIAAW
  { 529,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #529 = EVMWLSSIANW
  { 530,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #530 = EVMWLUMI
  { 531,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #531 = EVMWLUMIA
  { 532,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #532 = EVMWLUMIAAW
  { 533,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #533 = EVMWLUMIANW
  { 534,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #534 = EVMWLUSIAAW
  { 535,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #535 = EVMWLUSIANW
  { 536,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #536 = EVMWSMF
  { 537,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #537 = EVMWSMFA
  { 538,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #538 = EVMWSMFAA
  { 539,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #539 = EVMWSMFAN
  { 540,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #540 = EVMWSMI
  { 541,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #541 = EVMWSMIA
  { 542,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #542 = EVMWSMIAA
  { 543,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #543 = EVMWSMIAN
  { 544,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #544 = EVMWSSF
  { 545,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #545 = EVMWSSFA
  { 546,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #546 = EVMWSSFAA
  { 547,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #547 = EVMWSSFAN
  { 548,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #548 = EVMWUMI
  { 549,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #549 = EVMWUMIA
  { 550,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #550 = EVMWUMIAA
  { 551,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #551 = EVMWUMIAN
  { 552,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #552 = EVNAND
  { 553,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #553 = EVNEG
  { 554,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #554 = EVNOR
  { 555,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #555 = EVOR
  { 556,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #556 = EVORC
  { 557,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #557 = EVRLW
  { 558,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #558 = EVRLWI
  { 559,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #559 = EVRNDW
  { 560,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #560 = EVSLW
  { 561,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #561 = EVSLWI
  { 562,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #562 = EVSPLATFI
  { 563,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #563 = EVSPLATI
  { 564,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #564 = EVSRWIS
  { 565,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #565 = EVSRWIU
  { 566,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #566 = EVSRWS
  { 567,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #567 = EVSRWU
  { 568,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #568 = EVSTDD
  { 569,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #569 = EVSTDDX
  { 570,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #570 = EVSTDH
  { 571,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #571 = EVSTDHX
  { 572,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #572 = EVSTDW
  { 573,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #573 = EVSTDWX
  { 574,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #574 = EVSTWHE
  { 575,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #575 = EVSTWHEX
  { 576,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #576 = EVSTWHO
  { 577,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #577 = EVSTWHOX
  { 578,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #578 = EVSTWWE
  { 579,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #579 = EVSTWWEX
  { 580,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #580 = EVSTWWO
  { 581,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #581 = EVSTWWOX
  { 582,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #582 = EVSUBFSMIAAW
  { 583,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #583 = EVSUBFSSIAAW
  { 584,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #584 = EVSUBFUMIAAW
  { 585,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #585 = EVSUBFUSIAAW
  { 586,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #586 = EVSUBFW
  { 587,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #587 = EVSUBIFW
  { 588,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #588 = EVXOR
  { 589,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #589 = EXTLDI
  { 590,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #590 = EXTLDIo
  { 591,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #591 = EXTLWI
  { 592,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #592 = EXTLWIo
  { 593,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #593 = EXTRDI
  { 594,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #594 = EXTRDIo
  { 595,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #595 = EXTRWI
  { 596,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #596 = EXTRWIo
  { 597,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #597 = EXTSB
  { 598,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #598 = EXTSB8
  { 599,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #599 = EXTSB8_32_64
  { 600,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #600 = EXTSB8o
  { 601,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #601 = EXTSBo
  { 602,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #602 = EXTSH
  { 603,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #603 = EXTSH8
  { 604,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #604 = EXTSH8_32_64
  { 605,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #605 = EXTSH8o
  { 606,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #606 = EXTSHo
  { 607,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #607 = EXTSW
  { 608,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #608 = EXTSW_32_64
  { 609,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo69, -1 ,nullptr },  // Inst #609 = EXTSW_32_64o
  { 610,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #610 = EXTSWo
  { 611,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #611 = EnforceIEIO
  { 612,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #612 = FABSD
  { 613,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #613 = FABSDo
  { 614,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #614 = FABSS
  { 615,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #615 = FABSSo
  { 616,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #616 = FADD
  { 617,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #617 = FADDS
  { 618,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo73, -1 ,nullptr },  // Inst #618 = FADDSo
  { 619,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo72, -1 ,nullptr },  // Inst #619 = FADDo
  { 620,	3,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #620 = FADDrtz
  { 621,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #621 = FCFID
  { 622,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #622 = FCFIDS
  { 623,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo74, -1 ,nullptr },  // Inst #623 = FCFIDSo
  { 624,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #624 = FCFIDU
  { 625,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #625 = FCFIDUS
  { 626,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo74, -1 ,nullptr },  // Inst #626 = FCFIDUSo
  { 627,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #627 = FCFIDUo
  { 628,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #628 = FCFIDo
  { 629,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #629 = FCMPUD
  { 630,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #630 = FCMPUS
  { 631,	3,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #631 = FCPSGND
  { 632,	3,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo72, -1 ,nullptr },  // Inst #632 = FCPSGNDo
  { 633,	3,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #633 = FCPSGNS
  { 634,	3,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo73, -1 ,nullptr },  // Inst #634 = FCPSGNSo
  { 635,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #635 = FCTID
  { 636,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #636 = FCTIDUZ
  { 637,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #637 = FCTIDUZo
  { 638,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #638 = FCTIDZ
  { 639,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #639 = FCTIDZo
  { 640,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #640 = FCTIDo
  { 641,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #641 = FCTIW
  { 642,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #642 = FCTIWUZ
  { 643,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #643 = FCTIWUZo
  { 644,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #644 = FCTIWZ
  { 645,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #645 = FCTIWZo
  { 646,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #646 = FCTIWo
  { 647,	3,	1,	4,	17,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #647 = FDIV
  { 648,	3,	1,	4,	18,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #648 = FDIVS
  { 649,	3,	1,	4,	18,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo73, -1 ,nullptr },  // Inst #649 = FDIVSo
  { 650,	3,	1,	4,	17,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo72, -1 ,nullptr },  // Inst #650 = FDIVo
  { 651,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #651 = FMADD
  { 652,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #652 = FMADDS
  { 653,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #653 = FMADDSo
  { 654,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #654 = FMADDo
  { 655,	2,	1,	4,	14,	0, 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #655 = FMR
  { 656,	2,	1,	4,	14,	0, 0x0ULL, nullptr, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #656 = FMRo
  { 657,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #657 = FMSUB
  { 658,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #658 = FMSUBS
  { 659,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #659 = FMSUBSo
  { 660,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #660 = FMSUBo
  { 661,	3,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #661 = FMUL
  { 662,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #662 = FMULS
  { 663,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo73, -1 ,nullptr },  // Inst #663 = FMULSo
  { 664,	3,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo72, -1 ,nullptr },  // Inst #664 = FMULo
  { 665,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #665 = FNABSD
  { 666,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #666 = FNABSDo
  { 667,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #667 = FNABSS
  { 668,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #668 = FNABSSo
  { 669,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #669 = FNEGD
  { 670,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #670 = FNEGDo
  { 671,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #671 = FNEGS
  { 672,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #672 = FNEGSo
  { 673,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #673 = FNMADD
  { 674,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #674 = FNMADDS
  { 675,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #675 = FNMADDSo
  { 676,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #676 = FNMADDo
  { 677,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #677 = FNMSUB
  { 678,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #678 = FNMSUBS
  { 679,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #679 = FNMSUBSo
  { 680,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #680 = FNMSUBo
  { 681,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #681 = FRE
  { 682,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #682 = FRES
  { 683,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #683 = FRESo
  { 684,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #684 = FREo
  { 685,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #685 = FRIMD
  { 686,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #686 = FRIMDo
  { 687,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #687 = FRIMS
  { 688,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #688 = FRIMSo
  { 689,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #689 = FRIND
  { 690,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #690 = FRINDo
  { 691,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #691 = FRINS
  { 692,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #692 = FRINSo
  { 693,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #693 = FRIPD
  { 694,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #694 = FRIPDo
  { 695,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #695 = FRIPS
  { 696,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #696 = FRIPSo
  { 697,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #697 = FRIZD
  { 698,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #698 = FRIZDo
  { 699,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #699 = FRIZS
  { 700,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #700 = FRIZSo
  { 701,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #701 = FRSP
  { 702,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo74, -1 ,nullptr },  // Inst #702 = FRSPo
  { 703,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #703 = FRSQRTE
  { 704,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #704 = FRSQRTES
  { 705,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #705 = FRSQRTESo
  { 706,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #706 = FRSQRTEo
  { 707,	4,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #707 = FSELD
  { 708,	4,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #708 = FSELDo
  { 709,	4,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #709 = FSELS
  { 710,	4,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo79, -1 ,nullptr },  // Inst #710 = FSELSo
  { 711,	2,	1,	4,	20,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #711 = FSQRT
  { 712,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #712 = FSQRTS
  { 713,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo71, -1 ,nullptr },  // Inst #713 = FSQRTSo
  { 714,	2,	1,	4,	20,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #714 = FSQRTo
  { 715,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #715 = FSUB
  { 716,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #716 = FSUBS
  { 717,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo73, -1 ,nullptr },  // Inst #717 = FSUBSo
  { 718,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo72, -1 ,nullptr },  // Inst #718 = FSUBo
  { 719,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo25, -1 ,nullptr },  // Inst #719 = GETtlsADDR
  { 720,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo22, -1 ,nullptr },  // Inst #720 = GETtlsADDR32
  { 721,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo25, -1 ,nullptr },  // Inst #721 = GETtlsldADDR
  { 722,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo22, -1 ,nullptr },  // Inst #722 = GETtlsldADDR32
  { 723,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #723 = HRFID
  { 724,	2,	0,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #724 = ICBI
  { 725,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #725 = ICBT
  { 726,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #726 = ICCCI
  { 727,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #727 = INSLWI
  { 728,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #728 = INSLWIo
  { 729,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #729 = INSRDI
  { 730,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #730 = INSRDIo
  { 731,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #731 = INSRWI
  { 732,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #732 = INSRWIo
  { 733,	4,	1,	4,	23,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #733 = ISEL
  { 734,	4,	1,	4,	23,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #734 = ISEL8
  { 735,	0,	0,	4,	24,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #735 = ISYNC
  { 736,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #736 = LA
  { 737,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #737 = LAx
  { 738,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #738 = LBARX
  { 739,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #739 = LBARXL
  { 740,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #740 = LBZ
  { 741,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #741 = LBZ8
  { 742,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #742 = LBZCIX
  { 743,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #743 = LBZU
  { 744,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #744 = LBZU8
  { 745,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #745 = LBZUX
  { 746,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #746 = LBZUX8
  { 747,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #747 = LBZX
  { 748,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #748 = LBZX8
  { 749,	3,	1,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #749 = LD
  { 750,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #750 = LDARX
  { 751,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #751 = LDARXL
  { 752,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #752 = LDAT
  { 753,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #753 = LDBRX
  { 754,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #754 = LDCIX
  { 755,	3,	1,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #755 = LDMX
  { 756,	4,	2,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #756 = LDU
  { 757,	4,	2,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #757 = LDUX
  { 758,	3,	1,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #758 = LDX
  { 759,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #759 = LDgotTprelL
  { 760,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #760 = LDgotTprelL32
  { 761,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #761 = LDtoc
  { 762,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #762 = LDtocBA
  { 763,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #763 = LDtocCPT
  { 764,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #764 = LDtocJTI
  { 765,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #765 = LDtocL
  { 766,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #766 = LFD
  { 767,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #767 = LFDU
  { 768,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #768 = LFDUX
  { 769,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #769 = LFDX
  { 770,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #770 = LFIWAX
  { 771,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #771 = LFIWZX
  { 772,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #772 = LFS
  { 773,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #773 = LFSU
  { 774,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #774 = LFSUX
  { 775,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #775 = LFSX
  { 776,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #776 = LHA
  { 777,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #777 = LHA8
  { 778,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #778 = LHARX
  { 779,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #779 = LHARXL
  { 780,	4,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #780 = LHAU
  { 781,	4,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #781 = LHAU8
  { 782,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #782 = LHAUX
  { 783,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #783 = LHAUX8
  { 784,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #784 = LHAX
  { 785,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #785 = LHAX8
  { 786,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #786 = LHBRX
  { 787,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #787 = LHBRX8
  { 788,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #788 = LHZ
  { 789,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #789 = LHZ8
  { 790,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #790 = LHZCIX
  { 791,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #791 = LHZU
  { 792,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #792 = LHZU8
  { 793,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #793 = LHZUX
  { 794,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #794 = LHZUX8
  { 795,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #795 = LHZX
  { 796,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #796 = LHZX8
  { 797,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #797 = LI
  { 798,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #798 = LI8
  { 799,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #799 = LIS
  { 800,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #800 = LIS8
  { 801,	3,	1,	4,	38,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #801 = LMW
  { 802,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #802 = LSWI
  { 803,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #803 = LVEBX
  { 804,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #804 = LVEHX
  { 805,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #805 = LVEWX
  { 806,	3,	1,	4,	11,	0, 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #806 = LVSL
  { 807,	3,	1,	4,	11,	0, 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #807 = LVSR
  { 808,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #808 = LVX
  { 809,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #809 = LVXL
  { 810,	3,	1,	4,	39,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #810 = LWA
  { 811,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #811 = LWARX
  { 812,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #812 = LWARXL
  { 813,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #813 = LWAT
  { 814,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #814 = LWAUX
  { 815,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #815 = LWAX
  { 816,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #816 = LWAX_32
  { 817,	3,	1,	4,	39,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #817 = LWA_32
  { 818,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #818 = LWBRX
  { 819,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #819 = LWBRX8
  { 820,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #820 = LWZ
  { 821,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #821 = LWZ8
  { 822,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #822 = LWZCIX
  { 823,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #823 = LWZU
  { 824,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #824 = LWZU8
  { 825,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #825 = LWZUX
  { 826,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #826 = LWZUX8
  { 827,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #827 = LWZX
  { 828,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #828 = LWZX8
  { 829,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #829 = LWZtoc
  { 830,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #830 = LXSD
  { 831,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #831 = LXSDX
  { 832,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #832 = LXSIBZX
  { 833,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #833 = LXSIHZX
  { 834,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #834 = LXSIWAX
  { 835,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #835 = LXSIWZX
  { 836,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #836 = LXSSP
  { 837,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #837 = LXSSPX
  { 838,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #838 = LXV
  { 839,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #839 = LXVB16X
  { 840,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #840 = LXVD2X
  { 841,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #841 = LXVDSX
  { 842,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #842 = LXVH8X
  { 843,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #843 = LXVL
  { 844,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #844 = LXVLL
  { 845,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #845 = LXVW4X
  { 846,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #846 = LXVWSX
  { 847,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #847 = LXVX
  { 848,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #848 = MBAR
  { 849,	2,	1,	4,	40,	0, 0x21ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #849 = MCRF
  { 850,	2,	1,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #850 = MCRFS
  { 851,	1,	1,	4,	41,	0, 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #851 = MCRXRX
  { 852,	3,	1,	4,	3,	0, 0x1ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #852 = MFBHRBE
  { 853,	1,	1,	4,	42,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #853 = MFCR
  { 854,	1,	1,	4,	42,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #854 = MFCR8
  { 855,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList7, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #855 = MFCTR
  { 856,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList8, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #856 = MFCTR8
  { 857,	2,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #857 = MFDCR
  { 858,	1,	1,	4,	44,	0, 0x1aULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #858 = MFFS
  { 859,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList13, ImplicitList22, OperandInfo114, -1 ,nullptr },  // Inst #859 = MFFSo
  { 860,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList10, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #860 = MFLR
  { 861,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList12, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #861 = MFLR8
  { 862,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #862 = MFMSR
  { 863,	2,	1,	4,	46,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #863 = MFOCRF
  { 864,	2,	1,	4,	46,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #864 = MFOCRF8
  { 865,	2,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #865 = MFSPR
  { 866,	2,	1,	4,	43,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #866 = MFSPR8
  { 867,	2,	1,	4,	47,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #867 = MFSR
  { 868,	2,	1,	4,	47,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #868 = MFSRIN
  { 869,	2,	1,	4,	48,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #869 = MFTB
  { 870,	1,	1,	4,	48,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #870 = MFTB8
  { 871,	1,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #871 = MFVRSAVE
  { 872,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #872 = MFVRSAVEv
  { 873,	1,	1,	4,	49,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #873 = MFVSCR
  { 874,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #874 = MFVSRD
  { 875,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #875 = MFVSRLD
  { 876,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #876 = MFVSRWZ
  { 877,	0,	0,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #877 = MSGSYNC
  { 878,	0,	0,	4,	52,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #878 = MSYNC
  { 879,	2,	0,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #879 = MTCRF
  { 880,	2,	0,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #880 = MTCRF8
  { 881,	1,	0,	4,	53,	0, 0x9ULL, nullptr, ImplicitList7, OperandInfo112, -1 ,nullptr },  // Inst #881 = MTCTR
  { 882,	1,	0,	4,	53,	0, 0x9ULL, nullptr, ImplicitList8, OperandInfo113, -1 ,nullptr },  // Inst #882 = MTCTR8
  { 883,	1,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList8, OperandInfo113, -1 ,nullptr },  // Inst #883 = MTCTR8loop
  { 884,	1,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList7, OperandInfo112, -1 ,nullptr },  // Inst #884 = MTCTRloop
  { 885,	2,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #885 = MTDCR
  { 886,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #886 = MTFSB0
  { 887,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #887 = MTFSB1
  { 888,	4,	0,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #888 = MTFSF
  { 889,	3,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #889 = MTFSFI
  { 890,	3,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #890 = MTFSFIo
  { 891,	2,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo125, -1 ,nullptr },  // Inst #891 = MTFSFb
  { 892,	4,	0,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #892 = MTFSFo
  { 893,	1,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList10, OperandInfo112, -1 ,nullptr },  // Inst #893 = MTLR
  { 894,	1,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList12, OperandInfo113, -1 ,nullptr },  // Inst #894 = MTLR8
  { 895,	2,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #895 = MTMSR
  { 896,	2,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #896 = MTMSRD
  { 897,	2,	1,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #897 = MTOCRF
  { 898,	2,	1,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #898 = MTOCRF8
  { 899,	2,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #899 = MTSPR
  { 900,	2,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #900 = MTSPR8
  { 901,	2,	0,	4,	57,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #901 = MTSR
  { 902,	2,	0,	4,	57,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #902 = MTSRIN
  { 903,	1,	0,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #903 = MTVRSAVE
  { 904,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #904 = MTVRSAVEv
  { 905,	1,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #905 = MTVSCR
  { 906,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #906 = MTVSRD
  { 907,	3,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #907 = MTVSRDD
  { 908,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #908 = MTVSRWA
  { 909,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #909 = MTVSRWS
  { 910,	2,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #910 = MTVSRWZ
  { 911,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #911 = MULHD
  { 912,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #912 = MULHDU
  { 913,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #913 = MULHDUo
  { 914,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #914 = MULHDo
  { 915,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #915 = MULHW
  { 916,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #916 = MULHWU
  { 917,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #917 = MULHWUo
  { 918,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #918 = MULHWo
  { 919,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #919 = MULLD
  { 920,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #920 = MULLDo
  { 921,	3,	1,	4,	61,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #921 = MULLI
  { 922,	3,	1,	4,	61,	0, 0x8ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #922 = MULLI8
  { 923,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #923 = MULLW
  { 924,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #924 = MULLWo
  { 925,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #925 = MoveGOTtoLR
  { 926,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #926 = MovePCtoLR
  { 927,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #927 = MovePCtoLR8
  { 928,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #928 = NAND
  { 929,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #929 = NAND8
  { 930,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #930 = NAND8o
  { 931,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #931 = NANDo
  { 932,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #932 = NAP
  { 933,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #933 = NEG
  { 934,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #934 = NEG8
  { 935,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #935 = NEG8o
  { 936,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #936 = NEGo
  { 937,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #937 = NOP
  { 938,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #938 = NOP_GT_PWR6
  { 939,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #939 = NOP_GT_PWR7
  { 940,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #940 = NOR
  { 941,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #941 = NOR8
  { 942,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #942 = NOR8o
  { 943,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #943 = NORo
  { 944,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #944 = OR
  { 945,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #945 = OR8
  { 946,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #946 = OR8o
  { 947,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #947 = ORC
  { 948,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #948 = ORC8
  { 949,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #949 = ORC8o
  { 950,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #950 = ORCo
  { 951,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #951 = ORI
  { 952,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #952 = ORI8
  { 953,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #953 = ORIS
  { 954,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #954 = ORIS8
  { 955,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #955 = ORo
  { 956,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #956 = POPCNTD
  { 957,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #957 = POPCNTW
  { 958,	1,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #958 = PPC32GOT
  { 959,	2,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #959 = PPC32PICGOT
  { 960,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #960 = QVALIGNI
  { 961,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #961 = QVALIGNIb
  { 962,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #962 = QVALIGNIs
  { 963,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #963 = QVESPLATI
  { 964,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #964 = QVESPLATIb
  { 965,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #965 = QVESPLATIs
  { 966,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #966 = QVFABS
  { 967,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #967 = QVFABSs
  { 968,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #968 = QVFADD
  { 969,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #969 = QVFADDS
  { 970,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #970 = QVFADDSs
  { 971,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #971 = QVFCFID
  { 972,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #972 = QVFCFIDS
  { 973,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #973 = QVFCFIDU
  { 974,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #974 = QVFCFIDUS
  { 975,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #975 = QVFCFIDb
  { 976,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #976 = QVFCMPEQ
  { 977,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #977 = QVFCMPEQb
  { 978,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #978 = QVFCMPEQbs
  { 979,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #979 = QVFCMPGT
  { 980,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #980 = QVFCMPGTb
  { 981,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #981 = QVFCMPGTbs
  { 982,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #982 = QVFCMPLT
  { 983,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #983 = QVFCMPLTb
  { 984,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #984 = QVFCMPLTbs
  { 985,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #985 = QVFCPSGN
  { 986,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #986 = QVFCPSGNs
  { 987,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #987 = QVFCTID
  { 988,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #988 = QVFCTIDU
  { 989,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #989 = QVFCTIDUZ
  { 990,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #990 = QVFCTIDZ
  { 991,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #991 = QVFCTIDb
  { 992,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #992 = QVFCTIW
  { 993,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #993 = QVFCTIWU
  { 994,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #994 = QVFCTIWUZ
  { 995,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #995 = QVFCTIWZ
  { 996,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #996 = QVFLOGICAL
  { 997,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #997 = QVFLOGICALb
  { 998,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #998 = QVFLOGICALs
  { 999,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #999 = QVFMADD
  { 1000,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1000 = QVFMADDS
  { 1001,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1001 = QVFMADDSs
  { 1002,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1002 = QVFMR
  { 1003,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1003 = QVFMRb
  { 1004,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1004 = QVFMRs
  { 1005,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1005 = QVFMSUB
  { 1006,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1006 = QVFMSUBS
  { 1007,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1007 = QVFMSUBSs
  { 1008,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1008 = QVFMUL
  { 1009,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1009 = QVFMULS
  { 1010,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #1010 = QVFMULSs
  { 1011,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1011 = QVFNABS
  { 1012,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1012 = QVFNABSs
  { 1013,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1013 = QVFNEG
  { 1014,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1014 = QVFNEGs
  { 1015,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1015 = QVFNMADD
  { 1016,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1016 = QVFNMADDS
  { 1017,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1017 = QVFNMADDSs
  { 1018,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1018 = QVFNMSUB
  { 1019,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1019 = QVFNMSUBS
  { 1020,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1020 = QVFNMSUBSs
  { 1021,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1021 = QVFPERM
  { 1022,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1022 = QVFPERMs
  { 1023,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1023 = QVFRE
  { 1024,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1024 = QVFRES
  { 1025,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1025 = QVFRESs
  { 1026,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1026 = QVFRIM
  { 1027,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1027 = QVFRIMs
  { 1028,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1028 = QVFRIN
  { 1029,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1029 = QVFRINs
  { 1030,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1030 = QVFRIP
  { 1031,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1031 = QVFRIPs
  { 1032,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1032 = QVFRIZ
  { 1033,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1033 = QVFRIZs
  { 1034,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1034 = QVFRSP
  { 1035,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1035 = QVFRSPs
  { 1036,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1036 = QVFRSQRTE
  { 1037,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #1037 = QVFRSQRTES
  { 1038,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #1038 = QVFRSQRTESs
  { 1039,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1039 = QVFSEL
  { 1040,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1040 = QVFSELb
  { 1041,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1041 = QVFSELbb
  { 1042,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1042 = QVFSELbs
  { 1043,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1043 = QVFSUB
  { 1044,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1044 = QVFSUBS
  { 1045,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #1045 = QVFSUBSs
  { 1046,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1046 = QVFTSTNAN
  { 1047,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #1047 = QVFTSTNANb
  { 1048,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1048 = QVFTSTNANbs
  { 1049,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1049 = QVFXMADD
  { 1050,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1050 = QVFXMADDS
  { 1051,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1051 = QVFXMUL
  { 1052,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1052 = QVFXMULS
  { 1053,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1053 = QVFXXCPNMADD
  { 1054,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1054 = QVFXXCPNMADDS
  { 1055,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1055 = QVFXXMADD
  { 1056,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1056 = QVFXXMADDS
  { 1057,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1057 = QVFXXNPMADD
  { 1058,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1058 = QVFXXNPMADDS
  { 1059,	2,	1,	4,	62,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1059 = QVGPCI
  { 1060,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1060 = QVLFCDUX
  { 1061,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1061 = QVLFCDUXA
  { 1062,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1062 = QVLFCDX
  { 1063,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1063 = QVLFCDXA
  { 1064,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1064 = QVLFCSUX
  { 1065,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1065 = QVLFCSUXA
  { 1066,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1066 = QVLFCSX
  { 1067,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1067 = QVLFCSXA
  { 1068,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1068 = QVLFCSXs
  { 1069,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1069 = QVLFDUX
  { 1070,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1070 = QVLFDUXA
  { 1071,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1071 = QVLFDX
  { 1072,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1072 = QVLFDXA
  { 1073,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1073 = QVLFDXb
  { 1074,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1074 = QVLFIWAX
  { 1075,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1075 = QVLFIWAXA
  { 1076,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1076 = QVLFIWZX
  { 1077,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1077 = QVLFIWZXA
  { 1078,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #1078 = QVLFSUX
  { 1079,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1079 = QVLFSUXA
  { 1080,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1080 = QVLFSX
  { 1081,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1081 = QVLFSXA
  { 1082,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1082 = QVLFSXb
  { 1083,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1083 = QVLFSXs
  { 1084,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1084 = QVLPCLDX
  { 1085,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1085 = QVLPCLSX
  { 1086,	2,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1086 = QVLPCLSXint
  { 1087,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1087 = QVLPCRDX
  { 1088,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1088 = QVLPCRSX
  { 1089,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1089 = QVSTFCDUX
  { 1090,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1090 = QVSTFCDUXA
  { 1091,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1091 = QVSTFCDUXI
  { 1092,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1092 = QVSTFCDUXIA
  { 1093,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1093 = QVSTFCDX
  { 1094,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1094 = QVSTFCDXA
  { 1095,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1095 = QVSTFCDXI
  { 1096,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1096 = QVSTFCDXIA
  { 1097,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1097 = QVSTFCSUX
  { 1098,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1098 = QVSTFCSUXA
  { 1099,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1099 = QVSTFCSUXI
  { 1100,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1100 = QVSTFCSUXIA
  { 1101,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1101 = QVSTFCSX
  { 1102,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1102 = QVSTFCSXA
  { 1103,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1103 = QVSTFCSXI
  { 1104,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1104 = QVSTFCSXIA
  { 1105,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1105 = QVSTFCSXs
  { 1106,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1106 = QVSTFDUX
  { 1107,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1107 = QVSTFDUXA
  { 1108,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1108 = QVSTFDUXI
  { 1109,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1109 = QVSTFDUXIA
  { 1110,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1110 = QVSTFDX
  { 1111,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1111 = QVSTFDXA
  { 1112,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1112 = QVSTFDXI
  { 1113,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1113 = QVSTFDXIA
  { 1114,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1114 = QVSTFDXb
  { 1115,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1115 = QVSTFIWX
  { 1116,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1116 = QVSTFIWXA
  { 1117,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo161, -1 ,nullptr },  // Inst #1117 = QVSTFSUX
  { 1118,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1118 = QVSTFSUXA
  { 1119,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1119 = QVSTFSUXI
  { 1120,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1120 = QVSTFSUXIA
  { 1121,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1121 = QVSTFSUXs
  { 1122,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1122 = QVSTFSX
  { 1123,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1123 = QVSTFSXA
  { 1124,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1124 = QVSTFSXI
  { 1125,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1125 = QVSTFSXIA
  { 1126,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1126 = QVSTFSXs
  { 1127,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1127 = RESTORE_CR
  { 1128,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1128 = RESTORE_CRBIT
  { 1129,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1129 = RESTORE_VRSAVE
  { 1130,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1130 = RFCI
  { 1131,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1131 = RFDI
  { 1132,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1132 = RFEBB
  { 1133,	0,	0,	4,	65,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1133 = RFI
  { 1134,	0,	0,	4,	66,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1134 = RFID
  { 1135,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1135 = RFMCI
  { 1136,	4,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1136 = RLDCL
  { 1137,	4,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo165, -1 ,nullptr },  // Inst #1137 = RLDCLo
  { 1138,	4,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1138 = RLDCR
  { 1139,	4,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo165, -1 ,nullptr },  // Inst #1139 = RLDCRo
  { 1140,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #1140 = RLDIC
  { 1141,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #1141 = RLDICL
  { 1142,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1142 = RLDICL_32_64
  { 1143,	4,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo46, -1 ,nullptr },  // Inst #1143 = RLDICLo
  { 1144,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #1144 = RLDICR
  { 1145,	4,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo46, -1 ,nullptr },  // Inst #1145 = RLDICRo
  { 1146,	4,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo46, -1 ,nullptr },  // Inst #1146 = RLDICo
  { 1147,	5,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1147 = RLDIMI
  { 1148,	5,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo167, -1 ,nullptr },  // Inst #1148 = RLDIMIo
  { 1149,	6,	1,	4,	69,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1149 = RLWIMI
  { 1150,	6,	1,	4,	69,	0, 0xcULL, nullptr, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1150 = RLWIMI8
  { 1151,	6,	1,	4,	69,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo169, -1 ,nullptr },  // Inst #1151 = RLWIMI8o
  { 1152,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1152 = RLWIMIbm
  { 1153,	6,	1,	4,	69,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList1, OperandInfo168, -1 ,nullptr },  // Inst #1153 = RLWIMIo
  { 1154,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1154 = RLWIMIobm
  { 1155,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1155 = RLWINM
  { 1156,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1156 = RLWINM8
  { 1157,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo172, -1 ,nullptr },  // Inst #1157 = RLWINM8o
  { 1158,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1158 = RLWINMbm
  { 1159,	5,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo171, -1 ,nullptr },  // Inst #1159 = RLWINMo
  { 1160,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1160 = RLWINMobm
  { 1161,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1161 = RLWNM
  { 1162,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1162 = RLWNM8
  { 1163,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo174, -1 ,nullptr },  // Inst #1163 = RLWNM8o
  { 1164,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1164 = RLWNMbm
  { 1165,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo173, -1 ,nullptr },  // Inst #1165 = RLWNMo
  { 1166,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1166 = RLWNMobm
  { 1167,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1167 = ROTRDI
  { 1168,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1168 = ROTRDIo
  { 1169,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1169 = ROTRWI
  { 1170,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1170 = ROTRWIo
  { 1171,	2,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1171 = ReadTB
  { 1172,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1172 = SC
  { 1173,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #1173 = SELECT_CC_F4
  { 1174,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo176, -1 ,nullptr },  // Inst #1174 = SELECT_CC_F8
  { 1175,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #1175 = SELECT_CC_I4
  { 1176,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1176 = SELECT_CC_I8
  { 1177,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1177 = SELECT_CC_QBRC
  { 1178,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1178 = SELECT_CC_QFRC
  { 1179,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1179 = SELECT_CC_QSRC
  { 1180,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1180 = SELECT_CC_VRRC
  { 1181,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo176, -1 ,nullptr },  // Inst #1181 = SELECT_CC_VSFRC
  { 1182,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1182 = SELECT_CC_VSRC
  { 1183,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #1183 = SELECT_CC_VSSRC
  { 1184,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1184 = SELECT_F4
  { 1185,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1185 = SELECT_F8
  { 1186,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1186 = SELECT_I4
  { 1187,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo187, -1 ,nullptr },  // Inst #1187 = SELECT_I8
  { 1188,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo188, -1 ,nullptr },  // Inst #1188 = SELECT_QBRC
  { 1189,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo189, -1 ,nullptr },  // Inst #1189 = SELECT_QFRC
  { 1190,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1190 = SELECT_QSRC
  { 1191,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1191 = SELECT_VRRC
  { 1192,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1192 = SELECT_VSFRC
  { 1193,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1193 = SELECT_VSRC
  { 1194,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1194 = SELECT_VSSRC
  { 1195,	0,	0,	4,	70,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1195 = SLBIA
  { 1196,	1,	0,	4,	71,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1196 = SLBIE
  { 1197,	2,	0,	4,	72,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1197 = SLBIEG
  { 1198,	2,	1,	4,	73,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1198 = SLBMFEE
  { 1199,	2,	1,	4,	74,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1199 = SLBMFEV
  { 1200,	2,	0,	4,	75,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1200 = SLBMTE
  { 1201,	0,	0,	4,	76,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1201 = SLBSYNC
  { 1202,	3,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1202 = SLD
  { 1203,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1203 = SLDI
  { 1204,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1204 = SLDIo
  { 1205,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo193, -1 ,nullptr },  // Inst #1205 = SLDo
  { 1206,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1206 = SLW
  { 1207,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #1207 = SLW8
  { 1208,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #1208 = SLW8o
  { 1209,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1209 = SLWI
  { 1210,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1210 = SLWIo
  { 1211,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #1211 = SLWo
  { 1212,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1212 = SPILL_CR
  { 1213,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1213 = SPILL_CRBIT
  { 1214,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1214 = SPILL_VRSAVE
  { 1215,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo193, -1 ,nullptr },  // Inst #1215 = SRAD
  { 1216,	3,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo25, -1 ,nullptr },  // Inst #1216 = SRADI
  { 1217,	3,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo25, -1 ,nullptr },  // Inst #1217 = SRADIo
  { 1218,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo193, -1 ,nullptr },  // Inst #1218 = SRADo
  { 1219,	3,	1,	4,	77,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1219 = SRAW
  { 1220,	3,	1,	4,	77,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #1220 = SRAWI
  { 1221,	3,	1,	4,	77,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo22, -1 ,nullptr },  // Inst #1221 = SRAWIo
  { 1222,	3,	1,	4,	77,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1222 = SRAWo
  { 1223,	3,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1223 = SRD
  { 1224,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1224 = SRDI
  { 1225,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1225 = SRDIo
  { 1226,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo193, -1 ,nullptr },  // Inst #1226 = SRDo
  { 1227,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1227 = SRW
  { 1228,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #1228 = SRW8
  { 1229,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #1229 = SRW8o
  { 1230,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1230 = SRWI
  { 1231,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1231 = SRWIo
  { 1232,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #1232 = SRWo
  { 1233,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #1233 = STB
  { 1234,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #1234 = STB8
  { 1235,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1235 = STBCIX
  { 1236,	3,	0,	4,	78,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #1236 = STBCX
  { 1237,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1237 = STBU
  { 1238,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1238 = STBU8
  { 1239,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1239 = STBUX
  { 1240,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1240 = STBUX8
  { 1241,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #1241 = STBX
  { 1242,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1242 = STBX8
  { 1243,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #1243 = STD
  { 1244,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1244 = STDAT
  { 1245,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1245 = STDBRX
  { 1246,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1246 = STDCIX
  { 1247,	3,	0,	4,	81,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #1247 = STDCX
  { 1248,	4,	1,	4,	82,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1248 = STDU
  { 1249,	4,	1,	4,	83,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1249 = STDUX
  { 1250,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1250 = STDX
  { 1251,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1251 = STFD
  { 1252,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1252 = STFDU
  { 1253,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1253 = STFDUX
  { 1254,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1254 = STFDX
  { 1255,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1255 = STFIWX
  { 1256,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #1256 = STFS
  { 1257,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1257 = STFSU
  { 1258,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1258 = STFSUX
  { 1259,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #1259 = STFSX
  { 1260,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #1260 = STH
  { 1261,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #1261 = STH8
  { 1262,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #1262 = STHBRX
  { 1263,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1263 = STHCIX
  { 1264,	3,	0,	4,	78,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #1264 = STHCX
  { 1265,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1265 = STHU
  { 1266,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1266 = STHU8
  { 1267,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1267 = STHUX
  { 1268,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1268 = STHUX8
  { 1269,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #1269 = STHX
  { 1270,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1270 = STHX8
  { 1271,	3,	0,	4,	38,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #1271 = STMW
  { 1272,	0,	0,	4,	84,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1272 = STOP
  { 1273,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1273 = STSWI
  { 1274,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1274 = STVEBX
  { 1275,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1275 = STVEHX
  { 1276,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1276 = STVEWX
  { 1277,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1277 = STVX
  { 1278,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1278 = STVXL
  { 1279,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #1279 = STW
  { 1280,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #1280 = STW8
  { 1281,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1281 = STWAT
  { 1282,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #1282 = STWBRX
  { 1283,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1283 = STWCIX
  { 1284,	3,	0,	4,	78,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #1284 = STWCX
  { 1285,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1285 = STWU
  { 1286,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1286 = STWU8
  { 1287,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1287 = STWUX
  { 1288,	4,	1,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1288 = STWUX8
  { 1289,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #1289 = STWX
  { 1290,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #1290 = STWX8
  { 1291,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1291 = STXSD
  { 1292,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1292 = STXSDX
  { 1293,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1293 = STXSIBX
  { 1294,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1294 = STXSIBXv
  { 1295,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1295 = STXSIHX
  { 1296,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1296 = STXSIHXv
  { 1297,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1297 = STXSIWX
  { 1298,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1298 = STXSSP
  { 1299,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #1299 = STXSSPX
  { 1300,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1300 = STXV
  { 1301,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1301 = STXVB16X
  { 1302,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1302 = STXVD2X
  { 1303,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1303 = STXVH8X
  { 1304,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #1304 = STXVL
  { 1305,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #1305 = STXVLL
  { 1306,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1306 = STXVW4X
  { 1307,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1307 = STXVX
  { 1308,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1308 = SUBF
  { 1309,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #1309 = SUBF8
  { 1310,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #1310 = SUBF8o
  { 1311,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1311 = SUBFC
  { 1312,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo23, -1 ,nullptr },  // Inst #1312 = SUBFC8
  { 1313,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo23, -1 ,nullptr },  // Inst #1313 = SUBFC8o
  { 1314,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1314 = SUBFCo
  { 1315,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1315 = SUBFE
  { 1316,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo23, -1 ,nullptr },  // Inst #1316 = SUBFE8
  { 1317,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo23, -1 ,nullptr },  // Inst #1317 = SUBFE8o
  { 1318,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1318 = SUBFEo
  { 1319,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #1319 = SUBFIC
  { 1320,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo25, -1 ,nullptr },  // Inst #1320 = SUBFIC8
  { 1321,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #1321 = SUBFME
  { 1322,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #1322 = SUBFME8
  { 1323,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo30, -1 ,nullptr },  // Inst #1323 = SUBFME8o
  { 1324,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #1324 = SUBFMEo
  { 1325,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #1325 = SUBFZE
  { 1326,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #1326 = SUBFZE8
  { 1327,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo30, -1 ,nullptr },  // Inst #1327 = SUBFZE8o
  { 1328,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #1328 = SUBFZEo
  { 1329,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #1329 = SUBFo
  { 1330,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1330 = SUBI
  { 1331,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1331 = SUBIC
  { 1332,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1332 = SUBICo
  { 1333,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1333 = SUBIS
  { 1334,	1,	0,	4,	52,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1334 = SYNC
  { 1335,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1335 = TABORT
  { 1336,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1336 = TABORTDC
  { 1337,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1337 = TABORTDCI
  { 1338,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1338 = TABORTWC
  { 1339,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1339 = TABORTWCI
  { 1340,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1340 = TAILB
  { 1341,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1341 = TAILB8
  { 1342,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1342 = TAILBA
  { 1343,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1343 = TAILBA8
  { 1344,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, nullptr, nullptr, -1 ,nullptr },  // Inst #1344 = TAILBCTR
  { 1345,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, nullptr, nullptr, -1 ,nullptr },  // Inst #1345 = TAILBCTR8
  { 1346,	2,	1,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1346 = TBEGIN
  { 1347,	1,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1347 = TCHECK
  { 1348,	1,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1348 = TCHECK_RET
  { 1349,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1349 = TCRETURNai
  { 1350,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1350 = TCRETURNai8
  { 1351,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1351 = TCRETURNdi
  { 1352,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1352 = TCRETURNdi8
  { 1353,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1353 = TCRETURNri
  { 1354,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1354 = TCRETURNri8
  { 1355,	3,	0,	4,	85,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1355 = TD
  { 1356,	3,	0,	4,	85,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1356 = TDI
  { 1357,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1357 = TEND
  { 1358,	0,	0,	4,	86,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1358 = TLBIA
  { 1359,	2,	0,	4,	87,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1359 = TLBIE
  { 1360,	1,	0,	4,	88,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1360 = TLBIEL
  { 1361,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1361 = TLBIVAX
  { 1362,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1362 = TLBLD
  { 1363,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1363 = TLBLI
  { 1364,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1364 = TLBRE
  { 1365,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1365 = TLBRE2
  { 1366,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1366 = TLBSX
  { 1367,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1367 = TLBSX2
  { 1368,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1368 = TLBSX2D
  { 1369,	0,	0,	4,	89,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1369 = TLBSYNC
  { 1370,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1370 = TLBWE
  { 1371,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1371 = TLBWE2
  { 1372,	0,	0,	4,	11,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1372 = TRAP
  { 1373,	1,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1373 = TRECHKPT
  { 1374,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1374 = TRECLAIM
  { 1375,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1375 = TSR
  { 1376,	3,	0,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #1376 = TW
  { 1377,	3,	0,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1377 = TWI
  { 1378,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1378 = UPDATE_VRSAVE
  { 1379,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1379 = UpdateGBR
  { 1380,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1380 = VABSDUB
  { 1381,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1381 = VABSDUH
  { 1382,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1382 = VABSDUW
  { 1383,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1383 = VADDCUQ
  { 1384,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1384 = VADDCUW
  { 1385,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1385 = VADDECUQ
  { 1386,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1386 = VADDEUQM
  { 1387,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1387 = VADDFP
  { 1388,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1388 = VADDSBS
  { 1389,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1389 = VADDSHS
  { 1390,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1390 = VADDSWS
  { 1391,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1391 = VADDUBM
  { 1392,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1392 = VADDUBS
  { 1393,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1393 = VADDUDM
  { 1394,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1394 = VADDUHM
  { 1395,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1395 = VADDUHS
  { 1396,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1396 = VADDUQM
  { 1397,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1397 = VADDUWM
  { 1398,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1398 = VADDUWS
  { 1399,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1399 = VAND
  { 1400,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1400 = VANDC
  { 1401,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1401 = VAVGSB
  { 1402,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1402 = VAVGSH
  { 1403,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1403 = VAVGSW
  { 1404,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1404 = VAVGUB
  { 1405,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1405 = VAVGUH
  { 1406,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1406 = VAVGUW
  { 1407,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1407 = VBPERMD
  { 1408,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1408 = VBPERMQ
  { 1409,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1409 = VCFSX
  { 1410,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1410 = VCFSX_0
  { 1411,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1411 = VCFUX
  { 1412,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1412 = VCFUX_0
  { 1413,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1413 = VCIPHER
  { 1414,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1414 = VCIPHERLAST
  { 1415,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1415 = VCLZB
  { 1416,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1416 = VCLZD
  { 1417,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1417 = VCLZH
  { 1418,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1418 = VCLZLSBB
  { 1419,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1419 = VCLZW
  { 1420,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1420 = VCMPBFP
  { 1421,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1421 = VCMPBFPo
  { 1422,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1422 = VCMPEQFP
  { 1423,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1423 = VCMPEQFPo
  { 1424,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1424 = VCMPEQUB
  { 1425,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1425 = VCMPEQUBo
  { 1426,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1426 = VCMPEQUD
  { 1427,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1427 = VCMPEQUDo
  { 1428,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1428 = VCMPEQUH
  { 1429,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1429 = VCMPEQUHo
  { 1430,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1430 = VCMPEQUW
  { 1431,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1431 = VCMPEQUWo
  { 1432,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1432 = VCMPGEFP
  { 1433,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1433 = VCMPGEFPo
  { 1434,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1434 = VCMPGTFP
  { 1435,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1435 = VCMPGTFPo
  { 1436,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1436 = VCMPGTSB
  { 1437,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1437 = VCMPGTSBo
  { 1438,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1438 = VCMPGTSD
  { 1439,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1439 = VCMPGTSDo
  { 1440,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1440 = VCMPGTSH
  { 1441,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1441 = VCMPGTSHo
  { 1442,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1442 = VCMPGTSW
  { 1443,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1443 = VCMPGTSWo
  { 1444,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1444 = VCMPGTUB
  { 1445,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1445 = VCMPGTUBo
  { 1446,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1446 = VCMPGTUD
  { 1447,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1447 = VCMPGTUDo
  { 1448,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1448 = VCMPGTUH
  { 1449,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1449 = VCMPGTUHo
  { 1450,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1450 = VCMPGTUW
  { 1451,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1451 = VCMPGTUWo
  { 1452,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1452 = VCMPNEB
  { 1453,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1453 = VCMPNEBo
  { 1454,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1454 = VCMPNEH
  { 1455,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1455 = VCMPNEHo
  { 1456,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1456 = VCMPNEW
  { 1457,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1457 = VCMPNEWo
  { 1458,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1458 = VCMPNEZB
  { 1459,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1459 = VCMPNEZBo
  { 1460,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1460 = VCMPNEZH
  { 1461,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1461 = VCMPNEZHo
  { 1462,	3,	1,	4,	91,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1462 = VCMPNEZW
  { 1463,	3,	1,	4,	91,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo42, -1 ,nullptr },  // Inst #1463 = VCMPNEZWo
  { 1464,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1464 = VCTSXS
  { 1465,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1465 = VCTSXS_0
  { 1466,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1466 = VCTUXS
  { 1467,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1467 = VCTUXS_0
  { 1468,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1468 = VCTZB
  { 1469,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1469 = VCTZD
  { 1470,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1470 = VCTZH
  { 1471,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1471 = VCTZLSBB
  { 1472,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1472 = VCTZW
  { 1473,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1473 = VEQV
  { 1474,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1474 = VEXPTEFP
  { 1475,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1475 = VEXTRACTD
  { 1476,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1476 = VEXTRACTUB
  { 1477,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1477 = VEXTRACTUH
  { 1478,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1478 = VEXTRACTUW
  { 1479,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1479 = VEXTSB2D
  { 1480,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1480 = VEXTSB2Ds
  { 1481,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1481 = VEXTSB2W
  { 1482,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1482 = VEXTSB2Ws
  { 1483,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1483 = VEXTSH2D
  { 1484,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1484 = VEXTSH2Ds
  { 1485,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1485 = VEXTSH2W
  { 1486,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1486 = VEXTSH2Ws
  { 1487,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1487 = VEXTSW2D
  { 1488,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1488 = VEXTSW2Ds
  { 1489,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1489 = VEXTUBLX
  { 1490,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1490 = VEXTUBRX
  { 1491,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1491 = VEXTUHLX
  { 1492,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1492 = VEXTUHRX
  { 1493,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1493 = VEXTUWLX
  { 1494,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1494 = VEXTUWRX
  { 1495,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1495 = VGBBD
  { 1496,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1496 = VINSERTB
  { 1497,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1497 = VINSERTD
  { 1498,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1498 = VINSERTH
  { 1499,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1499 = VINSERTW
  { 1500,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1500 = VLOGEFP
  { 1501,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1501 = VMADDFP
  { 1502,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1502 = VMAXFP
  { 1503,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1503 = VMAXSB
  { 1504,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1504 = VMAXSD
  { 1505,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1505 = VMAXSH
  { 1506,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1506 = VMAXSW
  { 1507,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1507 = VMAXUB
  { 1508,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1508 = VMAXUD
  { 1509,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1509 = VMAXUH
  { 1510,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1510 = VMAXUW
  { 1511,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1511 = VMHADDSHS
  { 1512,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1512 = VMHRADDSHS
  { 1513,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1513 = VMINFP
  { 1514,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1514 = VMINSB
  { 1515,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1515 = VMINSD
  { 1516,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1516 = VMINSH
  { 1517,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1517 = VMINSW
  { 1518,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1518 = VMINUB
  { 1519,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1519 = VMINUD
  { 1520,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1520 = VMINUH
  { 1521,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1521 = VMINUW
  { 1522,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1522 = VMLADDUHM
  { 1523,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1523 = VMRGEW
  { 1524,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1524 = VMRGHB
  { 1525,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1525 = VMRGHH
  { 1526,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1526 = VMRGHW
  { 1527,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1527 = VMRGLB
  { 1528,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1528 = VMRGLH
  { 1529,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1529 = VMRGLW
  { 1530,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1530 = VMRGOW
  { 1531,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1531 = VMSUMMBM
  { 1532,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1532 = VMSUMSHM
  { 1533,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1533 = VMSUMSHS
  { 1534,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1534 = VMSUMUBM
  { 1535,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1535 = VMSUMUHM
  { 1536,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1536 = VMSUMUHS
  { 1537,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1537 = VMUL10CUQ
  { 1538,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1538 = VMUL10ECUQ
  { 1539,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1539 = VMUL10EUQ
  { 1540,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1540 = VMUL10UQ
  { 1541,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1541 = VMULESB
  { 1542,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1542 = VMULESH
  { 1543,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1543 = VMULESW
  { 1544,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1544 = VMULEUB
  { 1545,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1545 = VMULEUH
  { 1546,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1546 = VMULEUW
  { 1547,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1547 = VMULOSB
  { 1548,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1548 = VMULOSH
  { 1549,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1549 = VMULOSW
  { 1550,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1550 = VMULOUB
  { 1551,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1551 = VMULOUH
  { 1552,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1552 = VMULOUW
  { 1553,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1553 = VMULUWM
  { 1554,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1554 = VNAND
  { 1555,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1555 = VNCIPHER
  { 1556,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1556 = VNCIPHERLAST
  { 1557,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1557 = VNEGD
  { 1558,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1558 = VNEGW
  { 1559,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1559 = VNMSUBFP
  { 1560,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1560 = VNOR
  { 1561,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1561 = VOR
  { 1562,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1562 = VORC
  { 1563,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1563 = VPERM
  { 1564,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1564 = VPERMR
  { 1565,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1565 = VPERMXOR
  { 1566,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1566 = VPKPX
  { 1567,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1567 = VPKSDSS
  { 1568,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1568 = VPKSDUS
  { 1569,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1569 = VPKSHSS
  { 1570,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1570 = VPKSHUS
  { 1571,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1571 = VPKSWSS
  { 1572,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1572 = VPKSWUS
  { 1573,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1573 = VPKUDUM
  { 1574,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1574 = VPKUDUS
  { 1575,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1575 = VPKUHUM
  { 1576,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1576 = VPKUHUS
  { 1577,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1577 = VPKUWUM
  { 1578,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1578 = VPKUWUS
  { 1579,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1579 = VPMSUMB
  { 1580,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1580 = VPMSUMD
  { 1581,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1581 = VPMSUMH
  { 1582,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1582 = VPMSUMW
  { 1583,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1583 = VPOPCNTB
  { 1584,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1584 = VPOPCNTD
  { 1585,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1585 = VPOPCNTH
  { 1586,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1586 = VPOPCNTW
  { 1587,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1587 = VPRTYBD
  { 1588,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1588 = VPRTYBQ
  { 1589,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1589 = VPRTYBW
  { 1590,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1590 = VREFP
  { 1591,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1591 = VRFIM
  { 1592,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1592 = VRFIN
  { 1593,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1593 = VRFIP
  { 1594,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1594 = VRFIZ
  { 1595,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1595 = VRLB
  { 1596,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1596 = VRLD
  { 1597,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1597 = VRLDMI
  { 1598,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1598 = VRLDNM
  { 1599,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1599 = VRLH
  { 1600,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1600 = VRLW
  { 1601,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1601 = VRLWMI
  { 1602,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1602 = VRLWNM
  { 1603,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1603 = VRSQRTEFP
  { 1604,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1604 = VSBOX
  { 1605,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1605 = VSEL
  { 1606,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1606 = VSHASIGMAD
  { 1607,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1607 = VSHASIGMAW
  { 1608,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1608 = VSL
  { 1609,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1609 = VSLB
  { 1610,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1610 = VSLD
  { 1611,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #1611 = VSLDOI
  { 1612,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1612 = VSLH
  { 1613,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1613 = VSLO
  { 1614,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1614 = VSLV
  { 1615,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1615 = VSLW
  { 1616,	3,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1616 = VSPLTB
  { 1617,	3,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1617 = VSPLTBs
  { 1618,	3,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1618 = VSPLTH
  { 1619,	3,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1619 = VSPLTHs
  { 1620,	2,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1620 = VSPLTISB
  { 1621,	2,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1621 = VSPLTISH
  { 1622,	2,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1622 = VSPLTISW
  { 1623,	3,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1623 = VSPLTW
  { 1624,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1624 = VSR
  { 1625,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1625 = VSRAB
  { 1626,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1626 = VSRAD
  { 1627,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1627 = VSRAH
  { 1628,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1628 = VSRAW
  { 1629,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1629 = VSRB
  { 1630,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1630 = VSRD
  { 1631,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1631 = VSRH
  { 1632,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1632 = VSRO
  { 1633,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1633 = VSRV
  { 1634,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1634 = VSRW
  { 1635,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1635 = VSUBCUQ
  { 1636,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1636 = VSUBCUW
  { 1637,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1637 = VSUBECUQ
  { 1638,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1638 = VSUBEUQM
  { 1639,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1639 = VSUBFP
  { 1640,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1640 = VSUBSBS
  { 1641,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1641 = VSUBSHS
  { 1642,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1642 = VSUBSWS
  { 1643,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1643 = VSUBUBM
  { 1644,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1644 = VSUBUBS
  { 1645,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1645 = VSUBUDM
  { 1646,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1646 = VSUBUHM
  { 1647,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1647 = VSUBUHS
  { 1648,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1648 = VSUBUQM
  { 1649,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1649 = VSUBUWM
  { 1650,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1650 = VSUBUWS
  { 1651,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1651 = VSUM2SWS
  { 1652,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1652 = VSUM4SBS
  { 1653,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1653 = VSUM4SHS
  { 1654,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1654 = VSUM4UBS
  { 1655,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1655 = VSUMSWS
  { 1656,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1656 = VUPKHPX
  { 1657,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1657 = VUPKHSB
  { 1658,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1658 = VUPKHSH
  { 1659,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1659 = VUPKHSW
  { 1660,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1660 = VUPKLPX
  { 1661,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1661 = VUPKLSB
  { 1662,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1662 = VUPKLSH
  { 1663,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1663 = VUPKLSW
  { 1664,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1664 = VXOR
  { 1665,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1665 = V_SET0
  { 1666,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1666 = V_SET0B
  { 1667,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1667 = V_SET0H
  { 1668,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1668 = V_SETALLONES
  { 1669,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1669 = V_SETALLONESB
  { 1670,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1670 = V_SETALLONESH
  { 1671,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1671 = WAIT
  { 1672,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1672 = WRTEE
  { 1673,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1673 = WRTEEI
  { 1674,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1674 = XOR
  { 1675,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #1675 = XOR8
  { 1676,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo23, -1 ,nullptr },  // Inst #1676 = XOR8o
  { 1677,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1677 = XORI
  { 1678,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1678 = XORI8
  { 1679,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #1679 = XORIS
  { 1680,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #1680 = XORIS8
  { 1681,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #1681 = XORo
  { 1682,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1682 = XSABSDP
  { 1683,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1683 = XSABSQP
  { 1684,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1684 = XSADDDP
  { 1685,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1685 = XSADDQP
  { 1686,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1686 = XSADDQPO
  { 1687,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1687 = XSADDSP
  { 1688,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1688 = XSCMPEQDP
  { 1689,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1689 = XSCMPEXPDP
  { 1690,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1690 = XSCMPEXPQP
  { 1691,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1691 = XSCMPGEDP
  { 1692,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1692 = XSCMPGTDP
  { 1693,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1693 = XSCMPNEDP
  { 1694,	3,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1694 = XSCMPODP
  { 1695,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1695 = XSCMPOQP
  { 1696,	3,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1696 = XSCMPUDP
  { 1697,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1697 = XSCMPUQP
  { 1698,	3,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1698 = XSCPSGNDP
  { 1699,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1699 = XSCPSGNQP
  { 1700,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1700 = XSCVDPHP
  { 1701,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1701 = XSCVDPQP
  { 1702,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1702 = XSCVDPSP
  { 1703,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1703 = XSCVDPSPN
  { 1704,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1704 = XSCVDPSXDS
  { 1705,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1705 = XSCVDPSXDSs
  { 1706,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1706 = XSCVDPSXWS
  { 1707,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1707 = XSCVDPSXWSs
  { 1708,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1708 = XSCVDPUXDS
  { 1709,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1709 = XSCVDPUXDSs
  { 1710,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1710 = XSCVDPUXWS
  { 1711,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1711 = XSCVDPUXWSs
  { 1712,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1712 = XSCVHPDP
  { 1713,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1713 = XSCVQPDP
  { 1714,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1714 = XSCVQPDPO
  { 1715,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1715 = XSCVQPSDZ
  { 1716,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1716 = XSCVQPSWZ
  { 1717,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1717 = XSCVQPUDZ
  { 1718,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1718 = XSCVQPUWZ
  { 1719,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1719 = XSCVSDQP
  { 1720,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1720 = XSCVSPDP
  { 1721,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1721 = XSCVSPDPN
  { 1722,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1722 = XSCVSXDDP
  { 1723,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1723 = XSCVSXDSP
  { 1724,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1724 = XSCVUDQP
  { 1725,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1725 = XSCVUXDDP
  { 1726,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1726 = XSCVUXDSP
  { 1727,	3,	1,	4,	17,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1727 = XSDIVDP
  { 1728,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1728 = XSDIVQP
  { 1729,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1729 = XSDIVQPO
  { 1730,	3,	1,	4,	18,	0, 0x40ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1730 = XSDIVSP
  { 1731,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #1731 = XSIEXPDP
  { 1732,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1732 = XSIEXPQP
  { 1733,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1733 = XSMADDADP
  { 1734,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1734 = XSMADDASP
  { 1735,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1735 = XSMADDMDP
  { 1736,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1736 = XSMADDMSP
  { 1737,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1737 = XSMADDQP
  { 1738,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1738 = XSMADDQPO
  { 1739,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1739 = XSMAXCDP
  { 1740,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1740 = XSMAXDP
  { 1741,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1741 = XSMAXJDP
  { 1742,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1742 = XSMINCDP
  { 1743,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1743 = XSMINDP
  { 1744,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1744 = XSMINJDP
  { 1745,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1745 = XSMSUBADP
  { 1746,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1746 = XSMSUBASP
  { 1747,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1747 = XSMSUBMDP
  { 1748,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1748 = XSMSUBMSP
  { 1749,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1749 = XSMSUBQP
  { 1750,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1750 = XSMSUBQPO
  { 1751,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1751 = XSMULDP
  { 1752,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1752 = XSMULQP
  { 1753,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1753 = XSMULQPO
  { 1754,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1754 = XSMULSP
  { 1755,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1755 = XSNABSDP
  { 1756,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1756 = XSNABSQP
  { 1757,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1757 = XSNEGDP
  { 1758,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1758 = XSNEGQP
  { 1759,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1759 = XSNMADDADP
  { 1760,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1760 = XSNMADDASP
  { 1761,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1761 = XSNMADDMDP
  { 1762,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1762 = XSNMADDMSP
  { 1763,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1763 = XSNMADDQP
  { 1764,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1764 = XSNMADDQPO
  { 1765,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1765 = XSNMSUBADP
  { 1766,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1766 = XSNMSUBASP
  { 1767,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1767 = XSNMSUBMDP
  { 1768,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1768 = XSNMSUBMSP
  { 1769,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1769 = XSNMSUBQP
  { 1770,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1770 = XSNMSUBQPO
  { 1771,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1771 = XSRDPI
  { 1772,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1772 = XSRDPIC
  { 1773,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1773 = XSRDPIM
  { 1774,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1774 = XSRDPIP
  { 1775,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1775 = XSRDPIZ
  { 1776,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1776 = XSREDP
  { 1777,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1777 = XSRESP
  { 1778,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1778 = XSRQPI
  { 1779,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1779 = XSRQPIX
  { 1780,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1780 = XSRQPXP
  { 1781,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1781 = XSRSQRTEDP
  { 1782,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1782 = XSRSQRTESP
  { 1783,	2,	1,	4,	20,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1783 = XSSQRTDP
  { 1784,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1784 = XSSQRTQP
  { 1785,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1785 = XSSQRTQPO
  { 1786,	2,	1,	4,	21,	0, 0x40ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1786 = XSSQRTSP
  { 1787,	3,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1787 = XSSUBDP
  { 1788,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1788 = XSSUBQP
  { 1789,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #1789 = XSSUBQPO
  { 1790,	3,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1790 = XSSUBSP
  { 1791,	3,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1791 = XSTDIVDP
  { 1792,	2,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1792 = XSTSQRTDP
  { 1793,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1793 = XSTSTDCDP
  { 1794,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1794 = XSTSTDCQP
  { 1795,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1795 = XSTSTDCSP
  { 1796,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #1796 = XSXEXPDP
  { 1797,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1797 = XSXEXPQP
  { 1798,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #1798 = XSXSIGDP
  { 1799,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #1799 = XSXSIGQP
  { 1800,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1800 = XVABSDP
  { 1801,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1801 = XVABSSP
  { 1802,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1802 = XVADDDP
  { 1803,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1803 = XVADDSP
  { 1804,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1804 = XVCMPEQDP
  { 1805,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1805 = XVCMPEQDPo
  { 1806,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1806 = XVCMPEQSP
  { 1807,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1807 = XVCMPEQSPo
  { 1808,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1808 = XVCMPGEDP
  { 1809,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1809 = XVCMPGEDPo
  { 1810,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1810 = XVCMPGESP
  { 1811,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1811 = XVCMPGESPo
  { 1812,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1812 = XVCMPGTDP
  { 1813,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1813 = XVCMPGTDPo
  { 1814,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1814 = XVCMPGTSP
  { 1815,	3,	1,	4,	91,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1815 = XVCMPGTSPo
  { 1816,	3,	1,	4,	91,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1816 = XVCMPNEDP
  { 1817,	3,	1,	4,	91,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1817 = XVCMPNEDPo
  { 1818,	3,	1,	4,	91,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1818 = XVCMPNESP
  { 1819,	3,	1,	4,	91,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, ImplicitList15, OperandInfo242, -1 ,nullptr },  // Inst #1819 = XVCMPNESPo
  { 1820,	3,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1820 = XVCPSGNDP
  { 1821,	3,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1821 = XVCPSGNSP
  { 1822,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1822 = XVCVDPSP
  { 1823,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1823 = XVCVDPSXDS
  { 1824,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1824 = XVCVDPSXWS
  { 1825,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1825 = XVCVDPUXDS
  { 1826,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1826 = XVCVDPUXWS
  { 1827,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1827 = XVCVHPSP
  { 1828,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1828 = XVCVSPDP
  { 1829,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1829 = XVCVSPHP
  { 1830,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1830 = XVCVSPSXDS
  { 1831,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1831 = XVCVSPSXWS
  { 1832,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1832 = XVCVSPUXDS
  { 1833,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1833 = XVCVSPUXWS
  { 1834,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1834 = XVCVSXDDP
  { 1835,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1835 = XVCVSXDSP
  { 1836,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1836 = XVCVSXWDP
  { 1837,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1837 = XVCVSXWSP
  { 1838,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1838 = XVCVUXDDP
  { 1839,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1839 = XVCVUXDSP
  { 1840,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1840 = XVCVUXWDP
  { 1841,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1841 = XVCVUXWSP
  { 1842,	3,	1,	4,	17,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1842 = XVDIVDP
  { 1843,	3,	1,	4,	18,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1843 = XVDIVSP
  { 1844,	3,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1844 = XVIEXPDP
  { 1845,	3,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1845 = XVIEXPSP
  { 1846,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1846 = XVMADDADP
  { 1847,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1847 = XVMADDASP
  { 1848,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1848 = XVMADDMDP
  { 1849,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1849 = XVMADDMSP
  { 1850,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1850 = XVMAXDP
  { 1851,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1851 = XVMAXSP
  { 1852,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1852 = XVMINDP
  { 1853,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1853 = XVMINSP
  { 1854,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1854 = XVMSUBADP
  { 1855,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1855 = XVMSUBASP
  { 1856,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1856 = XVMSUBMDP
  { 1857,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1857 = XVMSUBMSP
  { 1858,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1858 = XVMULDP
  { 1859,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1859 = XVMULSP
  { 1860,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1860 = XVNABSDP
  { 1861,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1861 = XVNABSSP
  { 1862,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1862 = XVNEGDP
  { 1863,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1863 = XVNEGSP
  { 1864,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1864 = XVNMADDADP
  { 1865,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1865 = XVNMADDASP
  { 1866,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1866 = XVNMADDMDP
  { 1867,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1867 = XVNMADDMSP
  { 1868,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1868 = XVNMSUBADP
  { 1869,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1869 = XVNMSUBASP
  { 1870,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1870 = XVNMSUBMDP
  { 1871,	4,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1871 = XVNMSUBMSP
  { 1872,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1872 = XVRDPI
  { 1873,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1873 = XVRDPIC
  { 1874,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1874 = XVRDPIM
  { 1875,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1875 = XVRDPIP
  { 1876,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1876 = XVRDPIZ
  { 1877,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1877 = XVREDP
  { 1878,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1878 = XVRESP
  { 1879,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1879 = XVRSPI
  { 1880,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1880 = XVRSPIC
  { 1881,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1881 = XVRSPIM
  { 1882,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1882 = XVRSPIP
  { 1883,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1883 = XVRSPIZ
  { 1884,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1884 = XVRSQRTEDP
  { 1885,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1885 = XVRSQRTESP
  { 1886,	2,	1,	4,	20,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1886 = XVSQRTDP
  { 1887,	2,	1,	4,	21,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1887 = XVSQRTSP
  { 1888,	3,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1888 = XVSUBDP
  { 1889,	3,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1889 = XVSUBSP
  { 1890,	3,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1890 = XVTDIVDP
  { 1891,	3,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1891 = XVTDIVSP
  { 1892,	2,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1892 = XVTSQRTDP
  { 1893,	2,	1,	4,	16,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1893 = XVTSQRTSP
  { 1894,	3,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1894 = XVTSTDCDP
  { 1895,	3,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1895 = XVTSTDCSP
  { 1896,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1896 = XVXEXPDP
  { 1897,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1897 = XVXEXPSP
  { 1898,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1898 = XVXSIGDP
  { 1899,	2,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1899 = XVXSIGSP
  { 1900,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1900 = XXBRD
  { 1901,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1901 = XXBRH
  { 1902,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1902 = XXBRQ
  { 1903,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1903 = XXBRW
  { 1904,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1904 = XXEXTRACTUW
  { 1905,	4,	1,	4,	4,	0, 0x40ULL, nullptr, nullptr, OperandInfo248, -1 ,nullptr },  // Inst #1905 = XXINSERTW
  { 1906,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1906 = XXLAND
  { 1907,	3,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1907 = XXLANDC
  { 1908,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1908 = XXLEQV
  { 1909,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1909 = XXLNAND
  { 1910,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1910 = XXLNOR
  { 1911,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1911 = XXLOR
  { 1912,	3,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1912 = XXLORC
  { 1913,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1913 = XXLORf
  { 1914,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1914 = XXLXOR
  { 1915,	1,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1915 = XXLXORdpz
  { 1916,	1,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1916 = XXLXORspz
  { 1917,	1,	1,	4,	50,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1917 = XXLXORz
  { 1918,	3,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1918 = XXMRGHW
  { 1919,	3,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1919 = XXMRGLW
  { 1920,	3,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1920 = XXPERM
  { 1921,	4,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1921 = XXPERMDI
  { 1922,	3,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1922 = XXPERMDIs
  { 1923,	3,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1923 = XXPERMR
  { 1924,	4,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo254, -1 ,nullptr },  // Inst #1924 = XXSEL
  { 1925,	4,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1925 = XXSLDWI
  { 1926,	2,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo255, -1 ,nullptr },  // Inst #1926 = XXSPLTIB
  { 1927,	3,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo256, -1 ,nullptr },  // Inst #1927 = XXSPLTW
  { 1928,	3,	1,	4,	62,	0, 0x40ULL, nullptr, nullptr, OperandInfo257, -1 ,nullptr },  // Inst #1928 = XXSPLTWs
  { 1929,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo258, -1 ,nullptr },  // Inst #1929 = gBC
  { 1930,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo258, -1 ,nullptr },  // Inst #1930 = gBCA
  { 1931,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo259, -1 ,nullptr },  // Inst #1931 = gBCAat
  { 1932,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo260, -1 ,nullptr },  // Inst #1932 = gBCCTR
  { 1933,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList25, OperandInfo260, -1 ,nullptr },  // Inst #1933 = gBCCTRL
  { 1934,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo258, -1 ,nullptr },  // Inst #1934 = gBCL
  { 1935,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo258, -1 ,nullptr },  // Inst #1935 = gBCLA
  { 1936,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo259, -1 ,nullptr },  // Inst #1936 = gBCLAat
  { 1937,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo260, -1 ,nullptr },  // Inst #1937 = gBCLR
  { 1938,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList25, OperandInfo260, -1 ,nullptr },  // Inst #1938 = gBCLRL
  { 1939,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo259, -1 ,nullptr },  // Inst #1939 = gBCLat
  { 1940,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo259, -1 ,nullptr },  // Inst #1940 = gBCat
};

extern const char PPCInstrNameData[] = {
  /* 0 */ 'M', 'T', 'F', 'S', 'B', '0', 0,
  /* 7 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 14 */ 'V', 'C', 'T', 'S', 'X', 'S', '_', '0', 0,
  /* 23 */ 'V', 'C', 'T', 'U', 'X', 'S', '_', '0', 0,
  /* 32 */ 'V', 'C', 'F', 'S', 'X', '_', '0', 0,
  /* 40 */ 'V', 'C', 'F', 'U', 'X', '_', '0', 0,
  /* 48 */ 'M', 'T', 'F', 'S', 'B', '1', 0,
  /* 55 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 71 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 91 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 132 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 173 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 193 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 209 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 229 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 249 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 268 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 289 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 309 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 322 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 335 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 349 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 363 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 380 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 397 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 412 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 425 */ 'L', 'W', 'A', '_', '3', '2', 0,
  /* 432 */ 'L', 'W', 'A', 'X', '_', '3', '2', 0,
  /* 440 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 450 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 461 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 479 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 496 */ 'T', 'L', 'B', 'R', 'E', '2', 0,
  /* 503 */ 'T', 'L', 'B', 'W', 'E', '2', 0,
  /* 510 */ 'T', 'L', 'B', 'S', 'X', '2', 0,
  /* 517 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 537 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 557 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 578 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 598 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 619 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 639 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 655 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 675 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 695 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 714 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 735 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 755 */ 'D', 'S', 'T', '6', '4', 0,
  /* 761 */ 'D', 'S', 'T', 'S', 'T', '6', '4', 0,
  /* 769 */ 'D', 'S', 'T', 'T', '6', '4', 0,
  /* 776 */ 'D', 'S', 'T', 'S', 'T', 'T', '6', '4', 0,
  /* 785 */ 'E', 'X', 'T', 'S', 'B', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 798 */ 'E', 'X', 'T', 'S', 'H', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 811 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', '6', '4', 0,
  /* 824 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 0,
  /* 836 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 846 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 857 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 875 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 892 */ 'A', 'D', 'D', '4', 0,
  /* 897 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 910 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 920 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 933 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 943 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 963 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 983 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1004 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1024 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1045 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1065 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1081 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1101 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1121 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1140 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1161 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1181 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '6', 0,
  /* 1193 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '7', 0,
  /* 1205 */ 'T', 'A', 'I', 'L', 'B', 'A', '8', 0,
  /* 1213 */ 'L', 'H', 'A', '8', 0,
  /* 1218 */ 'B', 'L', 'A', '8', 0,
  /* 1223 */ 'T', 'A', 'I', 'L', 'B', '8', 0,
  /* 1230 */ 'C', 'M', 'P', 'B', '8', 0,
  /* 1236 */ 'C', 'M', 'P', 'R', 'B', '8', 0,
  /* 1243 */ 'E', 'X', 'T', 'S', 'B', '8', 0,
  /* 1250 */ 'M', 'F', 'T', 'B', '8', 0,
  /* 1256 */ 'S', 'T', 'B', '8', 0,
  /* 1261 */ 'A', 'D', 'D', 'C', '8', 0,
  /* 1267 */ 'A', 'N', 'D', 'C', '8', 0,
  /* 1273 */ 'S', 'U', 'B', 'F', 'C', '8', 0,
  /* 1280 */ 'A', 'D', 'D', 'I', 'C', '8', 0,
  /* 1287 */ 'S', 'U', 'B', 'F', 'I', 'C', '8', 0,
  /* 1295 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 1305 */ 'O', 'R', 'C', '8', 0,
  /* 1310 */ 'A', 'D', 'D', '8', 0,
  /* 1315 */ 'N', 'A', 'N', 'D', '8', 0,
  /* 1321 */ 'A', 'D', 'D', 'E', '8', 0,
  /* 1327 */ 'S', 'U', 'B', 'F', 'E', '8', 0,
  /* 1334 */ 'A', 'D', 'D', 'M', 'E', '8', 0,
  /* 1341 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 0,
  /* 1349 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 0,
  /* 1359 */ 'A', 'D', 'D', 'Z', 'E', '8', 0,
  /* 1366 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 0,
  /* 1374 */ 'S', 'U', 'B', 'F', '8', 0,
  /* 1380 */ 'M', 'F', 'O', 'C', 'R', 'F', '8', 0,
  /* 1388 */ 'M', 'T', 'O', 'C', 'R', 'F', '8', 0,
  /* 1396 */ 'M', 'T', 'C', 'R', 'F', '8', 0,
  /* 1403 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 1416 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 1426 */ 'N', 'E', 'G', '8', 0,
  /* 1431 */ 'E', 'X', 'T', 'S', 'H', '8', 0,
  /* 1438 */ 'S', 'T', 'H', '8', 0,
  /* 1443 */ 'A', 'D', 'D', 'I', '8', 0,
  /* 1449 */ 'M', 'U', 'L', 'L', 'I', '8', 0,
  /* 1456 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 0,
  /* 1464 */ 'X', 'O', 'R', 'I', '8', 0,
  /* 1470 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 1489 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 1502 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 1521 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1541 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1560 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1580 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1599 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1614 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1633 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 1652 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 1670 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 1680 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1700 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1719 */ 'B', 'L', '8', 0,
  /* 1723 */ 'I', 'S', 'E', 'L', '8', 0,
  /* 1729 */ 'B', 'C', 'T', 'R', 'L', '8', 0,
  /* 1736 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1744 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1753 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 0,
  /* 1761 */ 'R', 'L', 'W', 'N', 'M', '8', 0,
  /* 1768 */ 'M', 'F', 'C', 'R', '8', 0,
  /* 1774 */ 'B', 'L', 'R', '8', 0,
  /* 1779 */ 'M', 'F', 'L', 'R', '8', 0,
  /* 1785 */ 'M', 'T', 'L', 'R', '8', 0,
  /* 1791 */ 'B', 'D', 'Z', 'L', 'R', '8', 0,
  /* 1798 */ 'B', 'D', 'N', 'Z', 'L', 'R', '8', 0,
  /* 1806 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 1818 */ 'N', 'O', 'R', '8', 0,
  /* 1823 */ 'X', 'O', 'R', '8', 0,
  /* 1828 */ 'M', 'F', 'S', 'P', 'R', '8', 0,
  /* 1835 */ 'M', 'T', 'S', 'P', 'R', '8', 0,
  /* 1842 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', '8', 0,
  /* 1852 */ 'B', 'C', 'C', 'T', 'R', '8', 0,
  /* 1859 */ 'B', 'C', 'C', 'C', 'T', 'R', '8', 0,
  /* 1867 */ 'M', 'F', 'C', 'T', 'R', '8', 0,
  /* 1874 */ 'M', 'T', 'C', 'T', 'R', '8', 0,
  /* 1881 */ 'A', 'D', 'D', 'I', 'S', '8', 0,
  /* 1888 */ 'L', 'I', 'S', '8', 0,
  /* 1893 */ 'X', 'O', 'R', 'I', 'S', '8', 0,
  /* 1900 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 1915 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 1931 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 1947 */ 'L', 'H', 'A', 'U', '8', 0,
  /* 1953 */ 'S', 'T', 'B', 'U', '8', 0,
  /* 1959 */ 'S', 'T', 'H', 'U', '8', 0,
  /* 1965 */ 'S', 'T', 'W', 'U', '8', 0,
  /* 1971 */ 'L', 'B', 'Z', 'U', '8', 0,
  /* 1977 */ 'L', 'H', 'Z', 'U', '8', 0,
  /* 1983 */ 'L', 'W', 'Z', 'U', '8', 0,
  /* 1989 */ 'E', 'Q', 'V', '8', 0,
  /* 1994 */ 'S', 'L', 'W', '8', 0,
  /* 1999 */ 'S', 'R', 'W', '8', 0,
  /* 2004 */ 'S', 'T', 'W', '8', 0,
  /* 2009 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 0,
  /* 2017 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 0,
  /* 2025 */ 'L', 'H', 'A', 'X', '8', 0,
  /* 2031 */ 'S', 'T', 'B', 'X', '8', 0,
  /* 2037 */ 'S', 'T', 'H', 'X', '8', 0,
  /* 2043 */ 'L', 'H', 'B', 'R', 'X', '8', 0,
  /* 2050 */ 'L', 'W', 'B', 'R', 'X', '8', 0,
  /* 2057 */ 'L', 'H', 'A', 'U', 'X', '8', 0,
  /* 2064 */ 'S', 'T', 'B', 'U', 'X', '8', 0,
  /* 2071 */ 'S', 'T', 'H', 'U', 'X', '8', 0,
  /* 2078 */ 'S', 'T', 'W', 'U', 'X', '8', 0,
  /* 2085 */ 'L', 'B', 'Z', 'U', 'X', '8', 0,
  /* 2092 */ 'L', 'H', 'Z', 'U', 'X', '8', 0,
  /* 2099 */ 'L', 'W', 'Z', 'U', 'X', '8', 0,
  /* 2106 */ 'S', 'T', 'W', 'X', '8', 0,
  /* 2112 */ 'L', 'B', 'Z', 'X', '8', 0,
  /* 2118 */ 'L', 'H', 'Z', 'X', '8', 0,
  /* 2124 */ 'L', 'W', 'Z', 'X', '8', 0,
  /* 2130 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '8', 0,
  /* 2139 */ 'L', 'B', 'Z', '8', 0,
  /* 2144 */ 'B', 'D', 'Z', '8', 0,
  /* 2149 */ 'L', 'H', 'Z', '8', 0,
  /* 2154 */ 'B', 'D', 'N', 'Z', '8', 0,
  /* 2160 */ 'L', 'W', 'Z', '8', 0,
  /* 2165 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', '8', 0,
  /* 2177 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '8', 0,
  /* 2189 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '8', 0,
  /* 2201 */ 'A', 'N', 'D', 'I', 'o', '8', 0,
  /* 2208 */ 'A', 'N', 'D', 'I', 'S', 'o', '8', 0,
  /* 2216 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2228 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2240 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2250 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'A', 0,
  /* 2260 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2272 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2284 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2294 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2306 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2318 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2328 */ 'D', 'C', 'B', 'A', 0,
  /* 2333 */ 'T', 'A', 'I', 'L', 'B', 'A', 0,
  /* 2340 */ 'L', 'D', 't', 'o', 'c', 'B', 'A', 0,
  /* 2348 */ 'g', 'B', 'C', 'A', 0,
  /* 2353 */ 'B', 'C', 'C', 'A', 0,
  /* 2358 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 0,
  /* 2368 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 'A', 0,
  /* 2378 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 0,
  /* 2388 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 0,
  /* 2397 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 0,
  /* 2407 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 'A', 0,
  /* 2417 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 0,
  /* 2427 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 0,
  /* 2436 */ 'L', 'H', 'A', 0,
  /* 2440 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 2451 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 2464 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 2477 */ 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2493 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2507 */ 'S', 'L', 'B', 'I', 'A', 0,
  /* 2513 */ 'T', 'L', 'B', 'I', 'A', 0,
  /* 2519 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 0,
  /* 2529 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 'A', 0,
  /* 2539 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 0,
  /* 2549 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 0,
  /* 2558 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 0,
  /* 2568 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 'A', 0,
  /* 2578 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 0,
  /* 2588 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 0,
  /* 2598 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 0,
  /* 2607 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 'A', 0,
  /* 2618 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 'A', 0,
  /* 2628 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 'A', 0,
  /* 2639 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 'A', 0,
  /* 2649 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2661 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2672 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2684 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2695 */ 'B', 'L', 'A', 0,
  /* 2699 */ 'g', 'B', 'C', 'L', 'A', 0,
  /* 2705 */ 'B', 'C', 'C', 'L', 'A', 0,
  /* 2711 */ 'B', 'D', 'Z', 'L', 'A', 0,
  /* 2717 */ 'B', 'D', 'N', 'Z', 'L', 'A', 0,
  /* 2724 */ 'E', 'V', 'M', 'R', 'A', 0,
  /* 2730 */ 'L', 'W', 'A', 0,
  /* 2734 */ 'M', 'T', 'V', 'S', 'R', 'W', 'A', 0,
  /* 2742 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 'A', 0,
  /* 2752 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2761 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2771 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'A', 0,
  /* 2779 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'A', 0,
  /* 2788 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2797 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2807 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'A', 0,
  /* 2815 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'A', 0,
  /* 2824 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2834 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2845 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2854 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2864 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2874 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2885 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2894 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2904 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 'A', 0,
  /* 2914 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 'A', 0,
  /* 2924 */ 'B', 'D', 'Z', 'A', 0,
  /* 2929 */ 'B', 'D', 'N', 'Z', 'A', 0,
  /* 2935 */ 'V', '_', 'S', 'E', 'T', '0', 'B', 0,
  /* 2943 */ 'V', 'S', 'R', 'A', 'B', 0,
  /* 2949 */ 'R', 'F', 'E', 'B', 'B', 0,
  /* 2955 */ 'V', 'C', 'L', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 2964 */ 'V', 'C', 'T', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 2973 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 0,
  /* 2981 */ 'V', 'M', 'R', 'G', 'H', 'B', 0,
  /* 2988 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'B', 0,
  /* 2997 */ 'V', 'M', 'R', 'G', 'L', 'B', 0,
  /* 3004 */ 'T', 'A', 'I', 'L', 'B', 0,
  /* 3010 */ 'V', 'R', 'L', 'B', 0,
  /* 3015 */ 'V', 'S', 'L', 'B', 0,
  /* 3020 */ 'V', 'P', 'M', 'S', 'U', 'M', 'B', 0,
  /* 3028 */ 'C', 'M', 'P', 'B', 0,
  /* 3033 */ 'C', 'M', 'P', 'E', 'Q', 'B', 0,
  /* 3040 */ 'C', 'L', 'R', 'B', 'H', 'R', 'B', 0,
  /* 3048 */ 'C', 'M', 'P', 'R', 'B', 0,
  /* 3054 */ 'V', 'S', 'R', 'B', 0,
  /* 3059 */ 'V', 'M', 'U', 'L', 'E', 'S', 'B', 0,
  /* 3067 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'B', 0,
  /* 3081 */ 'V', 'A', 'V', 'G', 'S', 'B', 0,
  /* 3088 */ 'V', 'U', 'P', 'K', 'H', 'S', 'B', 0,
  /* 3096 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'B', 0,
  /* 3105 */ 'V', 'U', 'P', 'K', 'L', 'S', 'B', 0,
  /* 3113 */ 'V', 'M', 'I', 'N', 'S', 'B', 0,
  /* 3120 */ 'V', 'M', 'U', 'L', 'O', 'S', 'B', 0,
  /* 3128 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 0,
  /* 3137 */ 'E', 'V', 'E', 'X', 'T', 'S', 'B', 0,
  /* 3145 */ 'V', 'M', 'A', 'X', 'S', 'B', 0,
  /* 3152 */ 'M', 'F', 'T', 'B', 0,
  /* 3157 */ 'V', 'S', 'P', 'L', 'T', 'B', 0,
  /* 3164 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'B', 0,
  /* 3173 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'B', 0,
  /* 3182 */ 'S', 'T', 'B', 0,
  /* 3186 */ 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 3193 */ 'V', 'A', 'B', 'S', 'D', 'U', 'B', 0,
  /* 3201 */ 'V', 'M', 'U', 'L', 'E', 'U', 'B', 0,
  /* 3209 */ 'V', 'A', 'V', 'G', 'U', 'B', 0,
  /* 3216 */ 'V', 'M', 'I', 'N', 'U', 'B', 0,
  /* 3223 */ 'V', 'M', 'U', 'L', 'O', 'U', 'B', 0,
  /* 3231 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 0,
  /* 3240 */ 'Q', 'V', 'F', 'S', 'U', 'B', 0,
  /* 3247 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 3254 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 0,
  /* 3262 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 0,
  /* 3271 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 3277 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'B', 0,
  /* 3288 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 0,
  /* 3297 */ 'V', 'M', 'A', 'X', 'U', 'B', 0,
  /* 3304 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 0,
  /* 3313 */ 'V', 'C', 'L', 'Z', 'B', 0,
  /* 3319 */ 'V', 'C', 'T', 'Z', 'B', 0,
  /* 3325 */ 'g', 'B', 'C', 0,
  /* 3329 */ 'B', 'C', 'C', 0,
  /* 3333 */ 'A', 'D', 'D', 'C', 0,
  /* 3338 */ 'X', 'X', 'L', 'A', 'N', 'D', 'C', 0,
  /* 3346 */ 'C', 'R', 'A', 'N', 'D', 'C', 0,
  /* 3353 */ 'E', 'V', 'A', 'N', 'D', 'C', 0,
  /* 3360 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 0,
  /* 3369 */ 'S', 'U', 'B', 'F', 'C', 0,
  /* 3375 */ 'S', 'U', 'B', 'I', 'C', 0,
  /* 3381 */ 'A', 'D', 'D', 'I', 'C', 0,
  /* 3387 */ 'R', 'L', 'D', 'I', 'C', 0,
  /* 3393 */ 'S', 'U', 'B', 'F', 'I', 'C', 0,
  /* 3400 */ 'X', 'S', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3408 */ 'X', 'V', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3416 */ 'X', 'V', 'R', 'S', 'P', 'I', 'C', 0,
  /* 3424 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 3436 */ 'B', 'R', 'I', 'N', 'C', 0,
  /* 3442 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3452 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3460 */ 'S', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3468 */ 'T', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3476 */ 'M', 'S', 'G', 'S', 'Y', 'N', 'C', 0,
  /* 3484 */ 'I', 'S', 'Y', 'N', 'C', 0,
  /* 3490 */ 'M', 'S', 'Y', 'N', 'C', 0,
  /* 3496 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 3505 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3520 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3532 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3547 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3559 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3575 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3588 */ 'X', 'X', 'L', 'O', 'R', 'C', 0,
  /* 3595 */ 'C', 'R', 'O', 'R', 'C', 0,
  /* 3601 */ 'E', 'V', 'O', 'R', 'C', 0,
  /* 3607 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 3622 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 3634 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3649 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3661 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3677 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3690 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 3705 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 3717 */ 'S', 'C', 0,
  /* 3720 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 0,
  /* 3729 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 0,
  /* 3738 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 0,
  /* 3747 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 0,
  /* 3756 */ 'T', 'L', 'B', 'S', 'X', '2', 'D', 0,
  /* 3764 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'D', 0,
  /* 3775 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 3782 */ 'V', 'S', 'R', 'A', 'D', 0,
  /* 3788 */ 'V', 'G', 'B', 'B', 'D', 0,
  /* 3794 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'D', 0,
  /* 3802 */ 'Q', 'V', 'F', 'A', 'D', 'D', 0,
  /* 3809 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 3816 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 0,
  /* 3824 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3833 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3846 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 0,
  /* 3858 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3867 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3877 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 3883 */ 'E', 'V', 'L', 'D', 'D', 0,
  /* 3889 */ 'M', 'T', 'V', 'S', 'R', 'D', 'D', 0,
  /* 3897 */ 'E', 'V', 'S', 'T', 'D', 'D', 0,
  /* 3904 */ 'L', 'F', 'D', 0,
  /* 3908 */ 'S', 'T', 'F', 'D', 0,
  /* 3913 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 3919 */ 'V', 'N', 'E', 'G', 'D', 0,
  /* 3925 */ 'M', 'U', 'L', 'H', 'D', 0,
  /* 3931 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 0,
  /* 3939 */ 'H', 'R', 'F', 'I', 'D', 0,
  /* 3945 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 0,
  /* 3953 */ 'T', 'L', 'B', 'L', 'D', 0,
  /* 3959 */ 'F', 'S', 'E', 'L', 'D', 0,
  /* 3965 */ 'M', 'U', 'L', 'L', 'D', 0,
  /* 3971 */ 'C', 'M', 'P', 'L', 'D', 0,
  /* 3977 */ 'M', 'F', 'V', 'S', 'R', 'L', 'D', 0,
  /* 3985 */ 'V', 'R', 'L', 'D', 0,
  /* 3990 */ 'V', 'S', 'L', 'D', 0,
  /* 3995 */ 'F', 'R', 'I', 'M', 'D', 0,
  /* 4001 */ 'V', 'B', 'P', 'E', 'R', 'M', 'D', 0,
  /* 4009 */ 'V', 'P', 'M', 'S', 'U', 'M', 'D', 0,
  /* 4017 */ 'X', 'X', 'L', 'A', 'N', 'D', 0,
  /* 4024 */ 'X', 'X', 'L', 'N', 'A', 'N', 'D', 0,
  /* 4032 */ 'C', 'R', 'N', 'A', 'N', 'D', 0,
  /* 4039 */ 'E', 'V', 'N', 'A', 'N', 'D', 0,
  /* 4046 */ 'C', 'R', 'A', 'N', 'D', 0,
  /* 4052 */ 'E', 'V', 'A', 'N', 'D', 0,
  /* 4058 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 4064 */ 'T', 'E', 'N', 'D', 0,
  /* 4069 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4082 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 0,
  /* 4090 */ 'F', 'R', 'I', 'N', 'D', 0,
  /* 4096 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 4105 */ 'F', 'R', 'I', 'P', 'D', 0,
  /* 4111 */ 'C', 'M', 'P', 'D', 0,
  /* 4116 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 4133 */ 'X', 'X', 'B', 'R', 'D', 0,
  /* 4139 */ 'M', 'T', 'M', 'S', 'R', 'D', 0,
  /* 4146 */ 'M', 'F', 'V', 'S', 'R', 'D', 0,
  /* 4153 */ 'M', 'T', 'V', 'S', 'R', 'D', 0,
  /* 4160 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 4166 */ 'F', 'N', 'A', 'B', 'S', 'D', 0,
  /* 4173 */ 'V', 'M', 'I', 'N', 'S', 'D', 0,
  /* 4180 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 0,
  /* 4189 */ 'V', 'M', 'A', 'X', 'S', 'D', 0,
  /* 4196 */ 'L', 'X', 'S', 'D', 0,
  /* 4201 */ 'S', 'T', 'X', 'S', 'D', 0,
  /* 4207 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'D', 0,
  /* 4217 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'D', 0,
  /* 4226 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'D', 0,
  /* 4235 */ 'S', 'T', 'D', 0,
  /* 4239 */ 'V', 'M', 'I', 'N', 'U', 'D', 0,
  /* 4246 */ 'F', 'C', 'M', 'P', 'U', 'D', 0,
  /* 4253 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 0,
  /* 4262 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 0,
  /* 4271 */ 'V', 'M', 'A', 'X', 'U', 'D', 0,
  /* 4278 */ 'D', 'I', 'V', 'D', 0,
  /* 4283 */ 'F', 'R', 'I', 'Z', 'D', 0,
  /* 4289 */ 'V', 'C', 'L', 'Z', 'D', 0,
  /* 4295 */ 'C', 'N', 'T', 'L', 'Z', 'D', 0,
  /* 4302 */ 'V', 'C', 'T', 'Z', 'D', 0,
  /* 4308 */ 'C', 'N', 'T', 'T', 'Z', 'D', 0,
  /* 4315 */ 'M', 'F', 'B', 'H', 'R', 'B', 'E', 0,
  /* 4323 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 4331 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 4344 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 4352 */ 'D', 'I', 'V', 'D', 'E', 0,
  /* 4358 */ 'S', 'L', 'B', 'M', 'F', 'E', 'E', 0,
  /* 4366 */ 'W', 'R', 'T', 'E', 'E', 0,
  /* 4372 */ 'S', 'U', 'B', 'F', 'E', 0,
  /* 4378 */ 'E', 'V', 'L', 'W', 'H', 'E', 0,
  /* 4385 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 0,
  /* 4393 */ 'S', 'L', 'B', 'I', 'E', 0,
  /* 4399 */ 'T', 'L', 'B', 'I', 'E', 0,
  /* 4405 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4412 */ 'A', 'D', 'D', 'M', 'E', 0,
  /* 4418 */ 'S', 'U', 'B', 'F', 'M', 'E', 0,
  /* 4425 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 4438 */ 'T', 'L', 'B', 'R', 'E', 0,
  /* 4444 */ 'Q', 'V', 'F', 'R', 'E', 0,
  /* 4450 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 4458 */ 'S', 'L', 'B', 'M', 'T', 'E', 0,
  /* 4465 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 0,
  /* 4475 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 0,
  /* 4484 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4494 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4509 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4518 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4527 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4542 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4556 */ 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4569 */ 'T', 'L', 'B', 'W', 'E', 0,
  /* 4575 */ 'D', 'I', 'V', 'W', 'E', 0,
  /* 4581 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 0,
  /* 4589 */ 'A', 'D', 'D', 'Z', 'E', 0,
  /* 4595 */ 'S', 'U', 'B', 'F', 'Z', 'E', 0,
  /* 4602 */ 'D', 'C', 'B', 'F', 0,
  /* 4607 */ 'S', 'U', 'B', 'F', 0,
  /* 4612 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 4625 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 0,
  /* 4634 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 0,
  /* 4643 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 0,
  /* 4652 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 0,
  /* 4660 */ 'M', 'C', 'R', 'F', 0,
  /* 4665 */ 'M', 'F', 'O', 'C', 'R', 'F', 0,
  /* 4672 */ 'M', 'T', 'O', 'C', 'R', 'F', 0,
  /* 4679 */ 'M', 'T', 'C', 'R', 'F', 0,
  /* 4685 */ 'M', 'T', 'F', 'S', 'F', 0,
  /* 4691 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 0,
  /* 4700 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 0,
  /* 4709 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 0,
  /* 4718 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 0,
  /* 4726 */ 'S', 'L', 'B', 'I', 'E', 'G', 0,
  /* 4733 */ 'Q', 'V', 'F', 'N', 'E', 'G', 0,
  /* 4740 */ 'E', 'V', 'N', 'E', 'G', 0,
  /* 4746 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4761 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4775 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4789 */ 'V', '_', 'S', 'E', 'T', '0', 'H', 0,
  /* 4797 */ 'V', 'S', 'R', 'A', 'H', 0,
  /* 4803 */ 'E', 'V', 'L', 'D', 'H', 0,
  /* 4809 */ 'E', 'V', 'S', 'T', 'D', 'H', 0,
  /* 4816 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 0,
  /* 4824 */ 'V', 'M', 'R', 'G', 'H', 'H', 0,
  /* 4831 */ 'V', 'M', 'R', 'G', 'L', 'H', 0,
  /* 4838 */ 'V', 'R', 'L', 'H', 0,
  /* 4843 */ 'V', 'S', 'L', 'H', 0,
  /* 4848 */ 'V', 'P', 'M', 'S', 'U', 'M', 'H', 0,
  /* 4856 */ 'X', 'X', 'B', 'R', 'H', 0,
  /* 4862 */ 'V', 'S', 'R', 'H', 0,
  /* 4867 */ 'V', 'M', 'U', 'L', 'E', 'S', 'H', 0,
  /* 4875 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'H', 0,
  /* 4889 */ 'V', 'A', 'V', 'G', 'S', 'H', 0,
  /* 4896 */ 'V', 'U', 'P', 'K', 'H', 'S', 'H', 0,
  /* 4904 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'H', 0,
  /* 4913 */ 'V', 'U', 'P', 'K', 'L', 'S', 'H', 0,
  /* 4921 */ 'V', 'M', 'I', 'N', 'S', 'H', 0,
  /* 4928 */ 'V', 'M', 'U', 'L', 'O', 'S', 'H', 0,
  /* 4936 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 0,
  /* 4945 */ 'E', 'V', 'E', 'X', 'T', 'S', 'H', 0,
  /* 4953 */ 'V', 'M', 'A', 'X', 'S', 'H', 0,
  /* 4960 */ 'V', 'S', 'P', 'L', 'T', 'H', 0,
  /* 4967 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'H', 0,
  /* 4976 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'H', 0,
  /* 4985 */ 'S', 'T', 'H', 0,
  /* 4989 */ 'V', 'A', 'B', 'S', 'D', 'U', 'H', 0,
  /* 4997 */ 'V', 'M', 'U', 'L', 'E', 'U', 'H', 0,
  /* 5005 */ 'V', 'A', 'V', 'G', 'U', 'H', 0,
  /* 5012 */ 'V', 'M', 'I', 'N', 'U', 'H', 0,
  /* 5019 */ 'V', 'M', 'U', 'L', 'O', 'U', 'H', 0,
  /* 5027 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 0,
  /* 5036 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'H', 0,
  /* 5047 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 0,
  /* 5056 */ 'V', 'M', 'A', 'X', 'U', 'H', 0,
  /* 5063 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 0,
  /* 5072 */ 'V', 'C', 'L', 'Z', 'H', 0,
  /* 5078 */ 'V', 'C', 'T', 'Z', 'H', 0,
  /* 5084 */ 'D', 'C', 'B', 'I', 0,
  /* 5089 */ 'I', 'C', 'B', 'I', 0,
  /* 5094 */ 'S', 'U', 'B', 'I', 0,
  /* 5099 */ 'D', 'C', 'C', 'C', 'I', 0,
  /* 5105 */ 'I', 'C', 'C', 'C', 'I', 0,
  /* 5111 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 'I', 0,
  /* 5121 */ 'R', 'F', 'C', 'I', 0,
  /* 5126 */ 'R', 'F', 'M', 'C', 'I', 0,
  /* 5132 */ 'Q', 'V', 'G', 'P', 'C', 'I', 0,
  /* 5139 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 'I', 0,
  /* 5149 */ 'S', 'R', 'A', 'D', 'I', 0,
  /* 5155 */ 'A', 'D', 'D', 'I', 0,
  /* 5160 */ 'R', 'F', 'D', 'I', 0,
  /* 5165 */ 'C', 'M', 'P', 'L', 'D', 'I', 0,
  /* 5172 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 0,
  /* 5181 */ 'E', 'X', 'T', 'L', 'D', 'I', 0,
  /* 5188 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 0,
  /* 5197 */ 'C', 'M', 'P', 'D', 'I', 0,
  /* 5203 */ 'C', 'L', 'R', 'R', 'D', 'I', 0,
  /* 5210 */ 'I', 'N', 'S', 'R', 'D', 'I', 0,
  /* 5217 */ 'R', 'O', 'T', 'R', 'D', 'I', 0,
  /* 5224 */ 'E', 'X', 'T', 'R', 'D', 'I', 0,
  /* 5231 */ 'T', 'D', 'I', 0,
  /* 5235 */ 'W', 'R', 'T', 'E', 'E', 'I', 0,
  /* 5242 */ 'R', 'F', 'I', 0,
  /* 5246 */ 'M', 'T', 'F', 'S', 'F', 'I', 0,
  /* 5253 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'F', 'I', 0,
  /* 5263 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 0,
  /* 5273 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 'H', 'I', 0,
  /* 5285 */ 'P', 'H', 'I', 0,
  /* 5289 */ 'T', 'L', 'B', 'L', 'I', 0,
  /* 5295 */ 'M', 'U', 'L', 'L', 'I', 0,
  /* 5301 */ 'V', 'R', 'L', 'D', 'M', 'I', 0,
  /* 5308 */ 'R', 'L', 'D', 'I', 'M', 'I', 0,
  /* 5315 */ 'R', 'L', 'W', 'I', 'M', 'I', 0,
  /* 5322 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 0,
  /* 5331 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 0,
  /* 5340 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 0,
  /* 5349 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 0,
  /* 5357 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 0,
  /* 5366 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 0,
  /* 5375 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 0,
  /* 5384 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 0,
  /* 5393 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 0,
  /* 5401 */ 'V', 'R', 'L', 'W', 'M', 'I', 0,
  /* 5408 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 0,
  /* 5417 */ 'V', 'S', 'L', 'D', 'O', 'I', 0,
  /* 5424 */ 'X', 'S', 'R', 'D', 'P', 'I', 0,
  /* 5431 */ 'X', 'V', 'R', 'D', 'P', 'I', 0,
  /* 5438 */ 'X', 'S', 'R', 'Q', 'P', 'I', 0,
  /* 5445 */ 'X', 'V', 'R', 'S', 'P', 'I', 0,
  /* 5452 */ 'X', 'O', 'R', 'I', 0,
  /* 5457 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 5466 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5476 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5485 */ 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 5494 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 5503 */ 'S', 'R', 'A', 'W', 'I', 0,
  /* 5509 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 0,
  /* 5517 */ 'C', 'M', 'P', 'L', 'W', 'I', 0,
  /* 5524 */ 'E', 'V', 'R', 'L', 'W', 'I', 0,
  /* 5531 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 0,
  /* 5540 */ 'I', 'N', 'S', 'L', 'W', 'I', 0,
  /* 5547 */ 'E', 'V', 'S', 'L', 'W', 'I', 0,
  /* 5554 */ 'E', 'X', 'T', 'L', 'W', 'I', 0,
  /* 5561 */ 'C', 'M', 'P', 'W', 'I', 0,
  /* 5567 */ 'C', 'L', 'R', 'R', 'W', 'I', 0,
  /* 5574 */ 'I', 'N', 'S', 'R', 'W', 'I', 0,
  /* 5581 */ 'R', 'O', 'T', 'R', 'W', 'I', 0,
  /* 5588 */ 'E', 'X', 'T', 'R', 'W', 'I', 0,
  /* 5595 */ 'L', 'S', 'W', 'I', 0,
  /* 5600 */ 'S', 'T', 'S', 'W', 'I', 0,
  /* 5606 */ 'T', 'W', 'I', 0,
  /* 5610 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 0,
  /* 5620 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 0,
  /* 5629 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 0,
  /* 5639 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 0,
  /* 5648 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 0,
  /* 5659 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 0,
  /* 5669 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 0,
  /* 5680 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 0,
  /* 5690 */ 'T', 'C', 'H', 'E', 'C', 'K', 0,
  /* 5697 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 0,
  /* 5708 */ 'B', 'L', 0,
  /* 5711 */ 'g', 'B', 'C', 'L', 0,
  /* 5716 */ 'B', 'C', 'C', 'L', 0,
  /* 5721 */ 'R', 'L', 'D', 'C', 'L', 0,
  /* 5727 */ 'R', 'L', 'D', 'I', 'C', 'L', 0,
  /* 5734 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5743 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5752 */ 'T', 'L', 'B', 'I', 'E', 'L', 0,
  /* 5759 */ 'Q', 'V', 'F', 'S', 'E', 'L', 0,
  /* 5766 */ 'I', 'S', 'E', 'L', 0,
  /* 5771 */ 'V', 'S', 'E', 'L', 0,
  /* 5776 */ 'X', 'X', 'S', 'E', 'L', 0,
  /* 5782 */ 'D', 'C', 'B', 'F', 'L', 0,
  /* 5788 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 5794 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 5814 */ 'D', 'S', 'S', 'A', 'L', 'L', 0,
  /* 5821 */ 'K', 'I', 'L', 'L', 0,
  /* 5826 */ 'L', 'X', 'V', 'L', 'L', 0,
  /* 5832 */ 'S', 'T', 'X', 'V', 'L', 'L', 0,
  /* 5839 */ 'B', 'L', 'R', 'L', 0,
  /* 5844 */ 'g', 'B', 'C', 'L', 'R', 'L', 0,
  /* 5851 */ 'B', 'C', 'C', 'L', 'R', 'L', 0,
  /* 5858 */ 'B', 'D', 'Z', 'L', 'R', 'L', 0,
  /* 5865 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 0,
  /* 5873 */ 'B', 'C', 'T', 'R', 'L', 0,
  /* 5879 */ 'g', 'B', 'C', 'C', 'T', 'R', 'L', 0,
  /* 5887 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', 0,
  /* 5895 */ 'L', 'V', 'S', 'L', 0,
  /* 5900 */ 'Q', 'V', 'F', 'M', 'U', 'L', 0,
  /* 5907 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 5914 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 0,
  /* 5922 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 5928 */ 'L', 'X', 'V', 'L', 0,
  /* 5933 */ 'S', 'T', 'X', 'V', 'L', 0,
  /* 5939 */ 'L', 'B', 'A', 'R', 'X', 'L', 0,
  /* 5946 */ 'L', 'D', 'A', 'R', 'X', 'L', 0,
  /* 5953 */ 'L', 'H', 'A', 'R', 'X', 'L', 0,
  /* 5960 */ 'L', 'W', 'A', 'R', 'X', 'L', 0,
  /* 5967 */ 'L', 'V', 'X', 'L', 0,
  /* 5972 */ 'S', 'T', 'V', 'X', 'L', 0,
  /* 5978 */ 'D', 'C', 'B', 'Z', 'L', 0,
  /* 5984 */ 'B', 'D', 'Z', 'L', 0,
  /* 5989 */ 'B', 'D', 'N', 'Z', 'L', 0,
  /* 5995 */ 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 6002 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 6011 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 6022 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 6033 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 6045 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 6057 */ 'V', 'M', 'S', 'U', 'M', 'M', 'B', 'M', 0,
  /* 6066 */ 'V', 'S', 'U', 'B', 'U', 'B', 'M', 0,
  /* 6074 */ 'V', 'A', 'D', 'D', 'U', 'B', 'M', 0,
  /* 6082 */ 'V', 'M', 'S', 'U', 'M', 'U', 'B', 'M', 0,
  /* 6091 */ 'V', 'S', 'U', 'B', 'U', 'D', 'M', 0,
  /* 6099 */ 'V', 'A', 'D', 'D', 'U', 'D', 'M', 0,
  /* 6107 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 6114 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 6121 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 6128 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'M', 0,
  /* 6137 */ 'V', 'S', 'U', 'B', 'U', 'H', 'M', 0,
  /* 6145 */ 'V', 'M', 'L', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 6155 */ 'V', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 6163 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'M', 0,
  /* 6172 */ 'T', 'R', 'E', 'C', 'L', 'A', 'I', 'M', 0,
  /* 6181 */ 'V', 'R', 'F', 'I', 'M', 0,
  /* 6187 */ 'X', 'S', 'R', 'D', 'P', 'I', 'M', 0,
  /* 6195 */ 'X', 'V', 'R', 'D', 'P', 'I', 'M', 0,
  /* 6203 */ 'X', 'V', 'R', 'S', 'P', 'I', 'M', 0,
  /* 6211 */ 'Q', 'V', 'F', 'R', 'I', 'M', 0,
  /* 6218 */ 'V', 'R', 'L', 'D', 'N', 'M', 0,
  /* 6225 */ 'R', 'L', 'W', 'I', 'N', 'M', 0,
  /* 6232 */ 'V', 'R', 'L', 'W', 'N', 'M', 0,
  /* 6239 */ 'V', 'S', 'U', 'B', 'U', 'Q', 'M', 0,
  /* 6247 */ 'V', 'A', 'D', 'D', 'U', 'Q', 'M', 0,
  /* 6255 */ 'V', 'S', 'U', 'B', 'E', 'U', 'Q', 'M', 0,
  /* 6264 */ 'V', 'A', 'D', 'D', 'E', 'U', 'Q', 'M', 0,
  /* 6273 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 0,
  /* 6281 */ 'V', 'P', 'E', 'R', 'M', 0,
  /* 6287 */ 'X', 'X', 'P', 'E', 'R', 'M', 0,
  /* 6294 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 6304 */ 'V', 'P', 'K', 'U', 'D', 'U', 'M', 0,
  /* 6312 */ 'V', 'P', 'K', 'U', 'H', 'U', 'M', 0,
  /* 6320 */ 'V', 'P', 'K', 'U', 'W', 'U', 'M', 0,
  /* 6328 */ 'V', 'S', 'U', 'B', 'U', 'W', 'M', 0,
  /* 6336 */ 'V', 'A', 'D', 'D', 'U', 'W', 'M', 0,
  /* 6344 */ 'V', 'M', 'U', 'L', 'U', 'W', 'M', 0,
  /* 6352 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6364 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6376 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6386 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'N', 0,
  /* 6396 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6408 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6420 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6430 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6442 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6454 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6464 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 0,
  /* 6474 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 0,
  /* 6483 */ 'V', 'R', 'F', 'I', 'N', 0,
  /* 6489 */ 'T', 'B', 'E', 'G', 'I', 'N', 0,
  /* 6496 */ 'Q', 'V', 'F', 'R', 'I', 'N', 0,
  /* 6503 */ 'M', 'F', 'S', 'R', 'I', 'N', 0,
  /* 6510 */ 'M', 'T', 'S', 'R', 'I', 'N', 0,
  /* 6517 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 6533 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 'N', 0,
  /* 6543 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 'N', 0,
  /* 6553 */ 'A', 'T', 'T', 'N', 0,
  /* 6558 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 6575 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 6583 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 6591 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 0,
  /* 6599 */ 'E', 'n', 'f', 'o', 'r', 'c', 'e', 'I', 'E', 'I', 'O', 0,
  /* 6611 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 0,
  /* 6621 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 'L', 'O', 0,
  /* 6633 */ 'V', 'S', 'L', 'O', 0,
  /* 6638 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 6646 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 6654 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 'O', 0,
  /* 6664 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6675 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6685 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6694 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6705 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6715 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6724 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 'O', 0,
  /* 6733 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 'O', 0,
  /* 6743 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 'O', 0,
  /* 6752 */ 'V', 'S', 'R', 'O', 0,
  /* 6757 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 0,
  /* 6765 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 6774 */ 'N', 'A', 'P', 0,
  /* 6778 */ 'T', 'R', 'A', 'P', 0,
  /* 6783 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6794 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6805 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6815 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6825 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6836 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6847 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6857 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6867 */ 'X', 'S', 'S', 'U', 'B', 'D', 'P', 0,
  /* 6875 */ 'X', 'V', 'S', 'U', 'B', 'D', 'P', 0,
  /* 6883 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 6893 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 6903 */ 'X', 'S', 'M', 'I', 'N', 'C', 'D', 'P', 0,
  /* 6912 */ 'X', 'S', 'M', 'A', 'X', 'C', 'D', 'P', 0,
  /* 6921 */ 'X', 'S', 'A', 'D', 'D', 'D', 'P', 0,
  /* 6929 */ 'X', 'V', 'A', 'D', 'D', 'D', 'P', 0,
  /* 6937 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 6947 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 6957 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 6967 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 6977 */ 'X', 'S', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 6987 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 6997 */ 'X', 'S', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 7007 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 7017 */ 'X', 'S', 'R', 'E', 'D', 'P', 0,
  /* 7024 */ 'X', 'V', 'R', 'E', 'D', 'P', 0,
  /* 7031 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 7042 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 7053 */ 'X', 'S', 'N', 'E', 'G', 'D', 'P', 0,
  /* 7061 */ 'X', 'V', 'N', 'E', 'G', 'D', 'P', 0,
  /* 7069 */ 'X', 'S', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 7078 */ 'X', 'V', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 7087 */ 'X', 'S', 'M', 'I', 'N', 'J', 'D', 'P', 0,
  /* 7096 */ 'X', 'S', 'M', 'A', 'X', 'J', 'D', 'P', 0,
  /* 7105 */ 'X', 'S', 'M', 'U', 'L', 'D', 'P', 0,
  /* 7113 */ 'X', 'V', 'M', 'U', 'L', 'D', 'P', 0,
  /* 7121 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7132 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7143 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7153 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7163 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7174 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7185 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7195 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7205 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 7215 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 7225 */ 'X', 'S', 'M', 'I', 'N', 'D', 'P', 0,
  /* 7233 */ 'X', 'V', 'M', 'I', 'N', 'D', 'P', 0,
  /* 7241 */ 'X', 'S', 'C', 'M', 'P', 'O', 'D', 'P', 0,
  /* 7250 */ 'X', 'S', 'C', 'V', 'H', 'P', 'D', 'P', 0,
  /* 7259 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 0,
  /* 7268 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7277 */ 'X', 'V', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7286 */ 'X', 'S', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7295 */ 'X', 'V', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7304 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7315 */ 'X', 'S', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7324 */ 'X', 'V', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7333 */ 'X', 'S', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7343 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7353 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7362 */ 'X', 'V', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7371 */ 'X', 'S', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7379 */ 'X', 'V', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7387 */ 'X', 'S', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7397 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7407 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7416 */ 'X', 'S', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7426 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7436 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7445 */ 'X', 'S', 'C', 'M', 'P', 'U', 'D', 'P', 0,
  /* 7454 */ 'X', 'S', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7462 */ 'X', 'S', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7471 */ 'X', 'V', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7480 */ 'X', 'V', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7488 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'D', 'P', 0,
  /* 7498 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'D', 'P', 0,
  /* 7508 */ 'X', 'S', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7516 */ 'X', 'V', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7524 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 7530 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 0,
  /* 7538 */ 'V', 'N', 'M', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7547 */ 'V', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7554 */ 'V', 'M', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7562 */ 'V', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7569 */ 'V', 'L', 'O', 'G', 'E', 'F', 'P', 0,
  /* 7577 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 0,
  /* 7586 */ 'V', 'R', 'E', 'F', 'P', 0,
  /* 7592 */ 'V', 'E', 'X', 'P', 'T', 'E', 'F', 'P', 0,
  /* 7601 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'F', 'P', 0,
  /* 7611 */ 'V', 'M', 'I', 'N', 'F', 'P', 0,
  /* 7618 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 7627 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 7636 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 0,
  /* 7645 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 0,
  /* 7654 */ 'V', 'M', 'A', 'X', 'F', 'P', 0,
  /* 7661 */ 'X', 'S', 'C', 'V', 'D', 'P', 'H', 'P', 0,
  /* 7670 */ 'X', 'V', 'C', 'V', 'S', 'P', 'H', 'P', 0,
  /* 7679 */ 'V', 'R', 'F', 'I', 'P', 0,
  /* 7685 */ 'X', 'S', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7693 */ 'X', 'V', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7701 */ 'X', 'V', 'R', 'S', 'P', 'I', 'P', 0,
  /* 7709 */ 'Q', 'V', 'F', 'R', 'I', 'P', 0,
  /* 7716 */ 'D', 'C', 'B', 'F', 'L', 'P', 0,
  /* 7723 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 7730 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 7737 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', 0,
  /* 7746 */ 'B', 'L', '8', '_', 'N', 'O', 'P', 0,
  /* 7754 */ 'S', 'T', 'O', 'P', 0,
  /* 7759 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'L', 'O', 'A', 'D', '_', 'O', 'P', 0,
  /* 7776 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 7789 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7799 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7808 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7816 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'Q', 'P', 0,
  /* 7826 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7836 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7845 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7853 */ 'X', 'S', 'C', 'V', 'S', 'D', 'Q', 'P', 0,
  /* 7862 */ 'X', 'S', 'C', 'V', 'U', 'D', 'Q', 'P', 0,
  /* 7871 */ 'X', 'S', 'N', 'E', 'G', 'Q', 'P', 0,
  /* 7879 */ 'X', 'S', 'X', 'S', 'I', 'G', 'Q', 'P', 0,
  /* 7888 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 0,
  /* 7896 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'Q', 'P', 0,
  /* 7906 */ 'X', 'S', 'C', 'M', 'P', 'O', 'Q', 'P', 0,
  /* 7915 */ 'X', 'S', 'C', 'V', 'D', 'P', 'Q', 'P', 0,
  /* 7924 */ 'X', 'S', 'I', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7933 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7944 */ 'X', 'S', 'X', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7953 */ 'X', 'S', 'N', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 7962 */ 'X', 'S', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 7970 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 0,
  /* 7979 */ 'X', 'S', 'C', 'M', 'P', 'U', 'Q', 'P', 0,
  /* 7988 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 0,
  /* 7996 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8007 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8018 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8028 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8038 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8049 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8060 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8070 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8080 */ 'X', 'S', 'S', 'U', 'B', 'S', 'P', 0,
  /* 8088 */ 'X', 'V', 'S', 'U', 'B', 'S', 'P', 0,
  /* 8096 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 8106 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 8116 */ 'X', 'S', 'A', 'D', 'D', 'S', 'P', 0,
  /* 8124 */ 'X', 'V', 'A', 'D', 'D', 'S', 'P', 0,
  /* 8132 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 8142 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 8152 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 8162 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 8172 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 0,
  /* 8182 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 0,
  /* 8192 */ 'X', 'S', 'R', 'E', 'S', 'P', 0,
  /* 8199 */ 'X', 'V', 'R', 'E', 'S', 'P', 0,
  /* 8206 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 8217 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 8228 */ 'X', 'V', 'N', 'E', 'G', 'S', 'P', 0,
  /* 8236 */ 'X', 'V', 'X', 'S', 'I', 'G', 'S', 'P', 0,
  /* 8245 */ 'X', 'S', 'M', 'U', 'L', 'S', 'P', 0,
  /* 8253 */ 'X', 'V', 'M', 'U', 'L', 'S', 'P', 0,
  /* 8261 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8272 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8283 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8293 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8303 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8314 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8325 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8335 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8345 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'S', 'P', 0,
  /* 8355 */ 'X', 'V', 'M', 'I', 'N', 'S', 'P', 0,
  /* 8363 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8372 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8381 */ 'X', 'V', 'C', 'V', 'H', 'P', 'S', 'P', 0,
  /* 8390 */ 'X', 'V', 'I', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8399 */ 'X', 'V', 'X', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8408 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 0,
  /* 8418 */ 'Q', 'V', 'F', 'R', 'S', 'P', 0,
  /* 8425 */ 'X', 'V', 'N', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8434 */ 'X', 'V', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8442 */ 'L', 'X', 'S', 'S', 'P', 0,
  /* 8448 */ 'S', 'T', 'X', 'S', 'S', 'P', 0,
  /* 8455 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 0,
  /* 8465 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8474 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8484 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8493 */ 'X', 'S', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8501 */ 'X', 'V', 'T', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8510 */ 'X', 'V', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8518 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'S', 'P', 0,
  /* 8528 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'S', 'P', 0,
  /* 8538 */ 'X', 'V', 'M', 'A', 'X', 'S', 'P', 0,
  /* 8546 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 8561 */ 'X', 'S', 'R', 'Q', 'P', 'X', 'P', 0,
  /* 8569 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'Q', 0,
  /* 8577 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8586 */ 'E', 'V', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8594 */ 'V', 'B', 'P', 'E', 'R', 'M', 'Q', 0,
  /* 8602 */ 'X', 'X', 'B', 'R', 'Q', 0,
  /* 8608 */ 'V', 'M', 'U', 'L', '1', '0', 'U', 'Q', 0,
  /* 8617 */ 'V', 'M', 'U', 'L', '1', '0', 'C', 'U', 'Q', 0,
  /* 8627 */ 'V', 'S', 'U', 'B', 'C', 'U', 'Q', 0,
  /* 8635 */ 'V', 'A', 'D', 'D', 'C', 'U', 'Q', 0,
  /* 8643 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'C', 'U', 'Q', 0,
  /* 8654 */ 'V', 'S', 'U', 'B', 'E', 'C', 'U', 'Q', 0,
  /* 8663 */ 'V', 'A', 'D', 'D', 'E', 'C', 'U', 'Q', 0,
  /* 8672 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'U', 'Q', 0,
  /* 8682 */ 'M', 'B', 'A', 'R', 0,
  /* 8687 */ 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 8697 */ 'G', '_', 'B', 'R', 0,
  /* 8702 */ 'M', 'F', 'D', 'C', 'R', 0,
  /* 8708 */ 'R', 'L', 'D', 'C', 'R', 0,
  /* 8714 */ 'M', 'T', 'D', 'C', 'R', 0,
  /* 8720 */ 'M', 'F', 'C', 'R', 0,
  /* 8725 */ 'R', 'L', 'D', 'I', 'C', 'R', 0,
  /* 8732 */ 'M', 'F', 'V', 'S', 'C', 'R', 0,
  /* 8739 */ 'M', 'T', 'V', 'S', 'C', 'R', 0,
  /* 8746 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 8757 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 8766 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8781 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8796 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 8809 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 8820 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8829 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8837 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 8862 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 8869 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 8876 */ 'B', 'L', 'R', 0,
  /* 8880 */ 'g', 'B', 'C', 'L', 'R', 0,
  /* 8886 */ 'B', 'C', 'C', 'L', 'R', 0,
  /* 8892 */ 'M', 'F', 'L', 'R', 0,
  /* 8897 */ 'M', 'T', 'L', 'R', 0,
  /* 8902 */ 'B', 'D', 'Z', 'L', 'R', 0,
  /* 8908 */ 'B', 'D', 'N', 'Z', 'L', 'R', 0,
  /* 8915 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 8926 */ 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 8938 */ 'Q', 'V', 'F', 'M', 'R', 0,
  /* 8944 */ 'V', 'P', 'E', 'R', 'M', 'R', 0,
  /* 8951 */ 'X', 'X', 'P', 'E', 'R', 'M', 'R', 0,
  /* 8959 */ 'X', 'X', 'L', 'O', 'R', 0,
  /* 8965 */ 'X', 'X', 'L', 'N', 'O', 'R', 0,
  /* 8972 */ 'C', 'R', 'N', 'O', 'R', 0,
  /* 8978 */ 'E', 'V', 'N', 'O', 'R', 0,
  /* 8984 */ 'C', 'R', 'O', 'R', 0,
  /* 8989 */ 'E', 'V', 'O', 'R', 0,
  /* 8994 */ 'X', 'X', 'L', 'X', 'O', 'R', 0,
  /* 9001 */ 'V', 'P', 'E', 'R', 'M', 'X', 'O', 'R', 0,
  /* 9010 */ 'C', 'R', 'X', 'O', 'R', 0,
  /* 9016 */ 'E', 'V', 'X', 'O', 'R', 0,
  /* 9022 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 9028 */ 'G', '_', 'O', 'R', 0,
  /* 9033 */ 'M', 'F', 'S', 'P', 'R', 0,
  /* 9039 */ 'M', 'T', 'S', 'P', 'R', 0,
  /* 9045 */ 'M', 'F', 'S', 'R', 0,
  /* 9050 */ 'M', 'F', 'M', 'S', 'R', 0,
  /* 9056 */ 'M', 'T', 'M', 'S', 'R', 0,
  /* 9062 */ 'M', 'T', 'S', 'R', 0,
  /* 9067 */ 'L', 'V', 'S', 'R', 0,
  /* 9072 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', 0,
  /* 9081 */ 'g', 'B', 'C', 'C', 'T', 'R', 0,
  /* 9088 */ 'B', 'C', 'C', 'C', 'T', 'R', 0,
  /* 9095 */ 'M', 'F', 'C', 'T', 'R', 0,
  /* 9101 */ 'M', 'T', 'C', 'T', 'R', 0,
  /* 9107 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 9118 */ 'Q', 'V', 'F', 'A', 'B', 'S', 0,
  /* 9125 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 0,
  /* 9133 */ 'E', 'V', 'A', 'B', 'S', 0,
  /* 9139 */ 'V', 'S', 'U', 'M', '4', 'S', 'B', 'S', 0,
  /* 9148 */ 'V', 'S', 'U', 'B', 'S', 'B', 'S', 0,
  /* 9156 */ 'V', 'A', 'D', 'D', 'S', 'B', 'S', 0,
  /* 9164 */ 'V', 'S', 'U', 'M', '4', 'U', 'B', 'S', 0,
  /* 9173 */ 'V', 'S', 'U', 'B', 'U', 'B', 'S', 0,
  /* 9181 */ 'V', 'A', 'D', 'D', 'U', 'B', 'S', 0,
  /* 9189 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 0,
  /* 9197 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 0,
  /* 9206 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 0,
  /* 9216 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 0,
  /* 9224 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9233 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9243 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9257 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9270 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9280 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9291 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'S', 0,
  /* 9300 */ 'D', 'C', 'B', 'T', 'D', 'S', 0,
  /* 9307 */ 'D', 'C', 'B', 'T', 'S', 'T', 'D', 'S', 0,
  /* 9316 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9327 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9338 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9349 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9360 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9371 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9382 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9395 */ 'Q', 'V', 'F', 'R', 'E', 'S', 0,
  /* 9402 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 0,
  /* 9413 */ 'M', 'F', 'F', 'S', 0,
  /* 9418 */ 'L', 'F', 'S', 0,
  /* 9422 */ 'M', 'C', 'R', 'F', 'S', 0,
  /* 9428 */ 'S', 'T', 'F', 'S', 0,
  /* 9433 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 9439 */ 'V', 'S', 'U', 'M', '4', 'S', 'H', 'S', 0,
  /* 9448 */ 'V', 'S', 'U', 'B', 'S', 'H', 'S', 0,
  /* 9456 */ 'V', 'M', 'H', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9466 */ 'V', 'M', 'H', 'R', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9477 */ 'V', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9485 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'S', 0,
  /* 9494 */ 'V', 'S', 'U', 'B', 'U', 'H', 'S', 0,
  /* 9502 */ 'V', 'A', 'D', 'D', 'U', 'H', 'S', 0,
  /* 9510 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'S', 0,
  /* 9519 */ 'S', 'U', 'B', 'I', 'S', 0,
  /* 9525 */ 'A', 'D', 'D', 'I', 'S', 0,
  /* 9531 */ 'L', 'I', 'S', 0,
  /* 9535 */ 'X', 'O', 'R', 'I', 'S', 0,
  /* 9541 */ 'E', 'V', 'S', 'R', 'W', 'I', 'S', 0,
  /* 9549 */ 'F', 'S', 'E', 'L', 'S', 0,
  /* 9555 */ 'A', 'D', 'D', '4', 'T', 'L', 'S', 0,
  /* 9563 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', 0,
  /* 9571 */ 'B', 'L', '8', '_', 'T', 'L', 'S', 0,
  /* 9579 */ 'B', 'L', '_', 'T', 'L', 'S', 0,
  /* 9586 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'T', 'L', 'S', 0,
  /* 9598 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 0,
  /* 9606 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 'S', 0,
  /* 9615 */ 'F', 'R', 'I', 'M', 'S', 0,
  /* 9621 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 0,
  /* 9629 */ 'F', 'R', 'I', 'N', 'S', 0,
  /* 9635 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 0,
  /* 9643 */ 'F', 'R', 'I', 'P', 'S', 0,
  /* 9649 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9666 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 9672 */ 'F', 'N', 'A', 'B', 'S', 'S', 0,
  /* 9679 */ 'V', 'P', 'K', 'S', 'D', 'S', 'S', 0,
  /* 9687 */ 'V', 'P', 'K', 'S', 'H', 'S', 'S', 0,
  /* 9695 */ 'V', 'P', 'K', 'S', 'W', 'S', 'S', 0,
  /* 9703 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 9730 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 0,
  /* 9739 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'S', 0,
  /* 9748 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 9755 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 'S', 0,
  /* 9765 */ 'V', 'P', 'K', 'S', 'D', 'U', 'S', 0,
  /* 9773 */ 'V', 'P', 'K', 'U', 'D', 'U', 'S', 0,
  /* 9781 */ 'V', 'P', 'K', 'S', 'H', 'U', 'S', 0,
  /* 9789 */ 'V', 'P', 'K', 'U', 'H', 'U', 'S', 0,
  /* 9797 */ 'F', 'C', 'M', 'P', 'U', 'S', 0,
  /* 9804 */ 'V', 'P', 'K', 'S', 'W', 'U', 'S', 0,
  /* 9812 */ 'V', 'P', 'K', 'U', 'W', 'U', 'S', 0,
  /* 9820 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 9826 */ 'E', 'V', 'S', 'R', 'W', 'S', 0,
  /* 9833 */ 'M', 'T', 'V', 'S', 'R', 'W', 'S', 0,
  /* 9841 */ 'V', 'S', 'U', 'M', '2', 'S', 'W', 'S', 0,
  /* 9850 */ 'V', 'S', 'U', 'B', 'S', 'W', 'S', 0,
  /* 9858 */ 'V', 'A', 'D', 'D', 'S', 'W', 'S', 0,
  /* 9866 */ 'V', 'S', 'U', 'M', 'S', 'W', 'S', 0,
  /* 9874 */ 'V', 'S', 'U', 'B', 'U', 'W', 'S', 0,
  /* 9882 */ 'V', 'A', 'D', 'D', 'U', 'W', 'S', 0,
  /* 9890 */ 'E', 'V', 'D', 'I', 'V', 'W', 'S', 0,
  /* 9898 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 9909 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 9920 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'W', 'S', 0,
  /* 9931 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 9942 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 9953 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'W', 'S', 0,
  /* 9964 */ 'V', 'C', 'T', 'S', 'X', 'S', 0,
  /* 9971 */ 'V', 'C', 'T', 'U', 'X', 'S', 0,
  /* 9978 */ 'F', 'R', 'I', 'Z', 'S', 0,
  /* 9984 */ 'L', 'D', 'A', 'T', 0,
  /* 9989 */ 'S', 'T', 'D', 'A', 'T', 0,
  /* 9995 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10007 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10018 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10031 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10044 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10055 */ 'L', 'W', 'A', 'T', 0,
  /* 10060 */ 'S', 'T', 'W', 'A', 'T', 0,
  /* 10066 */ 'D', 'C', 'B', 'T', 0,
  /* 10071 */ 'I', 'C', 'B', 'T', 0,
  /* 10076 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 10086 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 10095 */ 'D', 'C', 'B', 'T', 'C', 'T', 0,
  /* 10102 */ 'D', 'C', 'B', 'T', 'S', 'T', 'C', 'T', 0,
  /* 10111 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 10125 */ 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 10136 */ 'C', 'R', '6', 'S', 'E', 'T', 0,
  /* 10143 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 10157 */ 'C', 'R', '6', 'U', 'N', 'S', 'E', 'T', 0,
  /* 10166 */ 'C', 'R', 'U', 'N', 'S', 'E', 'T', 0,
  /* 10174 */ 'C', 'R', 'S', 'E', 'T', 0,
  /* 10180 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 0,
  /* 10189 */ 'W', 'A', 'I', 'T', 0,
  /* 10194 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 10208 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 10220 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 10235 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 10250 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 10274 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 0,
  /* 10283 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 10295 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 10306 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 10317 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 10328 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 10339 */ 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 10348 */ 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 10360 */ 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 10369 */ 'T', 'R', 'E', 'C', 'H', 'K', 'P', 'T', 0,
  /* 10378 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10393 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 10402 */ 'T', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10409 */ 'C', 'P', '_', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10418 */ 'F', 'S', 'Q', 'R', 'T', 0,
  /* 10424 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 10434 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 10447 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 10459 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '_', 'L', 'A', 'S', 'T', 0,
  /* 10473 */ 'D', 'C', 'B', 'S', 'T', 0,
  /* 10479 */ 'D', 'S', 'T', 0,
  /* 10483 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '_', 'F', 'I', 'R', 'S', 'T', 0,
  /* 10497 */ 'D', 'C', 'B', 'T', 'S', 'T', 0,
  /* 10504 */ 'D', 'S', 'T', 'S', 'T', 0,
  /* 10510 */ 'D', 'C', 'B', 'T', 'T', 0,
  /* 10516 */ 'D', 'S', 'T', 'T', 0,
  /* 10521 */ 'D', 'C', 'B', 'T', 'S', 'T', 'T', 0,
  /* 10529 */ 'D', 'S', 'T', 'S', 'T', 'T', 0,
  /* 10536 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 10544 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 10551 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 10560 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 10567 */ 'L', 'H', 'A', 'U', 0,
  /* 10572 */ 'S', 'T', 'B', 'U', 0,
  /* 10577 */ 'L', 'F', 'D', 'U', 0,
  /* 10582 */ 'S', 'T', 'F', 'D', 'U', 0,
  /* 10588 */ 'M', 'U', 'L', 'H', 'D', 'U', 0,
  /* 10595 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 0,
  /* 10604 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 0,
  /* 10613 */ 'L', 'D', 'U', 0,
  /* 10617 */ 'S', 'T', 'D', 'U', 0,
  /* 10622 */ 'D', 'I', 'V', 'D', 'U', 0,
  /* 10628 */ 'D', 'I', 'V', 'D', 'E', 'U', 0,
  /* 10635 */ 'D', 'I', 'V', 'W', 'E', 'U', 0,
  /* 10642 */ 'S', 'T', 'H', 'U', 0,
  /* 10647 */ 'E', 'V', 'S', 'R', 'W', 'I', 'U', 0,
  /* 10655 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 0,
  /* 10663 */ 'L', 'F', 'S', 'U', 0,
  /* 10668 */ 'S', 'T', 'F', 'S', 'U', 0,
  /* 10674 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'U', 0,
  /* 10683 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'U', 0,
  /* 10692 */ 'M', 'U', 'L', 'H', 'W', 'U', 0,
  /* 10699 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 0,
  /* 10708 */ 'E', 'V', 'S', 'R', 'W', 'U', 0,
  /* 10715 */ 'S', 'T', 'W', 'U', 0,
  /* 10720 */ 'E', 'V', 'D', 'I', 'V', 'W', 'U', 0,
  /* 10728 */ 'L', 'B', 'Z', 'U', 0,
  /* 10733 */ 'L', 'H', 'Z', 'U', 0,
  /* 10738 */ 'L', 'W', 'Z', 'U', 0,
  /* 10743 */ 'S', 'L', 'B', 'M', 'F', 'E', 'V', 0,
  /* 10751 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 10758 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 10765 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 10772 */ 'V', 'S', 'L', 'V', 0,
  /* 10777 */ 'X', 'X', 'L', 'E', 'Q', 'V', 0,
  /* 10784 */ 'C', 'R', 'E', 'Q', 'V', 0,
  /* 10790 */ 'E', 'V', 'E', 'Q', 'V', 0,
  /* 10796 */ 'V', 'S', 'R', 'V', 0,
  /* 10801 */ 'L', 'X', 'V', 0,
  /* 10805 */ 'S', 'T', 'X', 'V', 0,
  /* 10810 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 0,
  /* 10819 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 0,
  /* 10828 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 10840 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 10852 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 10864 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 10876 */ 'E', 'V', 'A', 'D', 'D', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10888 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10900 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10913 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10925 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10937 */ 'E', 'V', 'A', 'D', 'D', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10949 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10961 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10974 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10986 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10998 */ 'E', 'V', 'A', 'D', 'D', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11010 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11022 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11035 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11047 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11059 */ 'E', 'V', 'A', 'D', 'D', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11071 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11083 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11096 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11108 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11120 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'W', 0,
  /* 11131 */ 'V', 'S', 'R', 'A', 'W', 0,
  /* 11137 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'W', 0,
  /* 11145 */ 'E', 'V', 'A', 'D', 'D', 'W', 0,
  /* 11152 */ 'E', 'V', 'L', 'D', 'W', 0,
  /* 11158 */ 'E', 'V', 'R', 'N', 'D', 'W', 0,
  /* 11165 */ 'E', 'V', 'S', 'T', 'D', 'W', 0,
  /* 11172 */ 'V', 'M', 'R', 'G', 'E', 'W', 0,
  /* 11179 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 0,
  /* 11187 */ 'E', 'V', 'S', 'U', 'B', 'F', 'W', 0,
  /* 11195 */ 'E', 'V', 'S', 'U', 'B', 'I', 'F', 'W', 0,
  /* 11204 */ 'V', 'N', 'E', 'G', 'W', 0,
  /* 11210 */ 'V', 'M', 'R', 'G', 'H', 'W', 0,
  /* 11217 */ 'X', 'X', 'M', 'R', 'G', 'H', 'W', 0,
  /* 11225 */ 'M', 'U', 'L', 'H', 'W', 0,
  /* 11231 */ 'E', 'V', 'A', 'D', 'D', 'I', 'W', 0,
  /* 11239 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 0,
  /* 11247 */ 'V', 'M', 'R', 'G', 'L', 'W', 0,
  /* 11254 */ 'X', 'X', 'M', 'R', 'G', 'L', 'W', 0,
  /* 11262 */ 'M', 'U', 'L', 'L', 'W', 0,
  /* 11268 */ 'C', 'M', 'P', 'L', 'W', 0,
  /* 11274 */ 'E', 'V', 'R', 'L', 'W', 0,
  /* 11280 */ 'E', 'V', 'S', 'L', 'W', 0,
  /* 11286 */ 'L', 'M', 'W', 0,
  /* 11290 */ 'S', 'T', 'M', 'W', 0,
  /* 11295 */ 'V', 'P', 'M', 'S', 'U', 'M', 'W', 0,
  /* 11303 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 11315 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 11327 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 11339 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 11351 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11363 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11375 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11387 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11399 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11411 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11423 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11435 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11447 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11459 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11471 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11483 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11495 */ 'V', 'M', 'R', 'G', 'O', 'W', 0,
  /* 11502 */ 'C', 'M', 'P', 'W', 0,
  /* 11507 */ 'X', 'X', 'B', 'R', 'W', 0,
  /* 11513 */ 'V', 'S', 'R', 'W', 0,
  /* 11518 */ 'V', 'M', 'U', 'L', 'E', 'S', 'W', 0,
  /* 11526 */ 'V', 'A', 'V', 'G', 'S', 'W', 0,
  /* 11533 */ 'V', 'U', 'P', 'K', 'H', 'S', 'W', 0,
  /* 11541 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'W', 0,
  /* 11550 */ 'V', 'U', 'P', 'K', 'L', 'S', 'W', 0,
  /* 11558 */ 'E', 'V', 'C', 'N', 'T', 'L', 'S', 'W', 0,
  /* 11567 */ 'V', 'M', 'I', 'N', 'S', 'W', 0,
  /* 11574 */ 'V', 'M', 'U', 'L', 'O', 'S', 'W', 0,
  /* 11582 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 0,
  /* 11591 */ 'E', 'X', 'T', 'S', 'W', 0,
  /* 11597 */ 'V', 'M', 'A', 'X', 'S', 'W', 0,
  /* 11604 */ 'V', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11611 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11619 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'W', 0,
  /* 11628 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11637 */ 'X', 'X', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11647 */ 'S', 'T', 'W', 0,
  /* 11651 */ 'V', 'S', 'U', 'B', 'C', 'U', 'W', 0,
  /* 11659 */ 'V', 'A', 'D', 'D', 'C', 'U', 'W', 0,
  /* 11667 */ 'V', 'A', 'B', 'S', 'D', 'U', 'W', 0,
  /* 11675 */ 'V', 'M', 'U', 'L', 'E', 'U', 'W', 0,
  /* 11683 */ 'V', 'A', 'V', 'G', 'U', 'W', 0,
  /* 11690 */ 'V', 'M', 'I', 'N', 'U', 'W', 0,
  /* 11697 */ 'V', 'M', 'U', 'L', 'O', 'U', 'W', 0,
  /* 11705 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 0,
  /* 11714 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 11725 */ 'X', 'X', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 11737 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 0,
  /* 11746 */ 'V', 'M', 'A', 'X', 'U', 'W', 0,
  /* 11753 */ 'D', 'I', 'V', 'W', 0,
  /* 11758 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 0,
  /* 11767 */ 'V', 'C', 'L', 'Z', 'W', 0,
  /* 11773 */ 'E', 'V', 'C', 'N', 'T', 'L', 'Z', 'W', 0,
  /* 11782 */ 'V', 'C', 'T', 'Z', 'W', 0,
  /* 11788 */ 'C', 'N', 'T', 'T', 'Z', 'W', 0,
  /* 11795 */ 'L', 'X', 'V', 'D', '2', 'X', 0,
  /* 11802 */ 'S', 'T', 'X', 'V', 'D', '2', 'X', 0,
  /* 11810 */ 'L', 'X', 'V', 'W', '4', 'X', 0,
  /* 11817 */ 'S', 'T', 'X', 'V', 'W', '4', 'X', 0,
  /* 11825 */ 'L', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 11833 */ 'S', 'T', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 11842 */ 'L', 'X', 'V', 'H', '8', 'X', 0,
  /* 11849 */ 'S', 'T', 'X', 'V', 'H', '8', 'X', 0,
  /* 11857 */ 'L', 'H', 'A', 'X', 0,
  /* 11862 */ 'T', 'L', 'B', 'I', 'V', 'A', 'X', 0,
  /* 11870 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 0,
  /* 11879 */ 'L', 'X', 'S', 'I', 'W', 'A', 'X', 0,
  /* 11887 */ 'L', 'W', 'A', 'X', 0,
  /* 11892 */ 'L', 'V', 'E', 'B', 'X', 0,
  /* 11898 */ 'S', 'T', 'V', 'E', 'B', 'X', 0,
  /* 11905 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 0,
  /* 11913 */ 'S', 'T', 'B', 'X', 0,
  /* 11918 */ 'S', 'T', 'B', 'C', 'X', 0,
  /* 11924 */ 'S', 'T', 'D', 'C', 'X', 0,
  /* 11930 */ 'S', 'T', 'H', 'C', 'X', 0,
  /* 11936 */ 'S', 'T', 'W', 'C', 'X', 0,
  /* 11942 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 0,
  /* 11950 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 0,
  /* 11959 */ 'E', 'V', 'L', 'D', 'D', 'X', 0,
  /* 11966 */ 'E', 'V', 'S', 'T', 'D', 'D', 'X', 0,
  /* 11974 */ 'Q', 'V', 'L', 'F', 'D', 'X', 0,
  /* 11981 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 0,
  /* 11989 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'D', 'X', 0,
  /* 11998 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'D', 'X', 0,
  /* 12007 */ 'L', 'X', 'S', 'D', 'X', 0,
  /* 12013 */ 'S', 'T', 'X', 'S', 'D', 'X', 0,
  /* 12020 */ 'S', 'T', 'D', 'X', 0,
  /* 12025 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 12039 */ 'E', 'V', 'L', 'W', 'H', 'E', 'X', 0,
  /* 12047 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 'X', 0,
  /* 12056 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 'X', 0,
  /* 12065 */ 'E', 'V', 'L', 'D', 'H', 'X', 0,
  /* 12072 */ 'E', 'V', 'S', 'T', 'D', 'H', 'X', 0,
  /* 12080 */ 'L', 'V', 'E', 'H', 'X', 0,
  /* 12086 */ 'S', 'T', 'V', 'E', 'H', 'X', 0,
  /* 12093 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 0,
  /* 12101 */ 'S', 'T', 'H', 'X', 0,
  /* 12106 */ 'S', 'T', 'B', 'C', 'I', 'X', 0,
  /* 12113 */ 'L', 'D', 'C', 'I', 'X', 0,
  /* 12119 */ 'S', 'T', 'D', 'C', 'I', 'X', 0,
  /* 12126 */ 'S', 'T', 'H', 'C', 'I', 'X', 0,
  /* 12133 */ 'S', 'T', 'W', 'C', 'I', 'X', 0,
  /* 12140 */ 'L', 'B', 'Z', 'C', 'I', 'X', 0,
  /* 12147 */ 'L', 'H', 'Z', 'C', 'I', 'X', 0,
  /* 12154 */ 'L', 'W', 'Z', 'C', 'I', 'X', 0,
  /* 12161 */ 'X', 'S', 'R', 'Q', 'P', 'I', 'X', 0,
  /* 12169 */ 'V', 'E', 'X', 'T', 'U', 'B', 'L', 'X', 0,
  /* 12178 */ 'V', 'E', 'X', 'T', 'U', 'H', 'L', 'X', 0,
  /* 12187 */ 'V', 'E', 'X', 'T', 'U', 'W', 'L', 'X', 0,
  /* 12196 */ 'L', 'D', 'M', 'X', 0,
  /* 12201 */ 'V', 'S', 'B', 'O', 'X', 0,
  /* 12207 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 'X', 0,
  /* 12216 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 'X', 0,
  /* 12225 */ 'V', 'U', 'P', 'K', 'H', 'P', 'X', 0,
  /* 12233 */ 'V', 'P', 'K', 'P', 'X', 0,
  /* 12239 */ 'V', 'U', 'P', 'K', 'L', 'P', 'X', 0,
  /* 12247 */ 'L', 'X', 'S', 'S', 'P', 'X', 0,
  /* 12254 */ 'S', 'T', 'X', 'S', 'S', 'P', 'X', 0,
  /* 12262 */ 'L', 'B', 'A', 'R', 'X', 0,
  /* 12268 */ 'L', 'D', 'A', 'R', 'X', 0,
  /* 12274 */ 'L', 'H', 'A', 'R', 'X', 0,
  /* 12280 */ 'L', 'W', 'A', 'R', 'X', 0,
  /* 12286 */ 'L', 'D', 'B', 'R', 'X', 0,
  /* 12292 */ 'S', 'T', 'D', 'B', 'R', 'X', 0,
  /* 12299 */ 'L', 'H', 'B', 'R', 'X', 0,
  /* 12305 */ 'S', 'T', 'H', 'B', 'R', 'X', 0,
  /* 12312 */ 'V', 'E', 'X', 'T', 'U', 'B', 'R', 'X', 0,
  /* 12321 */ 'L', 'W', 'B', 'R', 'X', 0,
  /* 12327 */ 'S', 'T', 'W', 'B', 'R', 'X', 0,
  /* 12334 */ 'V', 'E', 'X', 'T', 'U', 'H', 'R', 'X', 0,
  /* 12343 */ 'V', 'E', 'X', 'T', 'U', 'W', 'R', 'X', 0,
  /* 12352 */ 'M', 'C', 'R', 'X', 'R', 'X', 0,
  /* 12359 */ 'T', 'L', 'B', 'S', 'X', 0,
  /* 12365 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 0,
  /* 12373 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 0,
  /* 12382 */ 'L', 'X', 'V', 'D', 'S', 'X', 0,
  /* 12389 */ 'V', 'C', 'F', 'S', 'X', 0,
  /* 12395 */ 'Q', 'V', 'L', 'F', 'S', 'X', 0,
  /* 12402 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 0,
  /* 12410 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 0,
  /* 12419 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 'X', 0,
  /* 12428 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'S', 'X', 0,
  /* 12437 */ 'L', 'X', 'V', 'W', 'S', 'X', 0,
  /* 12444 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12457 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12469 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12483 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12497 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12509 */ 'L', 'H', 'A', 'U', 'X', 0,
  /* 12515 */ 'L', 'W', 'A', 'U', 'X', 0,
  /* 12521 */ 'S', 'T', 'B', 'U', 'X', 0,
  /* 12527 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 0,
  /* 12536 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 0,
  /* 12546 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 0,
  /* 12554 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 0,
  /* 12563 */ 'L', 'D', 'U', 'X', 0,
  /* 12568 */ 'S', 'T', 'D', 'U', 'X', 0,
  /* 12574 */ 'V', 'C', 'F', 'U', 'X', 0,
  /* 12580 */ 'S', 'T', 'H', 'U', 'X', 0,
  /* 12586 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 'X', 0,
  /* 12595 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12604 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12614 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 0,
  /* 12622 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 0,
  /* 12631 */ 'S', 'T', 'W', 'U', 'X', 0,
  /* 12637 */ 'L', 'B', 'Z', 'U', 'X', 0,
  /* 12643 */ 'L', 'H', 'Z', 'U', 'X', 0,
  /* 12649 */ 'L', 'W', 'Z', 'U', 'X', 0,
  /* 12655 */ 'L', 'V', 'X', 0,
  /* 12659 */ 'S', 'T', 'V', 'X', 0,
  /* 12664 */ 'L', 'X', 'V', 'X', 0,
  /* 12669 */ 'S', 'T', 'X', 'V', 'X', 0,
  /* 12675 */ 'E', 'V', 'L', 'D', 'W', 'X', 0,
  /* 12682 */ 'E', 'V', 'S', 'T', 'D', 'W', 'X', 0,
  /* 12690 */ 'L', 'V', 'E', 'W', 'X', 0,
  /* 12696 */ 'S', 'T', 'V', 'E', 'W', 'X', 0,
  /* 12703 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 0,
  /* 12712 */ 'S', 'T', 'X', 'S', 'I', 'W', 'X', 0,
  /* 12720 */ 'S', 'T', 'W', 'X', 0,
  /* 12725 */ 'L', 'X', 'S', 'I', 'B', 'Z', 'X', 0,
  /* 12733 */ 'L', 'B', 'Z', 'X', 0,
  /* 12738 */ 'L', 'X', 'S', 'I', 'H', 'Z', 'X', 0,
  /* 12746 */ 'L', 'H', 'Z', 'X', 0,
  /* 12751 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 0,
  /* 12760 */ 'L', 'X', 'S', 'I', 'W', 'Z', 'X', 0,
  /* 12768 */ 'L', 'W', 'Z', 'X', 0,
  /* 12773 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 0,
  /* 12781 */ 'D', 'C', 'B', 'Z', 0,
  /* 12786 */ 'L', 'B', 'Z', 0,
  /* 12790 */ 'B', 'D', 'Z', 0,
  /* 12794 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'Z', 0,
  /* 12803 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'D', 'Z', 0,
  /* 12813 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'D', 'Z', 0,
  /* 12823 */ 'L', 'H', 'Z', 0,
  /* 12827 */ 'V', 'R', 'F', 'I', 'Z', 0,
  /* 12833 */ 'X', 'S', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 12841 */ 'X', 'V', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 12849 */ 'X', 'V', 'R', 'S', 'P', 'I', 'Z', 0,
  /* 12857 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 0,
  /* 12864 */ 'B', 'D', 'N', 'Z', 0,
  /* 12869 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 0,
  /* 12879 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 0,
  /* 12889 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'Z', 0,
  /* 12898 */ 'L', 'W', 'Z', 0,
  /* 12902 */ 'M', 'F', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 12910 */ 'M', 'T', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 12918 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'W', 'Z', 0,
  /* 12928 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'W', 'Z', 0,
  /* 12938 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', '_', 0,
  /* 12947 */ 'B', 'L', '8', '_', 'T', 'L', 'S', '_', 0,
  /* 12956 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'b', 0,
  /* 12965 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'b', 0,
  /* 12974 */ 'M', 'T', 'F', 'S', 'F', 'b', 0,
  /* 12981 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 'b', 0,
  /* 12991 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 'b', 0,
  /* 13002 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 'b', 0,
  /* 13014 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 0,
  /* 13022 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 0,
  /* 13033 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 0,
  /* 13043 */ 'Q', 'V', 'F', 'M', 'R', 'b', 0,
  /* 13050 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 0,
  /* 13060 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 0,
  /* 13070 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'b', 0,
  /* 13078 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'b', 0,
  /* 13087 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'b', 0,
  /* 13095 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 'b', 0,
  /* 13104 */ 'L', 'D', 't', 'o', 'c', 0,
  /* 13110 */ 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 13117 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 13135 */ 'X', 'X', 'L', 'O', 'R', 'f', 0,
  /* 13142 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', 0,
  /* 13153 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 13164 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 13175 */ 'B', 'D', 'Z', 'L', 'A', 'm', 0,
  /* 13182 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'm', 0,
  /* 13190 */ 'B', 'D', 'Z', 'A', 'm', 0,
  /* 13196 */ 'B', 'D', 'N', 'Z', 'A', 'm', 0,
  /* 13203 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 13211 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 13220 */ 'B', 'D', 'Z', 'L', 'm', 0,
  /* 13226 */ 'B', 'D', 'N', 'Z', 'L', 'm', 0,
  /* 13233 */ 'B', 'D', 'Z', 'L', 'R', 'm', 0,
  /* 13240 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'm', 0,
  /* 13248 */ 'B', 'D', 'Z', 'm', 0,
  /* 13253 */ 'B', 'D', 'N', 'Z', 'm', 0,
  /* 13259 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', 0,
  /* 13268 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', 0,
  /* 13277 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', 0,
  /* 13285 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 'b', 'm', 0,
  /* 13295 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 'b', 'm', 0,
  /* 13305 */ 'R', 'L', 'W', 'N', 'M', 'o', 'b', 'm', 0,
  /* 13314 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 'n', 0,
  /* 13323 */ 'B', 'C', 'C', 'T', 'R', '8', 'n', 0,
  /* 13331 */ 'B', 'C', 'n', 0,
  /* 13335 */ 'B', 'C', 'L', 'n', 0,
  /* 13340 */ 'B', 'C', 'L', 'R', 'L', 'n', 0,
  /* 13347 */ 'B', 'C', 'C', 'T', 'R', 'L', 'n', 0,
  /* 13355 */ 'B', 'C', 'L', 'R', 'n', 0,
  /* 13361 */ 'B', 'C', 'C', 'T', 'R', 'n', 0,
  /* 13368 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 'o', 0,
  /* 13381 */ 'A', 'D', 'D', '4', 'o', 0,
  /* 13387 */ 'E', 'X', 'T', 'S', 'B', '8', 'o', 0,
  /* 13395 */ 'A', 'D', 'D', 'C', '8', 'o', 0,
  /* 13402 */ 'A', 'N', 'D', 'C', '8', 'o', 0,
  /* 13409 */ 'S', 'U', 'B', 'F', 'C', '8', 'o', 0,
  /* 13417 */ 'O', 'R', 'C', '8', 'o', 0,
  /* 13423 */ 'A', 'D', 'D', '8', 'o', 0,
  /* 13429 */ 'N', 'A', 'N', 'D', '8', 'o', 0,
  /* 13436 */ 'A', 'D', 'D', 'E', '8', 'o', 0,
  /* 13443 */ 'S', 'U', 'B', 'F', 'E', '8', 'o', 0,
  /* 13451 */ 'A', 'D', 'D', 'M', 'E', '8', 'o', 0,
  /* 13459 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'o', 0,
  /* 13468 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 'o', 0,
  /* 13479 */ 'A', 'D', 'D', 'Z', 'E', '8', 'o', 0,
  /* 13487 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'o', 0,
  /* 13496 */ 'S', 'U', 'B', 'F', '8', 'o', 0,
  /* 13503 */ 'N', 'E', 'G', '8', 'o', 0,
  /* 13509 */ 'E', 'X', 'T', 'S', 'H', '8', 'o', 0,
  /* 13517 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 'o', 0,
  /* 13526 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 'o', 0,
  /* 13535 */ 'R', 'L', 'W', 'N', 'M', '8', 'o', 0,
  /* 13543 */ 'N', 'O', 'R', '8', 'o', 0,
  /* 13549 */ 'X', 'O', 'R', '8', 'o', 0,
  /* 13555 */ 'E', 'Q', 'V', '8', 'o', 0,
  /* 13561 */ 'S', 'L', 'W', '8', 'o', 0,
  /* 13567 */ 'S', 'R', 'W', '8', 'o', 0,
  /* 13573 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 'o', 0,
  /* 13582 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 'o', 0,
  /* 13591 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 'o', 0,
  /* 13600 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 'o', 0,
  /* 13610 */ 'E', 'X', 'T', 'S', 'B', 'o', 0,
  /* 13617 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 'o', 0,
  /* 13627 */ 'F', 'S', 'U', 'B', 'o', 0,
  /* 13633 */ 'F', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13640 */ 'F', 'N', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13648 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 'o', 0,
  /* 13658 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 'o', 0,
  /* 13668 */ 'A', 'D', 'D', 'C', 'o', 0,
  /* 13674 */ 'A', 'N', 'D', 'C', 'o', 0,
  /* 13680 */ 'S', 'U', 'B', 'F', 'C', 'o', 0,
  /* 13687 */ 'S', 'U', 'B', 'I', 'C', 'o', 0,
  /* 13694 */ 'A', 'D', 'D', 'I', 'C', 'o', 0,
  /* 13701 */ 'R', 'L', 'D', 'I', 'C', 'o', 0,
  /* 13708 */ 'B', 'C', 'D', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 13718 */ 'B', 'C', 'D', 'U', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 13729 */ 'O', 'R', 'C', 'o', 0,
  /* 13734 */ 'S', 'R', 'A', 'D', 'o', 0,
  /* 13740 */ 'F', 'A', 'D', 'D', 'o', 0,
  /* 13746 */ 'F', 'M', 'A', 'D', 'D', 'o', 0,
  /* 13753 */ 'F', 'N', 'M', 'A', 'D', 'D', 'o', 0,
  /* 13761 */ 'F', 'N', 'E', 'G', 'D', 'o', 0,
  /* 13768 */ 'M', 'U', 'L', 'H', 'D', 'o', 0,
  /* 13775 */ 'F', 'C', 'F', 'I', 'D', 'o', 0,
  /* 13782 */ 'F', 'C', 'T', 'I', 'D', 'o', 0,
  /* 13789 */ 'F', 'S', 'E', 'L', 'D', 'o', 0,
  /* 13796 */ 'M', 'U', 'L', 'L', 'D', 'o', 0,
  /* 13803 */ 'S', 'L', 'D', 'o', 0,
  /* 13808 */ 'F', 'R', 'I', 'M', 'D', 'o', 0,
  /* 13815 */ 'N', 'A', 'N', 'D', 'o', 0,
  /* 13821 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 'o', 0,
  /* 13830 */ 'F', 'R', 'I', 'N', 'D', 'o', 0,
  /* 13837 */ 'F', 'R', 'I', 'P', 'D', 'o', 0,
  /* 13844 */ 'S', 'R', 'D', 'o', 0,
  /* 13849 */ 'F', 'A', 'B', 'S', 'D', 'o', 0,
  /* 13856 */ 'F', 'N', 'A', 'B', 'S', 'D', 'o', 0,
  /* 13864 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 'o', 0,
  /* 13874 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 'o', 0,
  /* 13884 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 'o', 0,
  /* 13894 */ 'D', 'I', 'V', 'D', 'o', 0,
  /* 13900 */ 'F', 'R', 'I', 'Z', 'D', 'o', 0,
  /* 13907 */ 'C', 'N', 'T', 'L', 'Z', 'D', 'o', 0,
  /* 13915 */ 'C', 'N', 'T', 'T', 'Z', 'D', 'o', 0,
  /* 13923 */ 'A', 'D', 'D', 'E', 'o', 0,
  /* 13929 */ 'D', 'I', 'V', 'D', 'E', 'o', 0,
  /* 13936 */ 'S', 'U', 'B', 'F', 'E', 'o', 0,
  /* 13943 */ 'A', 'D', 'D', 'M', 'E', 'o', 0,
  /* 13950 */ 'S', 'U', 'B', 'F', 'M', 'E', 'o', 0,
  /* 13958 */ 'F', 'R', 'E', 'o', 0,
  /* 13963 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'o', 0,
  /* 13972 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'o', 0,
  /* 13982 */ 'D', 'I', 'V', 'W', 'E', 'o', 0,
  /* 13989 */ 'A', 'D', 'D', 'Z', 'E', 'o', 0,
  /* 13996 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'o', 0,
  /* 14004 */ 'S', 'U', 'B', 'F', 'o', 0,
  /* 14010 */ 'M', 'T', 'F', 'S', 'F', 'o', 0,
  /* 14017 */ 'N', 'E', 'G', 'o', 0,
  /* 14022 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 'o', 0,
  /* 14031 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 'o', 0,
  /* 14041 */ 'E', 'X', 'T', 'S', 'H', 'o', 0,
  /* 14048 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 'o', 0,
  /* 14058 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 'o', 0,
  /* 14068 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 'o', 0,
  /* 14078 */ 'S', 'R', 'A', 'D', 'I', 'o', 0,
  /* 14085 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 'o', 0,
  /* 14095 */ 'E', 'X', 'T', 'L', 'D', 'I', 'o', 0,
  /* 14103 */ 'A', 'N', 'D', 'I', 'o', 0,
  /* 14109 */ 'C', 'L', 'R', 'R', 'D', 'I', 'o', 0,
  /* 14117 */ 'I', 'N', 'S', 'R', 'D', 'I', 'o', 0,
  /* 14125 */ 'R', 'O', 'T', 'R', 'D', 'I', 'o', 0,
  /* 14133 */ 'E', 'X', 'T', 'R', 'D', 'I', 'o', 0,
  /* 14141 */ 'M', 'T', 'F', 'S', 'F', 'I', 'o', 0,
  /* 14149 */ 'R', 'L', 'D', 'I', 'M', 'I', 'o', 0,
  /* 14157 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 0,
  /* 14165 */ 'S', 'R', 'A', 'W', 'I', 'o', 0,
  /* 14172 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 'o', 0,
  /* 14182 */ 'I', 'N', 'S', 'L', 'W', 'I', 'o', 0,
  /* 14190 */ 'E', 'X', 'T', 'L', 'W', 'I', 'o', 0,
  /* 14198 */ 'C', 'L', 'R', 'R', 'W', 'I', 'o', 0,
  /* 14206 */ 'I', 'N', 'S', 'R', 'W', 'I', 'o', 0,
  /* 14214 */ 'R', 'O', 'T', 'R', 'W', 'I', 'o', 0,
  /* 14222 */ 'E', 'X', 'T', 'R', 'W', 'I', 'o', 0,
  /* 14230 */ 'R', 'L', 'D', 'C', 'L', 'o', 0,
  /* 14237 */ 'R', 'L', 'D', 'I', 'C', 'L', 'o', 0,
  /* 14245 */ 'F', 'M', 'U', 'L', 'o', 0,
  /* 14251 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 0,
  /* 14259 */ 'R', 'L', 'W', 'N', 'M', 'o', 0,
  /* 14266 */ 'B', 'C', 'D', 'C', 'F', 'N', 'o', 0,
  /* 14274 */ 'B', 'C', 'D', 'C', 'P', 'S', 'G', 'N', 'o', 0,
  /* 14284 */ 'B', 'C', 'D', 'S', 'E', 'T', 'S', 'G', 'N', 'o', 0,
  /* 14295 */ 'B', 'C', 'D', 'C', 'T', 'N', 'o', 0,
  /* 14303 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 'o', 0,
  /* 14314 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 'o', 0,
  /* 14325 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 'o', 0,
  /* 14336 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 'o', 0,
  /* 14347 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 'o', 0,
  /* 14356 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 'o', 0,
  /* 14366 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 'o', 0,
  /* 14376 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 'o', 0,
  /* 14386 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 'o', 0,
  /* 14397 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 'o', 0,
  /* 14408 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 'o', 0,
  /* 14419 */ 'F', 'R', 'S', 'P', 'o', 0,
  /* 14425 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 'o', 0,
  /* 14436 */ 'B', 'C', 'D', 'C', 'F', 'S', 'Q', 'o', 0,
  /* 14445 */ 'B', 'C', 'D', 'C', 'T', 'S', 'Q', 'o', 0,
  /* 14454 */ 'R', 'L', 'D', 'C', 'R', 'o', 0,
  /* 14461 */ 'R', 'L', 'D', 'I', 'C', 'R', 'o', 0,
  /* 14469 */ 'F', 'M', 'R', 'o', 0,
  /* 14474 */ 'N', 'O', 'R', 'o', 0,
  /* 14479 */ 'X', 'O', 'R', 'o', 0,
  /* 14484 */ 'B', 'C', 'D', 'S', 'R', 'o', 0,
  /* 14491 */ 'F', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14498 */ 'F', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14506 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14515 */ 'B', 'C', 'D', 'S', 'o', 0,
  /* 14521 */ 'F', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14528 */ 'F', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14536 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14545 */ 'F', 'C', 'F', 'I', 'D', 'S', 'o', 0,
  /* 14553 */ 'F', 'R', 'E', 'S', 'o', 0,
  /* 14559 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'o', 0,
  /* 14569 */ 'M', 'F', 'F', 'S', 'o', 0,
  /* 14575 */ 'F', 'N', 'E', 'G', 'S', 'o', 0,
  /* 14582 */ 'A', 'N', 'D', 'I', 'S', 'o', 0,
  /* 14589 */ 'F', 'S', 'E', 'L', 'S', 'o', 0,
  /* 14596 */ 'F', 'M', 'U', 'L', 'S', 'o', 0,
  /* 14603 */ 'F', 'R', 'I', 'M', 'S', 'o', 0,
  /* 14610 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 'o', 0,
  /* 14619 */ 'F', 'R', 'I', 'N', 'S', 'o', 0,
  /* 14626 */ 'F', 'R', 'I', 'P', 'S', 'o', 0,
  /* 14633 */ 'F', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14640 */ 'F', 'N', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14648 */ 'F', 'S', 'Q', 'R', 'T', 'S', 'o', 0,
  /* 14656 */ 'B', 'C', 'D', 'U', 'S', 'o', 0,
  /* 14663 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', 'o', 0,
  /* 14672 */ 'F', 'D', 'I', 'V', 'S', 'o', 0,
  /* 14679 */ 'F', 'R', 'I', 'Z', 'S', 'o', 0,
  /* 14686 */ 'F', 'S', 'Q', 'R', 'T', 'o', 0,
  /* 14693 */ 'M', 'U', 'L', 'H', 'D', 'U', 'o', 0,
  /* 14701 */ 'F', 'C', 'F', 'I', 'D', 'U', 'o', 0,
  /* 14709 */ 'D', 'I', 'V', 'D', 'U', 'o', 0,
  /* 14716 */ 'D', 'I', 'V', 'D', 'E', 'U', 'o', 0,
  /* 14724 */ 'D', 'I', 'V', 'W', 'E', 'U', 'o', 0,
  /* 14732 */ 'M', 'U', 'L', 'H', 'W', 'U', 'o', 0,
  /* 14740 */ 'D', 'I', 'V', 'W', 'U', 'o', 0,
  /* 14747 */ 'F', 'D', 'I', 'V', 'o', 0,
  /* 14753 */ 'E', 'Q', 'V', 'o', 0,
  /* 14758 */ 'S', 'R', 'A', 'W', 'o', 0,
  /* 14764 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 'o', 0,
  /* 14773 */ 'M', 'U', 'L', 'H', 'W', 'o', 0,
  /* 14780 */ 'F', 'C', 'T', 'I', 'W', 'o', 0,
  /* 14787 */ 'M', 'U', 'L', 'L', 'W', 'o', 0,
  /* 14794 */ 'S', 'L', 'W', 'o', 0,
  /* 14799 */ 'S', 'R', 'W', 'o', 0,
  /* 14804 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 'o', 0,
  /* 14814 */ 'E', 'X', 'T', 'S', 'W', 'o', 0,
  /* 14821 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 'o', 0,
  /* 14831 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 'o', 0,
  /* 14841 */ 'D', 'I', 'V', 'W', 'o', 0,
  /* 14847 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 'o', 0,
  /* 14857 */ 'C', 'N', 'T', 'L', 'Z', 'W', 'o', 0,
  /* 14865 */ 'C', 'N', 'T', 'T', 'Z', 'W', 'o', 0,
  /* 14873 */ 'F', 'C', 'T', 'I', 'D', 'Z', 'o', 0,
  /* 14881 */ 'B', 'C', 'D', 'C', 'F', 'Z', 'o', 0,
  /* 14889 */ 'B', 'C', 'D', 'C', 'T', 'Z', 'o', 0,
  /* 14897 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 'o', 0,
  /* 14906 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 'o', 0,
  /* 14915 */ 'F', 'C', 'T', 'I', 'W', 'Z', 'o', 0,
  /* 14923 */ 'B', 'D', 'Z', 'L', 'A', 'p', 0,
  /* 14930 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'p', 0,
  /* 14938 */ 'B', 'D', 'Z', 'A', 'p', 0,
  /* 14944 */ 'B', 'D', 'N', 'Z', 'A', 'p', 0,
  /* 14951 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 14959 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 14968 */ 'B', 'D', 'Z', 'L', 'p', 0,
  /* 14974 */ 'B', 'D', 'N', 'Z', 'L', 'p', 0,
  /* 14981 */ 'B', 'D', 'Z', 'L', 'R', 'p', 0,
  /* 14988 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'p', 0,
  /* 14996 */ 'B', 'D', 'Z', 'p', 0,
  /* 15001 */ 'B', 'D', 'N', 'Z', 'p', 0,
  /* 15007 */ 'M', 'T', 'C', 'T', 'R', '8', 'l', 'o', 'o', 'p', 0,
  /* 15018 */ 'M', 'T', 'C', 'T', 'R', 'l', 'o', 'o', 'p', 0,
  /* 15028 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 15042 */ 'V', 'S', 'P', 'L', 'T', 'B', 's', 0,
  /* 15050 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 's', 0,
  /* 15060 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 's', 0,
  /* 15070 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 's', 0,
  /* 15080 */ 'Q', 'V', 'F', 'N', 'E', 'G', 's', 0,
  /* 15088 */ 'V', 'S', 'P', 'L', 'T', 'H', 's', 0,
  /* 15096 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 's', 0,
  /* 15106 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 's', 0,
  /* 15116 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 's', 0,
  /* 15127 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 's', 0,
  /* 15139 */ 'Q', 'V', 'F', 'R', 'I', 'M', 's', 0,
  /* 15147 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 's', 0,
  /* 15156 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 's', 0,
  /* 15166 */ 'Q', 'V', 'F', 'R', 'I', 'N', 's', 0,
  /* 15174 */ 'Q', 'V', 'F', 'R', 'I', 'P', 's', 0,
  /* 15182 */ 'Q', 'V', 'F', 'R', 'S', 'P', 's', 0,
  /* 15190 */ 'Q', 'V', 'F', 'M', 'R', 's', 0,
  /* 15197 */ 'Q', 'V', 'F', 'A', 'B', 'S', 's', 0,
  /* 15205 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 's', 0,
  /* 15214 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 's', 0,
  /* 15223 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 15233 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 15244 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 's', 0,
  /* 15253 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 15263 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 15274 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 's', 0,
  /* 15286 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 's', 0,
  /* 15298 */ 'Q', 'V', 'F', 'R', 'E', 'S', 's', 0,
  /* 15306 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 's', 0,
  /* 15318 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 's', 0,
  /* 15327 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 's', 0,
  /* 15339 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 's', 0,
  /* 15351 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 's', 0,
  /* 15361 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 's', 0,
  /* 15371 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 's', 0,
  /* 15380 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 's', 0,
  /* 15389 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 's', 0,
  /* 15399 */ 'Q', 'V', 'L', 'F', 'S', 'X', 's', 0,
  /* 15407 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 's', 0,
  /* 15416 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 's', 0,
  /* 15426 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 's', 0,
  /* 15434 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 's', 0,
  /* 15443 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 's', 0,
  /* 15455 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 's', 0,
  /* 15466 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 's', 0,
  /* 15477 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 's', 0,
  /* 15488 */ 'B', 'C', 'L', 'a', 'l', 'w', 'a', 'y', 's', 0,
  /* 15498 */ 'g', 'B', 'C', 'A', 'a', 't', 0,
  /* 15505 */ 'g', 'B', 'C', 'L', 'A', 'a', 't', 0,
  /* 15513 */ 'g', 'B', 'C', 'a', 't', 0,
  /* 15519 */ 'g', 'B', 'C', 'L', 'a', 't', 0,
  /* 15526 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 'i', 'n', 't', 0,
  /* 15538 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 15548 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 15558 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 'v', 0,
  /* 15567 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 'v', 0,
  /* 15576 */ 'L', 'A', 'x', 0,
  /* 15580 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'x', 0,
  /* 15590 */ 'D', 'C', 'B', 'F', 'x', 0,
  /* 15596 */ 'D', 'C', 'B', 'T', 'x', 0,
  /* 15602 */ 'D', 'C', 'B', 'T', 'S', 'T', 'x', 0,
  /* 15610 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 'x', 0,
  /* 15619 */ 'X', 'X', 'L', 'X', 'O', 'R', 'z', 0,
  /* 15627 */ 'X', 'X', 'L', 'X', 'O', 'R', 'd', 'p', 'z', 0,
  /* 15637 */ 'X', 'X', 'L', 'X', 'O', 'R', 's', 'p', 'z', 0,
  /* 15647 */ 'F', 'A', 'D', 'D', 'r', 't', 'z', 0,
};

extern const unsigned PPCInstrNameIndices[] = {
    5285U, 6294U, 6517U, 5743U, 5734U, 5821U, 4746U, 4761U, 
    4612U, 4775U, 9649U, 4484U, 4331U, 12776U, 4405U, 10378U, 
    4069U, 6765U, 10317U, 4116U, 10306U, 4425U, 7759U, 7776U, 
    8837U, 10111U, 10250U, 5794U, 3877U, 3271U, 5922U, 10758U, 
    10765U, 6114U, 6121U, 4058U, 9028U, 9022U, 12025U, 4494U, 
    10076U, 10393U, 4333U, 10328U, 9107U, 10424U, 3775U, 4450U, 
    4096U, 3424U, 9703U, 10551U, 3452U, 10295U, 10283U, 10544U, 
    10560U, 5788U, 8869U, 8862U, 7730U, 7723U, 10086U, 4344U, 
    4323U, 6583U, 6575U, 6646U, 6638U, 3809U, 3247U, 5907U, 
    10751U, 6107U, 10536U, 3442U, 5457U, 5494U, 7618U, 7627U, 
    7524U, 8697U, 892U, 9555U, 13381U, 1310U, 9563U, 12938U, 
    13423U, 3333U, 1261U, 13395U, 13668U, 4347U, 1321U, 13436U, 
    13923U, 5155U, 1443U, 3381U, 1280U, 13694U, 9525U, 1881U, 
    2493U, 55U, 2477U, 2451U, 2464U, 2440U, 6045U, 349U, 
    6011U, 309U, 8766U, 363U, 6022U, 322U, 8781U, 380U, 
    6002U, 4412U, 1334U, 13451U, 13943U, 4589U, 1359U, 13479U, 
    13989U, 6558U, 8546U, 4020U, 1316U, 13430U, 3341U, 1267U, 
    13402U, 13674U, 14582U, 2208U, 14103U, 2201U, 10220U, 1915U, 
    10235U, 1931U, 13816U, 1081U, 209U, 655U, 1614U, 963U, 
    91U, 537U, 1502U, 1004U, 132U, 578U, 1541U, 1161U, 
    289U, 735U, 1700U, 1045U, 173U, 619U, 1580U, 983U, 
    111U, 557U, 1521U, 1121U, 249U, 695U, 1652U, 943U, 
    71U, 517U, 1470U, 1140U, 268U, 714U, 1680U, 1024U, 
    152U, 598U, 1560U, 1101U, 229U, 675U, 1633U, 1065U, 
    193U, 639U, 1599U, 6553U, 2941U, 2330U, 3326U, 3329U, 
    2353U, 9088U, 1859U, 5887U, 1744U, 5716U, 2705U, 8886U, 
    5851U, 9082U, 1852U, 13323U, 5880U, 1736U, 13314U, 13347U, 
    13361U, 14266U, 14436U, 14881U, 14274U, 14295U, 14445U, 14889U, 
    14284U, 14484U, 14515U, 13708U, 14656U, 13718U, 5712U, 8881U, 
    5845U, 13340U, 13355U, 15488U, 13335U, 9076U, 1846U, 5873U, 
    1729U, 13117U, 13331U, 12864U, 2154U, 2929U, 13196U, 14944U, 
    5989U, 2717U, 13182U, 14930U, 8908U, 1798U, 5865U, 13211U, 
    14959U, 13240U, 14988U, 13226U, 14974U, 13253U, 15001U, 12790U, 
    2144U, 2924U, 13190U, 14938U, 5984U, 2711U, 13175U, 14923U, 
    8902U, 1791U, 5858U, 13203U, 14951U, 13233U, 14981U, 13220U, 
    14968U, 13248U, 14996U, 5708U, 1719U, 7746U, 9586U, 9571U, 
    12947U, 2695U, 1218U, 7737U, 8876U, 1774U, 5839U, 9579U, 
    4002U, 3436U, 3040U, 5172U, 14085U, 5531U, 14172U, 5203U, 
    14109U, 5567U, 14198U, 3028U, 1230U, 4111U, 5197U, 3033U, 
    3971U, 5165U, 11268U, 5517U, 3048U, 1236U, 11502U, 5561U, 
    4295U, 13907U, 11775U, 2009U, 13573U, 14857U, 4308U, 13915U, 
    11788U, 2017U, 13582U, 14865U, 10409U, 12773U, 2130U, 10483U, 
    15610U, 4475U, 1349U, 13468U, 10459U, 13972U, 15580U, 10136U, 
    10157U, 4046U, 3346U, 10784U, 4032U, 8972U, 8984U, 3595U, 
    10174U, 10166U, 9010U, 2328U, 4602U, 5782U, 7716U, 15590U, 
    5084U, 10473U, 10066U, 10095U, 9300U, 10497U, 10102U, 9307U, 
    10521U, 15602U, 10510U, 15596U, 12781U, 5978U, 5099U, 440U, 
    836U, 450U, 846U, 4278U, 4352U, 10628U, 14716U, 13929U, 
    10622U, 14709U, 13894U, 11753U, 4575U, 10635U, 14724U, 13982U, 
    10722U, 14740U, 14841U, 9683U, 5814U, 10479U, 755U, 10504U, 
    761U, 10529U, 776U, 10516U, 769U, 3496U, 1295U, 10143U, 
    1900U, 461U, 857U, 479U, 875U, 15028U, 10780U, 1989U, 
    13555U, 14753U, 9133U, 11231U, 10876U, 10998U, 10937U, 11059U, 
    11145U, 4052U, 3353U, 8586U, 9730U, 10674U, 9739U, 10683U, 
    11558U, 11773U, 9890U, 10720U, 10790U, 3137U, 4945U, 3883U, 
    11959U, 4803U, 12065U, 11152U, 12675U, 9995U, 12444U, 10018U, 
    12469U, 10031U, 12483U, 4378U, 12039U, 9635U, 12419U, 10655U, 
    12586U, 10007U, 12457U, 10044U, 12497U, 5263U, 6621U, 6611U, 
    5273U, 2216U, 6352U, 2260U, 6396U, 2294U, 6430U, 4625U, 
    2358U, 10828U, 11303U, 5322U, 2519U, 10888U, 11351U, 4691U, 
    2397U, 10852U, 11327U, 11010U, 11423U, 5357U, 2558U, 10949U, 
    11387U, 11071U, 11459U, 2228U, 6364U, 2272U, 6408U, 2306U, 
    6442U, 4643U, 2378U, 10840U, 11315U, 5340U, 2539U, 10925U, 
    11375U, 4709U, 2417U, 10864U, 11339U, 11047U, 11447U, 5384U, 
    2588U, 10986U, 11411U, 11108U, 11483U, 2724U, 4634U, 2368U, 
    5331U, 2529U, 4700U, 2407U, 5366U, 2568U, 10913U, 11363U, 
    11035U, 11435U, 5375U, 2578U, 10974U, 11399U, 11096U, 11471U, 
    4652U, 2388U, 2240U, 6376U, 5349U, 2549U, 2284U, 6420U, 
    4718U, 2427U, 2250U, 6386U, 5393U, 2598U, 2318U, 6454U, 
    4039U, 4740U, 8978U, 8989U, 3601U, 11274U, 5524U, 11158U, 
    11280U, 5547U, 5253U, 5476U, 9541U, 10647U, 9826U, 10708U, 
    3897U, 11966U, 4809U, 12072U, 11165U, 12682U, 4385U, 12047U, 
    6591U, 12207U, 4581U, 12056U, 6757U, 12216U, 10900U, 11022U, 
    10961U, 11083U, 11187U, 11195U, 9016U, 5181U, 14095U, 5554U, 
    14190U, 5224U, 14133U, 5588U, 14222U, 3139U, 1243U, 785U, 
    13387U, 13610U, 4947U, 1431U, 798U, 13509U, 14041U, 11591U, 
    824U, 13368U, 14814U, 6599U, 4160U, 13849U, 9666U, 14633U, 
    3804U, 9218U, 14521U, 13740U, 15647U, 3933U, 9293U, 14545U, 
    10597U, 9757U, 14663U, 14701U, 13775U, 4246U, 9797U, 4082U, 
    13821U, 9621U, 14610U, 3947U, 12871U, 14897U, 12796U, 14873U, 
    13782U, 11241U, 12881U, 14906U, 12891U, 14915U, 14780U, 10753U, 
    9820U, 14672U, 14747U, 3818U, 9226U, 14528U, 13746U, 8940U, 
    14469U, 3256U, 9199U, 14498U, 13633U, 5902U, 9600U, 14596U, 
    14245U, 4166U, 13856U, 9672U, 14640U, 3913U, 13761U, 9433U, 
    14575U, 3826U, 9235U, 14536U, 13753U, 3264U, 9208U, 14506U, 
    13640U, 4446U, 9397U, 14553U, 13958U, 3995U, 13808U, 9615U, 
    14603U, 4090U, 13830U, 9629U, 14619U, 4105U, 13837U, 9643U, 
    14626U, 4283U, 13900U, 9978U, 14679U, 8420U, 14419U, 4467U, 
    9404U, 14559U, 13963U, 3959U, 13789U, 9549U, 14589U, 10418U, 
    9748U, 14648U, 14686U, 3242U, 9191U, 14491U, 13627U, 8809U, 
    412U, 8796U, 397U, 3939U, 5089U, 10071U, 5105U, 5540U, 
    14182U, 5210U, 14117U, 5574U, 14206U, 5766U, 1723U, 3484U, 
    2696U, 15576U, 12262U, 5939U, 12786U, 2139U, 12140U, 10728U, 
    1971U, 12637U, 2085U, 12733U, 2112U, 3956U, 12268U, 5946U, 
    9984U, 12286U, 12113U, 12196U, 10613U, 12563U, 11994U, 6033U, 
    335U, 13104U, 2340U, 10360U, 5485U, 5995U, 3904U, 10577U, 
    12548U, 11976U, 11872U, 12753U, 9418U, 10663U, 12616U, 12397U, 
    2436U, 1213U, 12274U, 5953U, 10567U, 1947U, 12509U, 2057U, 
    11857U, 2025U, 12299U, 2043U, 12823U, 2149U, 12147U, 10733U, 
    1977U, 12643U, 2092U, 12746U, 2118U, 5292U, 1452U, 9531U, 
    1888U, 11286U, 5595U, 11892U, 12080U, 12690U, 5895U, 9067U, 
    12655U, 5967U, 2730U, 12280U, 5960U, 10055U, 12515U, 11887U, 
    432U, 425U, 12321U, 2050U, 12898U, 2160U, 12154U, 10738U, 
    1983U, 12649U, 2099U, 12768U, 2124U, 13110U, 4196U, 12007U, 
    12725U, 12738U, 11879U, 12760U, 8442U, 12247U, 10801U, 11825U, 
    11795U, 12382U, 11842U, 5928U, 5826U, 11810U, 12437U, 12664U, 
    8682U, 4660U, 9422U, 12352U, 4315U, 8720U, 1768U, 9095U, 
    1867U, 8702U, 9413U, 14569U, 8892U, 1779U, 9050U, 4665U, 
    1380U, 9033U, 1828U, 9045U, 6503U, 3152U, 1250U, 4509U, 
    15538U, 8732U, 4146U, 3977U, 12902U, 3476U, 3490U, 4679U, 
    1396U, 9101U, 1874U, 15007U, 15018U, 8714U, 0U, 48U, 
    4685U, 5246U, 14141U, 12974U, 14010U, 8897U, 1785U, 9056U, 
    4139U, 4672U, 1388U, 9039U, 1835U, 9062U, 6510U, 4518U, 
    15548U, 8739U, 4153U, 3889U, 2734U, 9833U, 12910U, 3925U, 
    10588U, 14693U, 13768U, 11225U, 10692U, 14732U, 14773U, 3965U, 
    13796U, 5295U, 1449U, 11262U, 14787U, 8926U, 8915U, 1806U, 
    4027U, 1315U, 13429U, 13815U, 6774U, 4736U, 1426U, 13503U, 
    14017U, 7742U, 1181U, 1193U, 8968U, 1818U, 13543U, 14474U, 
    8962U, 1819U, 13544U, 3591U, 1305U, 13417U, 13729U, 5453U, 
    1465U, 9536U, 1894U, 14475U, 4218U, 11620U, 10339U, 10348U, 
    5408U, 12981U, 15106U, 5466U, 12991U, 15116U, 9118U, 15197U, 
    3802U, 9216U, 15244U, 3931U, 9291U, 10595U, 9755U, 12956U, 
    8577U, 13033U, 15455U, 10180U, 13050U, 15466U, 10274U, 13060U, 
    15477U, 6474U, 15156U, 3945U, 10604U, 12869U, 12794U, 12965U, 
    11239U, 10699U, 12879U, 12889U, 5697U, 13002U, 15127U, 3816U, 
    9224U, 15253U, 8938U, 13043U, 15190U, 3254U, 9197U, 15223U, 
    5900U, 9598U, 15318U, 9125U, 15205U, 4733U, 15080U, 3824U, 
    9233U, 15263U, 3262U, 9206U, 15233U, 6273U, 15147U, 4444U, 
    9395U, 15298U, 6211U, 15139U, 6496U, 15166U, 7709U, 15174U, 
    12857U, 15426U, 8418U, 15182U, 4465U, 9402U, 15306U, 5759U, 
    13014U, 13095U, 15434U, 3240U, 9189U, 15214U, 6464U, 13022U, 
    15443U, 3858U, 9270U, 5914U, 9606U, 3833U, 9243U, 3867U, 
    9280U, 3846U, 9257U, 5132U, 12527U, 2824U, 11942U, 2752U, 
    12595U, 2864U, 12365U, 2788U, 15380U, 12546U, 2845U, 11974U, 
    2771U, 13070U, 11870U, 2742U, 12751U, 2914U, 12614U, 2885U, 
    12395U, 2807U, 13087U, 15399U, 11989U, 12410U, 15526U, 11998U, 
    12428U, 12536U, 2834U, 5648U, 2649U, 11950U, 2761U, 5610U, 
    2607U, 12604U, 2874U, 5669U, 2672U, 12373U, 2797U, 5629U, 
    2628U, 15389U, 12554U, 2854U, 5659U, 2661U, 11981U, 2779U, 
    5620U, 2618U, 13078U, 12703U, 2904U, 12622U, 2894U, 5680U, 
    2684U, 15416U, 12402U, 2815U, 5639U, 2639U, 15407U, 8746U, 
    10194U, 4527U, 5121U, 5160U, 2949U, 5242U, 3940U, 5126U, 
    5721U, 14230U, 8708U, 14454U, 3387U, 5727U, 811U, 14237U, 
    8725U, 14461U, 13701U, 5308U, 14149U, 5315U, 1456U, 13517U, 
    13259U, 14157U, 13285U, 6225U, 1753U, 13526U, 13268U, 14251U, 
    13295U, 6233U, 1761U, 13535U, 13277U, 14259U, 13305U, 5217U, 
    14125U, 5581U, 14214U, 3186U, 3717U, 897U, 1403U, 920U, 
    1489U, 3505U, 3532U, 3634U, 3607U, 3559U, 3690U, 3661U, 
    910U, 1416U, 933U, 1670U, 3520U, 3547U, 3649U, 3622U, 
    3575U, 3705U, 3677U, 2507U, 4393U, 4726U, 4358U, 10743U, 
    4458U, 3460U, 3991U, 5176U, 14089U, 13803U, 11282U, 1994U, 
    13561U, 5535U, 14176U, 14794U, 8757U, 10208U, 4556U, 3783U, 
    5149U, 14078U, 13734U, 11132U, 5503U, 14165U, 14758U, 4142U, 
    5212U, 14119U, 13844U, 11514U, 1999U, 13567U, 5576U, 14208U, 
    14799U, 3182U, 1256U, 12106U, 11918U, 10572U, 1953U, 12521U, 
    2064U, 11913U, 2031U, 4235U, 9989U, 12292U, 12119U, 11924U, 
    10617U, 12568U, 12020U, 3908U, 10582U, 12556U, 11983U, 12705U, 
    9428U, 10668U, 12624U, 12404U, 4985U, 1438U, 12305U, 12126U, 
    11930U, 10642U, 1959U, 12580U, 2071U, 12101U, 2037U, 11290U, 
    7754U, 5600U, 11898U, 12086U, 12696U, 12659U, 5972U, 11647U, 
    2004U, 10060U, 12327U, 12133U, 11936U, 10715U, 1965U, 12631U, 
    2078U, 12720U, 2106U, 4201U, 12013U, 11905U, 15558U, 12093U, 
    15567U, 12712U, 8448U, 12254U, 10805U, 11833U, 11802U, 11849U, 
    5933U, 5832U, 11817U, 12669U, 4607U, 1374U, 13496U, 3369U, 
    1273U, 13409U, 13680U, 4372U, 1327U, 13443U, 13936U, 3393U, 
    1287U, 4418U, 1341U, 13459U, 13950U, 4595U, 1366U, 13487U, 
    13996U, 14004U, 5094U, 3375U, 13687U, 9519U, 3463U, 10402U, 
    3360U, 5111U, 3720U, 5139U, 3004U, 1223U, 2333U, 1205U, 
    9072U, 1842U, 6489U, 5690U, 10125U, 13142U, 2165U, 13153U, 
    2177U, 13164U, 2189U, 4214U, 5231U, 4064U, 2513U, 4399U, 
    5752U, 11862U, 3953U, 5289U, 4438U, 496U, 12359U, 510U, 
    3756U, 3468U, 4569U, 503U, 6778U, 10369U, 6172U, 9063U, 
    11608U, 5606U, 4542U, 8687U, 3193U, 4989U, 11667U, 8635U, 
    11659U, 8663U, 6264U, 7562U, 9156U, 9477U, 9858U, 6074U, 
    9181U, 6099U, 6155U, 9502U, 6247U, 6336U, 9882U, 4053U, 
    3354U, 3081U, 4889U, 11526U, 3209U, 5005U, 11683U, 4001U, 
    8594U, 12389U, 32U, 12574U, 40U, 8829U, 10447U, 3313U, 
    4289U, 5072U, 2955U, 11767U, 7530U, 14347U, 7636U, 14366U, 
    3231U, 13617U, 4253U, 13874U, 5027U, 14048U, 11705U, 14821U, 
    7577U, 14356U, 7645U, 14376U, 3128U, 13600U, 4180U, 13864U, 
    4936U, 14031U, 11582U, 14804U, 3288U, 13648U, 4262U, 13884U, 
    5047U, 14058U, 11737U, 14831U, 2973U, 13591U, 4816U, 14022U, 
    11179U, 14764U, 3304U, 13658U, 5063U, 14068U, 11758U, 14847U, 
    9964U, 14U, 9971U, 23U, 3319U, 4302U, 5078U, 2964U, 
    11782U, 10791U, 7592U, 4207U, 3277U, 5036U, 11714U, 3729U, 
    15050U, 10810U, 15351U, 3738U, 15060U, 10819U, 15361U, 3747U, 
    15070U, 12169U, 12312U, 12178U, 12334U, 12187U, 12343U, 3788U, 
    3173U, 4226U, 4976U, 11628U, 7569U, 7554U, 7654U, 3145U, 
    4189U, 4953U, 11597U, 3297U, 4271U, 5056U, 11746U, 9456U, 
    9466U, 7611U, 3113U, 4173U, 4921U, 11567U, 3216U, 4239U, 
    5012U, 11690U, 6145U, 11172U, 2981U, 4824U, 11210U, 2997U, 
    4831U, 11247U, 11495U, 6057U, 6128U, 9485U, 6082U, 6163U, 
    9510U, 8617U, 8643U, 8672U, 8608U, 3059U, 4867U, 11518U, 
    3201U, 4997U, 11675U, 3120U, 4928U, 11574U, 3223U, 5019U, 
    11697U, 6344U, 4040U, 8820U, 10434U, 3919U, 11204U, 7538U, 
    8979U, 8990U, 3602U, 6281U, 8944U, 9001U, 12233U, 9679U, 
    9765U, 9687U, 9781U, 9695U, 9804U, 6304U, 9773U, 6312U, 
    9789U, 6320U, 9812U, 3020U, 4009U, 4848U, 11295U, 3164U, 
    4217U, 4967U, 11619U, 3794U, 8569U, 11137U, 7586U, 6181U, 
    6483U, 7679U, 12827U, 3010U, 3985U, 5301U, 6218U, 4838U, 
    11275U, 5401U, 6232U, 7601U, 12201U, 5771U, 3764U, 11120U, 
    5896U, 3015U, 3990U, 5417U, 4843U, 6633U, 10772U, 11281U, 
    3157U, 15042U, 4960U, 15088U, 3096U, 4904U, 11541U, 11604U, 
    9068U, 2943U, 3782U, 4797U, 11131U, 3054U, 4148U, 4862U, 
    6752U, 10796U, 11513U, 8627U, 11651U, 8654U, 6255U, 7547U, 
    9148U, 9448U, 9850U, 6066U, 9173U, 6091U, 6137U, 9494U, 
    6239U, 6328U, 9874U, 9841U, 9139U, 9439U, 9164U, 9866U, 
    12225U, 3088U, 4896U, 11533U, 12239U, 3105U, 4913U, 11550U, 
    9017U, 7U, 2935U, 4789U, 9382U, 3067U, 4875U, 10189U, 
    4366U, 5235U, 8997U, 1823U, 13549U, 5452U, 1464U, 9535U, 
    1893U, 14479U, 7371U, 7962U, 6921U, 7845U, 6715U, 8116U, 
    7333U, 7304U, 7933U, 6977U, 7387U, 6997U, 7241U, 7906U, 
    7445U, 7979U, 7205U, 7896U, 7661U, 7915U, 8363U, 6543U, 
    9316U, 15274U, 9898U, 15327U, 9349U, 15286U, 9931U, 15339U, 
    7250U, 7259U, 6654U, 12803U, 12918U, 12813U, 12928U, 7853U, 
    7268U, 6533U, 6937U, 8132U, 7862U, 6957U, 8152U, 7454U, 
    7988U, 6743U, 8493U, 7286U, 7924U, 6847U, 8060U, 7185U, 
    8325U, 7836U, 6705U, 6912U, 7508U, 7096U, 6903U, 7225U, 
    7087U, 6805U, 8018U, 7143U, 8283U, 7799U, 6675U, 7105U, 
    7888U, 6724U, 8245U, 7353U, 7953U, 7053U, 7871U, 6825U, 
    8038U, 7163U, 8303U, 7826U, 6694U, 6783U, 7996U, 7121U, 
    8261U, 7789U, 6664U, 5424U, 3400U, 6187U, 7685U, 12833U, 
    7017U, 8192U, 5438U, 12161U, 8561U, 7031U, 8206U, 7407U, 
    7970U, 6733U, 8465U, 6867U, 7808U, 6685U, 8080U, 7462U, 
    7416U, 6883U, 7816U, 8096U, 7315U, 7944U, 7069U, 7879U, 
    7379U, 8434U, 6929U, 8124U, 7343U, 14325U, 8408U, 14408U, 
    6987U, 14303U, 8172U, 14386U, 7397U, 14336U, 8455U, 14425U, 
    7007U, 14314U, 8182U, 14397U, 7215U, 8345U, 8372U, 9327U, 
    9909U, 9360U, 9942U, 8381U, 7277U, 7670U, 9338U, 9920U, 
    9371U, 9953U, 6947U, 8142U, 7488U, 8518U, 6967U, 8162U, 
    7498U, 8528U, 7480U, 8510U, 7295U, 8390U, 6857U, 8070U, 
    7195U, 8335U, 7516U, 8538U, 7233U, 8355U, 6815U, 8028U, 
    7153U, 8293U, 7113U, 8253U, 7362U, 8425U, 7061U, 8228U, 
    6836U, 8049U, 7174U, 8314U, 6794U, 8007U, 7132U, 8272U, 
    5431U, 3408U, 6195U, 7693U, 12841U, 7024U, 8199U, 5445U, 
    3416U, 6203U, 7701U, 12849U, 7042U, 8217U, 7436U, 8484U, 
    6875U, 8088U, 7471U, 8501U, 7426U, 8474U, 6893U, 8106U, 
    7324U, 8399U, 7078U, 8236U, 4133U, 4856U, 8602U, 11507U, 
    11725U, 11637U, 4017U, 3338U, 10777U, 4024U, 8965U, 8959U, 
    3588U, 13135U, 8994U, 15627U, 15637U, 15619U, 11217U, 11254U, 
    6287U, 5188U, 15096U, 8951U, 5776U, 5509U, 2988U, 11611U, 
    15371U, 3325U, 2348U, 15498U, 9081U, 5879U, 5711U, 2699U, 
    15505U, 8880U, 5844U, 15519U, 15513U, 
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1941);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfo {
  explicit PPCGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~PPCGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc PPCInsts[];
extern const unsigned PPCInstrNameIndices[];
extern const char PPCInstrNameData[];
PPCGenInstrInfo::PPCGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1941);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace PPC {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace PPC {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace PPC {
namespace OpTypes {
enum OperandType {
  abscalltarget = 0,
  abscondbrtarget = 1,
  absdirectbrtarget = 2,
  atimm = 3,
  calltarget = 4,
  condbrtarget = 5,
  crbitm = 6,
  directbrtarget = 7,
  dispRI = 8,
  dispRIX = 9,
  dispRIX16 = 10,
  dispSPE2 = 11,
  dispSPE4 = 12,
  dispSPE8 = 13,
  f32imm = 14,
  f64imm = 15,
  i16imm = 16,
  i1imm = 17,
  i32imm = 18,
  i64imm = 19,
  i8imm = 20,
  imm32SExt16 = 21,
  imm64SExt16 = 22,
  imm64ZExt32 = 23,
  memr = 24,
  memri = 25,
  memrix = 26,
  memrix16 = 27,
  memrr = 28,
  pred = 29,
  ptr_rc_idx = 30,
  ptr_rc_nor0 = 31,
  s16imm = 32,
  s16imm64 = 33,
  s17imm = 34,
  s17imm64 = 35,
  s5imm = 36,
  spe2dis = 37,
  spe4dis = 38,
  spe8dis = 39,
  tlscall = 40,
  tlscall32 = 41,
  tlsgd = 42,
  tlsgd32 = 43,
  tlsreg = 44,
  tlsreg32 = 45,
  tocentry = 46,
  tocentry32 = 47,
  type0 = 48,
  type1 = 49,
  type2 = 50,
  type3 = 51,
  type4 = 52,
  type5 = 53,
  u10imm = 54,
  u12imm = 55,
  u16imm = 56,
  u16imm64 = 57,
  u1imm = 58,
  u2imm = 59,
  u3imm = 60,
  u4imm = 61,
  u5imm = 62,
  u6imm = 63,
  u7imm = 64,
  u8imm = 65,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace PPC {

enum IsVSXFMAAlt {
	IsVSXFMAAlt_1
};

enum RC {
	RC_0,
	RC_1
};

// getAltVSXFMAOpcode
LLVM_READONLY
int getAltVSXFMAOpcode(uint16_t Opcode) {
static const uint16_t getAltVSXFMAOpcodeTable[][2] = {
  { PPC::XSMADDADP, PPC::XSMADDMDP },
  { PPC::XSMADDASP, PPC::XSMADDMSP },
  { PPC::XSMSUBADP, PPC::XSMSUBMDP },
  { PPC::XSMSUBASP, PPC::XSMSUBMSP },
  { PPC::XSNMADDADP, PPC::XSNMADDMDP },
  { PPC::XSNMADDASP, PPC::XSNMADDMSP },
  { PPC::XSNMSUBADP, PPC::XSNMSUBMDP },
  { PPC::XSNMSUBASP, PPC::XSNMSUBMSP },
  { PPC::XVMADDADP, PPC::XVMADDMDP },
  { PPC::XVMADDASP, PPC::XVMADDMSP },
  { PPC::XVMSUBADP, PPC::XVMSUBMDP },
  { PPC::XVMSUBASP, PPC::XVMSUBMSP },
  { PPC::XVNMADDADP, PPC::XVNMADDMDP },
  { PPC::XVNMADDASP, PPC::XVNMADDMSP },
  { PPC::XVNMSUBADP, PPC::XVNMSUBMDP },
  { PPC::XVNMSUBASP, PPC::XVNMSUBMSP },
}; // End of getAltVSXFMAOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 16;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getAltVSXFMAOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getAltVSXFMAOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getAltVSXFMAOpcodeTable[mid][1];
}

// getNonRecordFormOpcode
LLVM_READONLY
int getNonRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getNonRecordFormOpcodeTable[][2] = {
  { PPC::ADD4o, PPC::ADD4 },
  { PPC::ADD8o, PPC::ADD8 },
  { PPC::ADDC8o, PPC::ADDC8 },
  { PPC::ADDCo, PPC::ADDC },
  { PPC::ADDE8o, PPC::ADDE8 },
  { PPC::ADDEo, PPC::ADDE },
  { PPC::ADDICo, PPC::ADDIC },
  { PPC::ADDME8o, PPC::ADDME8 },
  { PPC::ADDMEo, PPC::ADDME },
  { PPC::ADDZE8o, PPC::ADDZE8 },
  { PPC::ADDZEo, PPC::ADDZE },
  { PPC::AND8o, PPC::AND8 },
  { PPC::ANDC8o, PPC::ANDC8 },
  { PPC::ANDCo, PPC::ANDC },
  { PPC::ANDo, PPC::AND },
  { PPC::CNTLZDo, PPC::CNTLZD },
  { PPC::CNTLZW8o, PPC::CNTLZW8 },
  { PPC::CNTLZWo, PPC::CNTLZW },
  { PPC::CNTTZDo, PPC::CNTTZD },
  { PPC::CNTTZW8o, PPC::CNTTZW8 },
  { PPC::CNTTZWo, PPC::CNTTZW },
  { PPC::DIVDUo, PPC::DIVDU },
  { PPC::DIVDo, PPC::DIVD },
  { PPC::DIVWUo, PPC::DIVWU },
  { PPC::DIVWo, PPC::DIVW },
  { PPC::EQV8o, PPC::EQV8 },
  { PPC::EQVo, PPC::EQV },
  { PPC::EXTSB8o, PPC::EXTSB8 },
  { PPC::EXTSBo, PPC::EXTSB },
  { PPC::EXTSH8o, PPC::EXTSH8 },
  { PPC::EXTSHo, PPC::EXTSH },
  { PPC::EXTSW_32_64o, PPC::EXTSW_32_64 },
  { PPC::EXTSWo, PPC::EXTSW },
  { PPC::FABSDo, PPC::FABSD },
  { PPC::FABSSo, PPC::FABSS },
  { PPC::FADDSo, PPC::FADDS },
  { PPC::FADDo, PPC::FADD },
  { PPC::FCFIDSo, PPC::FCFIDS },
  { PPC::FCFIDUSo, PPC::FCFIDUS },
  { PPC::FCFIDUo, PPC::FCFIDU },
  { PPC::FCFIDo, PPC::FCFID },
  { PPC::FCPSGNDo, PPC::FCPSGND },
  { PPC::FCPSGNSo, PPC::FCPSGNS },
  { PPC::FCTIDUZo, PPC::FCTIDUZ },
  { PPC::FCTIDZo, PPC::FCTIDZ },
  { PPC::FCTIDo, PPC::FCTID },
  { PPC::FCTIWUZo, PPC::FCTIWUZ },
  { PPC::FCTIWZo, PPC::FCTIWZ },
  { PPC::FCTIWo, PPC::FCTIW },
  { PPC::FDIVSo, PPC::FDIVS },
  { PPC::FDIVo, PPC::FDIV },
  { PPC::FMADDSo, PPC::FMADDS },
  { PPC::FMADDo, PPC::FMADD },
  { PPC::FMRo, PPC::FMR },
  { PPC::FMSUBSo, PPC::FMSUBS },
  { PPC::FMSUBo, PPC::FMSUB },
  { PPC::FMULSo, PPC::FMULS },
  { PPC::FMULo, PPC::FMUL },
  { PPC::FNABSDo, PPC::FNABSD },
  { PPC::FNABSSo, PPC::FNABSS },
  { PPC::FNEGDo, PPC::FNEGD },
  { PPC::FNEGSo, PPC::FNEGS },
  { PPC::FNMADDSo, PPC::FNMADDS },
  { PPC::FNMADDo, PPC::FNMADD },
  { PPC::FNMSUBSo, PPC::FNMSUBS },
  { PPC::FNMSUBo, PPC::FNMSUB },
  { PPC::FRESo, PPC::FRES },
  { PPC::FREo, PPC::FRE },
  { PPC::FRIMDo, PPC::FRIMD },
  { PPC::FRIMSo, PPC::FRIMS },
  { PPC::FRINDo, PPC::FRIND },
  { PPC::FRINSo, PPC::FRINS },
  { PPC::FRIPDo, PPC::FRIPD },
  { PPC::FRIPSo, PPC::FRIPS },
  { PPC::FRIZDo, PPC::FRIZD },
  { PPC::FRIZSo, PPC::FRIZS },
  { PPC::FRSPo, PPC::FRSP },
  { PPC::FRSQRTESo, PPC::FRSQRTES },
  { PPC::FRSQRTEo, PPC::FRSQRTE },
  { PPC::FSELDo, PPC::FSELD },
  { PPC::FSELSo, PPC::FSELS },
  { PPC::FSQRTSo, PPC::FSQRTS },
  { PPC::FSQRTo, PPC::FSQRT },
  { PPC::FSUBSo, PPC::FSUBS },
  { PPC::FSUBo, PPC::FSUB },
  { PPC::MULHDUo, PPC::MULHDU },
  { PPC::MULHDo, PPC::MULHD },
  { PPC::MULHWUo, PPC::MULHWU },
  { PPC::MULHWo, PPC::MULHW },
  { PPC::MULLDo, PPC::MULLD },
  { PPC::MULLWo, PPC::MULLW },
  { PPC::NAND8o, PPC::NAND8 },
  { PPC::NANDo, PPC::NAND },
  { PPC::NEG8o, PPC::NEG8 },
  { PPC::NEGo, PPC::NEG },
  { PPC::NOR8o, PPC::NOR8 },
  { PPC::NORo, PPC::NOR },
  { PPC::OR8o, PPC::OR8 },
  { PPC::ORC8o, PPC::ORC8 },
  { PPC::ORCo, PPC::ORC },
  { PPC::ORo, PPC::OR },
  { PPC::RLDCLo, PPC::RLDCL },
  { PPC::RLDCRo, PPC::RLDCR },
  { PPC::RLDICLo, PPC::RLDICL },
  { PPC::RLDICRo, PPC::RLDICR },
  { PPC::RLDICo, PPC::RLDIC },
  { PPC::RLDIMIo, PPC::RLDIMI },
  { PPC::RLWIMI8o, PPC::RLWIMI8 },
  { PPC::RLWIMIo, PPC::RLWIMI },
  { PPC::RLWINM8o, PPC::RLWINM8 },
  { PPC::RLWINMo, PPC::RLWINM },
  { PPC::RLWNM8o, PPC::RLWNM8 },
  { PPC::RLWNMo, PPC::RLWNM },
  { PPC::SLDo, PPC::SLD },
  { PPC::SLW8o, PPC::SLW8 },
  { PPC::SLWo, PPC::SLW },
  { PPC::SRADIo, PPC::SRADI },
  { PPC::SRADo, PPC::SRAD },
  { PPC::SRAWIo, PPC::SRAWI },
  { PPC::SRAWo, PPC::SRAW },
  { PPC::SRDo, PPC::SRD },
  { PPC::SRW8o, PPC::SRW8 },
  { PPC::SRWo, PPC::SRW },
  { PPC::SUBF8o, PPC::SUBF8 },
  { PPC::SUBFC8o, PPC::SUBFC8 },
  { PPC::SUBFCo, PPC::SUBFC },
  { PPC::SUBFE8o, PPC::SUBFE8 },
  { PPC::SUBFEo, PPC::SUBFE },
  { PPC::SUBFME8o, PPC::SUBFME8 },
  { PPC::SUBFMEo, PPC::SUBFME },
  { PPC::SUBFZE8o, PPC::SUBFZE8 },
  { PPC::SUBFZEo, PPC::SUBFZE },
  { PPC::SUBFo, PPC::SUBF },
  { PPC::XOR8o, PPC::XOR8 },
  { PPC::XORo, PPC::XOR },
}; // End of getNonRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 135;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getNonRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNonRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonRecordFormOpcodeTable[mid][1];
}

// getRecordFormOpcode
LLVM_READONLY
int getRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getRecordFormOpcodeTable[][2] = {
  { PPC::ADD4, PPC::ADD4o },
  { PPC::ADD8, PPC::ADD8o },
  { PPC::ADDC, PPC::ADDCo },
  { PPC::ADDC8, PPC::ADDC8o },
  { PPC::ADDE, PPC::ADDEo },
  { PPC::ADDE8, PPC::ADDE8o },
  { PPC::ADDIC, PPC::ADDICo },
  { PPC::ADDME, PPC::ADDMEo },
  { PPC::ADDME8, PPC::ADDME8o },
  { PPC::ADDZE, PPC::ADDZEo },
  { PPC::ADDZE8, PPC::ADDZE8o },
  { PPC::AND, PPC::ANDo },
  { PPC::AND8, PPC::AND8o },
  { PPC::ANDC, PPC::ANDCo },
  { PPC::ANDC8, PPC::ANDC8o },
  { PPC::CNTLZD, PPC::CNTLZDo },
  { PPC::CNTLZW, PPC::CNTLZWo },
  { PPC::CNTLZW8, PPC::CNTLZW8o },
  { PPC::CNTTZD, PPC::CNTTZDo },
  { PPC::CNTTZW, PPC::CNTTZWo },
  { PPC::CNTTZW8, PPC::CNTTZW8o },
  { PPC::DIVD, PPC::DIVDo },
  { PPC::DIVDU, PPC::DIVDUo },
  { PPC::DIVW, PPC::DIVWo },
  { PPC::DIVWU, PPC::DIVWUo },
  { PPC::EQV, PPC::EQVo },
  { PPC::EQV8, PPC::EQV8o },
  { PPC::EXTSB, PPC::EXTSBo },
  { PPC::EXTSB8, PPC::EXTSB8o },
  { PPC::EXTSH, PPC::EXTSHo },
  { PPC::EXTSH8, PPC::EXTSH8o },
  { PPC::EXTSW, PPC::EXTSWo },
  { PPC::EXTSW_32_64, PPC::EXTSW_32_64o },
  { PPC::FABSD, PPC::FABSDo },
  { PPC::FABSS, PPC::FABSSo },
  { PPC::FADD, PPC::FADDo },
  { PPC::FADDS, PPC::FADDSo },
  { PPC::FCFID, PPC::FCFIDo },
  { PPC::FCFIDS, PPC::FCFIDSo },
  { PPC::FCFIDU, PPC::FCFIDUo },
  { PPC::FCFIDUS, PPC::FCFIDUSo },
  { PPC::FCPSGND, PPC::FCPSGNDo },
  { PPC::FCPSGNS, PPC::FCPSGNSo },
  { PPC::FCTID, PPC::FCTIDo },
  { PPC::FCTIDUZ, PPC::FCTIDUZo },
  { PPC::FCTIDZ, PPC::FCTIDZo },
  { PPC::FCTIW, PPC::FCTIWo },
  { PPC::FCTIWUZ, PPC::FCTIWUZo },
  { PPC::FCTIWZ, PPC::FCTIWZo },
  { PPC::FDIV, PPC::FDIVo },
  { PPC::FDIVS, PPC::FDIVSo },
  { PPC::FMADD, PPC::FMADDo },
  { PPC::FMADDS, PPC::FMADDSo },
  { PPC::FMR, PPC::FMRo },
  { PPC::FMSUB, PPC::FMSUBo },
  { PPC::FMSUBS, PPC::FMSUBSo },
  { PPC::FMUL, PPC::FMULo },
  { PPC::FMULS, PPC::FMULSo },
  { PPC::FNABSD, PPC::FNABSDo },
  { PPC::FNABSS, PPC::FNABSSo },
  { PPC::FNEGD, PPC::FNEGDo },
  { PPC::FNEGS, PPC::FNEGSo },
  { PPC::FNMADD, PPC::FNMADDo },
  { PPC::FNMADDS, PPC::FNMADDSo },
  { PPC::FNMSUB, PPC::FNMSUBo },
  { PPC::FNMSUBS, PPC::FNMSUBSo },
  { PPC::FRE, PPC::FREo },
  { PPC::FRES, PPC::FRESo },
  { PPC::FRIMD, PPC::FRIMDo },
  { PPC::FRIMS, PPC::FRIMSo },
  { PPC::FRIND, PPC::FRINDo },
  { PPC::FRINS, PPC::FRINSo },
  { PPC::FRIPD, PPC::FRIPDo },
  { PPC::FRIPS, PPC::FRIPSo },
  { PPC::FRIZD, PPC::FRIZDo },
  { PPC::FRIZS, PPC::FRIZSo },
  { PPC::FRSP, PPC::FRSPo },
  { PPC::FRSQRTE, PPC::FRSQRTEo },
  { PPC::FRSQRTES, PPC::FRSQRTESo },
  { PPC::FSELD, PPC::FSELDo },
  { PPC::FSELS, PPC::FSELSo },
  { PPC::FSQRT, PPC::FSQRTo },
  { PPC::FSQRTS, PPC::FSQRTSo },
  { PPC::FSUB, PPC::FSUBo },
  { PPC::FSUBS, PPC::FSUBSo },
  { PPC::MULHD, PPC::MULHDo },
  { PPC::MULHDU, PPC::MULHDUo },
  { PPC::MULHW, PPC::MULHWo },
  { PPC::MULHWU, PPC::MULHWUo },
  { PPC::MULLD, PPC::MULLDo },
  { PPC::MULLW, PPC::MULLWo },
  { PPC::NAND, PPC::NANDo },
  { PPC::NAND8, PPC::NAND8o },
  { PPC::NEG, PPC::NEGo },
  { PPC::NEG8, PPC::NEG8o },
  { PPC::NOR, PPC::NORo },
  { PPC::NOR8, PPC::NOR8o },
  { PPC::OR, PPC::ORo },
  { PPC::OR8, PPC::OR8o },
  { PPC::ORC, PPC::ORCo },
  { PPC::ORC8, PPC::ORC8o },
  { PPC::RLDCL, PPC::RLDCLo },
  { PPC::RLDCR, PPC::RLDCRo },
  { PPC::RLDIC, PPC::RLDICo },
  { PPC::RLDICL, PPC::RLDICLo },
  { PPC::RLDICR, PPC::RLDICRo },
  { PPC::RLDIMI, PPC::RLDIMIo },
  { PPC::RLWIMI, PPC::RLWIMIo },
  { PPC::RLWIMI8, PPC::RLWIMI8o },
  { PPC::RLWINM, PPC::RLWINMo },
  { PPC::RLWINM8, PPC::RLWINM8o },
  { PPC::RLWNM, PPC::RLWNMo },
  { PPC::RLWNM8, PPC::RLWNM8o },
  { PPC::SLD, PPC::SLDo },
  { PPC::SLW, PPC::SLWo },
  { PPC::SLW8, PPC::SLW8o },
  { PPC::SRAD, PPC::SRADo },
  { PPC::SRADI, PPC::SRADIo },
  { PPC::SRAW, PPC::SRAWo },
  { PPC::SRAWI, PPC::SRAWIo },
  { PPC::SRD, PPC::SRDo },
  { PPC::SRW, PPC::SRWo },
  { PPC::SRW8, PPC::SRW8o },
  { PPC::SUBF, PPC::SUBFo },
  { PPC::SUBF8, PPC::SUBF8o },
  { PPC::SUBFC, PPC::SUBFCo },
  { PPC::SUBFC8, PPC::SUBFC8o },
  { PPC::SUBFE, PPC::SUBFEo },
  { PPC::SUBFE8, PPC::SUBFE8o },
  { PPC::SUBFME, PPC::SUBFMEo },
  { PPC::SUBFME8, PPC::SUBFME8o },
  { PPC::SUBFZE, PPC::SUBFZEo },
  { PPC::SUBFZE8, PPC::SUBFZE8o },
  { PPC::XOR, PPC::XORo },
  { PPC::XOR8, PPC::XOR8o },
}; // End of getRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 135;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRecordFormOpcodeTable[mid][1];
}

} // End PPC namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

