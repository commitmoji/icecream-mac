/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    FENTRY_CALL	= 18,
    PATCHPOINT	= 19,
    LOAD_STACK_GUARD	= 20,
    STATEPOINT	= 21,
    LOCAL_ESCAPE	= 22,
    FAULTING_OP	= 23,
    PATCHABLE_OP	= 24,
    PATCHABLE_FUNCTION_ENTER	= 25,
    PATCHABLE_RET	= 26,
    PATCHABLE_FUNCTION_EXIT	= 27,
    PATCHABLE_TAIL_CALL	= 28,
    PATCHABLE_EVENT_CALL	= 29,
    G_ADD	= 30,
    G_SUB	= 31,
    G_MUL	= 32,
    G_SDIV	= 33,
    G_UDIV	= 34,
    G_SREM	= 35,
    G_UREM	= 36,
    G_AND	= 37,
    G_OR	= 38,
    G_XOR	= 39,
    G_FRAME_INDEX	= 40,
    G_GLOBAL_VALUE	= 41,
    G_EXTRACT	= 42,
    G_UNMERGE_VALUES	= 43,
    G_INSERT	= 44,
    G_SEQUENCE	= 45,
    G_MERGE_VALUES	= 46,
    G_PTRTOINT	= 47,
    G_INTTOPTR	= 48,
    G_BITCAST	= 49,
    G_LOAD	= 50,
    G_STORE	= 51,
    G_BRCOND	= 52,
    G_BRINDIRECT	= 53,
    G_INTRINSIC	= 54,
    G_INTRINSIC_W_SIDE_EFFECTS	= 55,
    G_ANYEXT	= 56,
    G_TRUNC	= 57,
    G_CONSTANT	= 58,
    G_FCONSTANT	= 59,
    G_VASTART	= 60,
    G_VAARG	= 61,
    G_SEXT	= 62,
    G_ZEXT	= 63,
    G_SHL	= 64,
    G_LSHR	= 65,
    G_ASHR	= 66,
    G_ICMP	= 67,
    G_FCMP	= 68,
    G_SELECT	= 69,
    G_UADDE	= 70,
    G_USUBE	= 71,
    G_SADDO	= 72,
    G_SSUBO	= 73,
    G_UMULO	= 74,
    G_SMULO	= 75,
    G_UMULH	= 76,
    G_SMULH	= 77,
    G_FADD	= 78,
    G_FSUB	= 79,
    G_FMUL	= 80,
    G_FDIV	= 81,
    G_FREM	= 82,
    G_FPOW	= 83,
    G_FNEG	= 84,
    G_FPEXT	= 85,
    G_FPTRUNC	= 86,
    G_FPTOSI	= 87,
    G_FPTOUI	= 88,
    G_SITOFP	= 89,
    G_UITOFP	= 90,
    G_GEP	= 91,
    G_PTR_MASK	= 92,
    G_BR	= 93,
    G_INSERT_VECTOR_ELT	= 94,
    G_EXTRACT_VECTOR_ELT	= 95,
    G_SHUFFLE_VECTOR	= 96,
    ADD4	= 97,
    ADD4TLS	= 98,
    ADD4o	= 99,
    ADD8	= 100,
    ADD8TLS	= 101,
    ADD8TLS_	= 102,
    ADD8o	= 103,
    ADDC	= 104,
    ADDC8	= 105,
    ADDC8o	= 106,
    ADDCo	= 107,
    ADDE	= 108,
    ADDE8	= 109,
    ADDE8o	= 110,
    ADDEo	= 111,
    ADDI	= 112,
    ADDI8	= 113,
    ADDIC	= 114,
    ADDIC8	= 115,
    ADDICo	= 116,
    ADDIS	= 117,
    ADDIS8	= 118,
    ADDISdtprelHA	= 119,
    ADDISdtprelHA32	= 120,
    ADDISgotTprelHA	= 121,
    ADDIStlsgdHA	= 122,
    ADDIStlsldHA	= 123,
    ADDIStocHA	= 124,
    ADDIdtprelL	= 125,
    ADDIdtprelL32	= 126,
    ADDItlsgdL	= 127,
    ADDItlsgdL32	= 128,
    ADDItlsgdLADDR	= 129,
    ADDItlsgdLADDR32	= 130,
    ADDItlsldL	= 131,
    ADDItlsldL32	= 132,
    ADDItlsldLADDR	= 133,
    ADDItlsldLADDR32	= 134,
    ADDItocL	= 135,
    ADDME	= 136,
    ADDME8	= 137,
    ADDME8o	= 138,
    ADDMEo	= 139,
    ADDZE	= 140,
    ADDZE8	= 141,
    ADDZE8o	= 142,
    ADDZEo	= 143,
    ADJCALLSTACKDOWN	= 144,
    ADJCALLSTACKUP	= 145,
    AND	= 146,
    AND8	= 147,
    AND8o	= 148,
    ANDC	= 149,
    ANDC8	= 150,
    ANDC8o	= 151,
    ANDCo	= 152,
    ANDISo	= 153,
    ANDISo8	= 154,
    ANDIo	= 155,
    ANDIo8	= 156,
    ANDIo_1_EQ_BIT	= 157,
    ANDIo_1_EQ_BIT8	= 158,
    ANDIo_1_GT_BIT	= 159,
    ANDIo_1_GT_BIT8	= 160,
    ANDo	= 161,
    ATOMIC_CMP_SWAP_I16	= 162,
    ATOMIC_CMP_SWAP_I32	= 163,
    ATOMIC_CMP_SWAP_I64	= 164,
    ATOMIC_CMP_SWAP_I8	= 165,
    ATOMIC_LOAD_ADD_I16	= 166,
    ATOMIC_LOAD_ADD_I32	= 167,
    ATOMIC_LOAD_ADD_I64	= 168,
    ATOMIC_LOAD_ADD_I8	= 169,
    ATOMIC_LOAD_AND_I16	= 170,
    ATOMIC_LOAD_AND_I32	= 171,
    ATOMIC_LOAD_AND_I64	= 172,
    ATOMIC_LOAD_AND_I8	= 173,
    ATOMIC_LOAD_MAX_I16	= 174,
    ATOMIC_LOAD_MAX_I32	= 175,
    ATOMIC_LOAD_MAX_I64	= 176,
    ATOMIC_LOAD_MAX_I8	= 177,
    ATOMIC_LOAD_MIN_I16	= 178,
    ATOMIC_LOAD_MIN_I32	= 179,
    ATOMIC_LOAD_MIN_I64	= 180,
    ATOMIC_LOAD_MIN_I8	= 181,
    ATOMIC_LOAD_NAND_I16	= 182,
    ATOMIC_LOAD_NAND_I32	= 183,
    ATOMIC_LOAD_NAND_I64	= 184,
    ATOMIC_LOAD_NAND_I8	= 185,
    ATOMIC_LOAD_OR_I16	= 186,
    ATOMIC_LOAD_OR_I32	= 187,
    ATOMIC_LOAD_OR_I64	= 188,
    ATOMIC_LOAD_OR_I8	= 189,
    ATOMIC_LOAD_SUB_I16	= 190,
    ATOMIC_LOAD_SUB_I32	= 191,
    ATOMIC_LOAD_SUB_I64	= 192,
    ATOMIC_LOAD_SUB_I8	= 193,
    ATOMIC_LOAD_UMAX_I16	= 194,
    ATOMIC_LOAD_UMAX_I32	= 195,
    ATOMIC_LOAD_UMAX_I64	= 196,
    ATOMIC_LOAD_UMAX_I8	= 197,
    ATOMIC_LOAD_UMIN_I16	= 198,
    ATOMIC_LOAD_UMIN_I32	= 199,
    ATOMIC_LOAD_UMIN_I64	= 200,
    ATOMIC_LOAD_UMIN_I8	= 201,
    ATOMIC_LOAD_XOR_I16	= 202,
    ATOMIC_LOAD_XOR_I32	= 203,
    ATOMIC_LOAD_XOR_I64	= 204,
    ATOMIC_LOAD_XOR_I8	= 205,
    ATOMIC_SWAP_I16	= 206,
    ATOMIC_SWAP_I32	= 207,
    ATOMIC_SWAP_I64	= 208,
    ATOMIC_SWAP_I8	= 209,
    ATTN	= 210,
    B	= 211,
    BA	= 212,
    BC	= 213,
    BCC	= 214,
    BCCA	= 215,
    BCCCTR	= 216,
    BCCCTR8	= 217,
    BCCCTRL	= 218,
    BCCCTRL8	= 219,
    BCCL	= 220,
    BCCLA	= 221,
    BCCLR	= 222,
    BCCLRL	= 223,
    BCCTR	= 224,
    BCCTR8	= 225,
    BCCTR8n	= 226,
    BCCTRL	= 227,
    BCCTRL8	= 228,
    BCCTRL8n	= 229,
    BCCTRLn	= 230,
    BCCTRn	= 231,
    BCDCFNo	= 232,
    BCDCFSQo	= 233,
    BCDCFZo	= 234,
    BCDCPSGNo	= 235,
    BCDCTNo	= 236,
    BCDCTSQo	= 237,
    BCDCTZo	= 238,
    BCDSETSGNo	= 239,
    BCDSRo	= 240,
    BCDSo	= 241,
    BCDTRUNCo	= 242,
    BCDUSo	= 243,
    BCDUTRUNCo	= 244,
    BCL	= 245,
    BCLR	= 246,
    BCLRL	= 247,
    BCLRLn	= 248,
    BCLRn	= 249,
    BCLalways	= 250,
    BCLn	= 251,
    BCTR	= 252,
    BCTR8	= 253,
    BCTRL	= 254,
    BCTRL8	= 255,
    BCTRL8_LDinto_toc	= 256,
    BCn	= 257,
    BDNZ	= 258,
    BDNZ8	= 259,
    BDNZA	= 260,
    BDNZAm	= 261,
    BDNZAp	= 262,
    BDNZL	= 263,
    BDNZLA	= 264,
    BDNZLAm	= 265,
    BDNZLAp	= 266,
    BDNZLR	= 267,
    BDNZLR8	= 268,
    BDNZLRL	= 269,
    BDNZLRLm	= 270,
    BDNZLRLp	= 271,
    BDNZLRm	= 272,
    BDNZLRp	= 273,
    BDNZLm	= 274,
    BDNZLp	= 275,
    BDNZm	= 276,
    BDNZp	= 277,
    BDZ	= 278,
    BDZ8	= 279,
    BDZA	= 280,
    BDZAm	= 281,
    BDZAp	= 282,
    BDZL	= 283,
    BDZLA	= 284,
    BDZLAm	= 285,
    BDZLAp	= 286,
    BDZLR	= 287,
    BDZLR8	= 288,
    BDZLRL	= 289,
    BDZLRLm	= 290,
    BDZLRLp	= 291,
    BDZLRm	= 292,
    BDZLRp	= 293,
    BDZLm	= 294,
    BDZLp	= 295,
    BDZm	= 296,
    BDZp	= 297,
    BL	= 298,
    BL8	= 299,
    BL8_NOP	= 300,
    BL8_NOP_TLS	= 301,
    BL8_TLS	= 302,
    BL8_TLS_	= 303,
    BLA	= 304,
    BLA8	= 305,
    BLA8_NOP	= 306,
    BLR	= 307,
    BLR8	= 308,
    BLRL	= 309,
    BL_TLS	= 310,
    BPERMD	= 311,
    BRINC	= 312,
    CFENCE8	= 313,
    CLRBHRB	= 314,
    CLRLSLDI	= 315,
    CLRLSLDIo	= 316,
    CLRLSLWI	= 317,
    CLRLSLWIo	= 318,
    CLRRDI	= 319,
    CLRRDIo	= 320,
    CLRRWI	= 321,
    CLRRWIo	= 322,
    CMPB	= 323,
    CMPB8	= 324,
    CMPD	= 325,
    CMPDI	= 326,
    CMPEQB	= 327,
    CMPLD	= 328,
    CMPLDI	= 329,
    CMPLW	= 330,
    CMPLWI	= 331,
    CMPRB	= 332,
    CMPRB8	= 333,
    CMPW	= 334,
    CMPWI	= 335,
    CNTLZD	= 336,
    CNTLZDo	= 337,
    CNTLZW	= 338,
    CNTLZW8	= 339,
    CNTLZW8o	= 340,
    CNTLZWo	= 341,
    CNTTZD	= 342,
    CNTTZDo	= 343,
    CNTTZW	= 344,
    CNTTZW8	= 345,
    CNTTZW8o	= 346,
    CNTTZWo	= 347,
    CP_ABORT	= 348,
    CP_COPY	= 349,
    CP_COPY8	= 350,
    CP_COPY_FIRST	= 351,
    CP_COPYx	= 352,
    CP_PASTE	= 353,
    CP_PASTE8	= 354,
    CP_PASTE8o	= 355,
    CP_PASTE_LAST	= 356,
    CP_PASTEo	= 357,
    CP_PASTEx	= 358,
    CR6SET	= 359,
    CR6UNSET	= 360,
    CRAND	= 361,
    CRANDC	= 362,
    CREQV	= 363,
    CRNAND	= 364,
    CRNOR	= 365,
    CROR	= 366,
    CRORC	= 367,
    CRSET	= 368,
    CRUNSET	= 369,
    CRXOR	= 370,
    CTRL_DEP	= 371,
    DCBA	= 372,
    DCBF	= 373,
    DCBFL	= 374,
    DCBFLP	= 375,
    DCBFx	= 376,
    DCBI	= 377,
    DCBST	= 378,
    DCBT	= 379,
    DCBTCT	= 380,
    DCBTDS	= 381,
    DCBTST	= 382,
    DCBTSTCT	= 383,
    DCBTSTDS	= 384,
    DCBTSTT	= 385,
    DCBTSTx	= 386,
    DCBTT	= 387,
    DCBTx	= 388,
    DCBZ	= 389,
    DCBZL	= 390,
    DCCCI	= 391,
    DFLOADf32	= 392,
    DFLOADf64	= 393,
    DFSTOREf32	= 394,
    DFSTOREf64	= 395,
    DIVD	= 396,
    DIVDE	= 397,
    DIVDEU	= 398,
    DIVDEUo	= 399,
    DIVDEo	= 400,
    DIVDU	= 401,
    DIVDUo	= 402,
    DIVDo	= 403,
    DIVW	= 404,
    DIVWE	= 405,
    DIVWEU	= 406,
    DIVWEUo	= 407,
    DIVWEo	= 408,
    DIVWU	= 409,
    DIVWUo	= 410,
    DIVWo	= 411,
    DSS	= 412,
    DSSALL	= 413,
    DST	= 414,
    DST64	= 415,
    DSTST	= 416,
    DSTST64	= 417,
    DSTSTT	= 418,
    DSTSTT64	= 419,
    DSTT	= 420,
    DSTT64	= 421,
    DYNALLOC	= 422,
    DYNALLOC8	= 423,
    DYNAREAOFFSET	= 424,
    DYNAREAOFFSET8	= 425,
    EH_SjLj_LongJmp32	= 426,
    EH_SjLj_LongJmp64	= 427,
    EH_SjLj_SetJmp32	= 428,
    EH_SjLj_SetJmp64	= 429,
    EH_SjLj_Setup	= 430,
    EQV	= 431,
    EQV8	= 432,
    EQV8o	= 433,
    EQVo	= 434,
    EVABS	= 435,
    EVADDIW	= 436,
    EVADDSMIAAW	= 437,
    EVADDSSIAAW	= 438,
    EVADDUMIAAW	= 439,
    EVADDUSIAAW	= 440,
    EVADDW	= 441,
    EVAND	= 442,
    EVANDC	= 443,
    EVCMPEQ	= 444,
    EVCMPGTS	= 445,
    EVCMPGTU	= 446,
    EVCMPLTS	= 447,
    EVCMPLTU	= 448,
    EVCNTLSW	= 449,
    EVCNTLZW	= 450,
    EVDIVWS	= 451,
    EVDIVWU	= 452,
    EVEQV	= 453,
    EVEXTSB	= 454,
    EVEXTSH	= 455,
    EVLDD	= 456,
    EVLDDX	= 457,
    EVLDH	= 458,
    EVLDHX	= 459,
    EVLDW	= 460,
    EVLDWX	= 461,
    EVLHHESPLAT	= 462,
    EVLHHESPLATX	= 463,
    EVLHHOSSPLAT	= 464,
    EVLHHOSSPLATX	= 465,
    EVLHHOUSPLAT	= 466,
    EVLHHOUSPLATX	= 467,
    EVLWHE	= 468,
    EVLWHEX	= 469,
    EVLWHOS	= 470,
    EVLWHOSX	= 471,
    EVLWHOU	= 472,
    EVLWHOUX	= 473,
    EVLWHSPLAT	= 474,
    EVLWHSPLATX	= 475,
    EVLWWSPLAT	= 476,
    EVLWWSPLATX	= 477,
    EVMERGEHI	= 478,
    EVMERGEHILO	= 479,
    EVMERGELO	= 480,
    EVMERGELOHI	= 481,
    EVMHEGSMFAA	= 482,
    EVMHEGSMFAN	= 483,
    EVMHEGSMIAA	= 484,
    EVMHEGSMIAN	= 485,
    EVMHEGUMIAA	= 486,
    EVMHEGUMIAN	= 487,
    EVMHESMF	= 488,
    EVMHESMFA	= 489,
    EVMHESMFAAW	= 490,
    EVMHESMFANW	= 491,
    EVMHESMI	= 492,
    EVMHESMIA	= 493,
    EVMHESMIAAW	= 494,
    EVMHESMIANW	= 495,
    EVMHESSF	= 496,
    EVMHESSFA	= 497,
    EVMHESSFAAW	= 498,
    EVMHESSFANW	= 499,
    EVMHESSIAAW	= 500,
    EVMHESSIANW	= 501,
    EVMHEUMI	= 502,
    EVMHEUMIA	= 503,
    EVMHEUMIAAW	= 504,
    EVMHEUMIANW	= 505,
    EVMHEUSIAAW	= 506,
    EVMHEUSIANW	= 507,
    EVMHOGSMFAA	= 508,
    EVMHOGSMFAN	= 509,
    EVMHOGSMIAA	= 510,
    EVMHOGSMIAN	= 511,
    EVMHOGUMIAA	= 512,
    EVMHOGUMIAN	= 513,
    EVMHOSMF	= 514,
    EVMHOSMFA	= 515,
    EVMHOSMFAAW	= 516,
    EVMHOSMFANW	= 517,
    EVMHOSMI	= 518,
    EVMHOSMIA	= 519,
    EVMHOSMIAAW	= 520,
    EVMHOSMIANW	= 521,
    EVMHOSSF	= 522,
    EVMHOSSFA	= 523,
    EVMHOSSFAAW	= 524,
    EVMHOSSFANW	= 525,
    EVMHOSSIAAW	= 526,
    EVMHOSSIANW	= 527,
    EVMHOUMI	= 528,
    EVMHOUMIA	= 529,
    EVMHOUMIAAW	= 530,
    EVMHOUMIANW	= 531,
    EVMHOUSIAAW	= 532,
    EVMHOUSIANW	= 533,
    EVMRA	= 534,
    EVMWHSMF	= 535,
    EVMWHSMFA	= 536,
    EVMWHSMI	= 537,
    EVMWHSMIA	= 538,
    EVMWHSSF	= 539,
    EVMWHSSFA	= 540,
    EVMWHUMI	= 541,
    EVMWHUMIA	= 542,
    EVMWLSMIAAW	= 543,
    EVMWLSMIANW	= 544,
    EVMWLSSIAAW	= 545,
    EVMWLSSIANW	= 546,
    EVMWLUMI	= 547,
    EVMWLUMIA	= 548,
    EVMWLUMIAAW	= 549,
    EVMWLUMIANW	= 550,
    EVMWLUSIAAW	= 551,
    EVMWLUSIANW	= 552,
    EVMWSMF	= 553,
    EVMWSMFA	= 554,
    EVMWSMFAA	= 555,
    EVMWSMFAN	= 556,
    EVMWSMI	= 557,
    EVMWSMIA	= 558,
    EVMWSMIAA	= 559,
    EVMWSMIAN	= 560,
    EVMWSSF	= 561,
    EVMWSSFA	= 562,
    EVMWSSFAA	= 563,
    EVMWSSFAN	= 564,
    EVMWUMI	= 565,
    EVMWUMIA	= 566,
    EVMWUMIAA	= 567,
    EVMWUMIAN	= 568,
    EVNAND	= 569,
    EVNEG	= 570,
    EVNOR	= 571,
    EVOR	= 572,
    EVORC	= 573,
    EVRLW	= 574,
    EVRLWI	= 575,
    EVRNDW	= 576,
    EVSLW	= 577,
    EVSLWI	= 578,
    EVSPLATFI	= 579,
    EVSPLATI	= 580,
    EVSRWIS	= 581,
    EVSRWIU	= 582,
    EVSRWS	= 583,
    EVSRWU	= 584,
    EVSTDD	= 585,
    EVSTDDX	= 586,
    EVSTDH	= 587,
    EVSTDHX	= 588,
    EVSTDW	= 589,
    EVSTDWX	= 590,
    EVSTWHE	= 591,
    EVSTWHEX	= 592,
    EVSTWHO	= 593,
    EVSTWHOX	= 594,
    EVSTWWE	= 595,
    EVSTWWEX	= 596,
    EVSTWWO	= 597,
    EVSTWWOX	= 598,
    EVSUBFSMIAAW	= 599,
    EVSUBFSSIAAW	= 600,
    EVSUBFUMIAAW	= 601,
    EVSUBFUSIAAW	= 602,
    EVSUBFW	= 603,
    EVSUBIFW	= 604,
    EVXOR	= 605,
    EXTLDI	= 606,
    EXTLDIo	= 607,
    EXTLWI	= 608,
    EXTLWIo	= 609,
    EXTRDI	= 610,
    EXTRDIo	= 611,
    EXTRWI	= 612,
    EXTRWIo	= 613,
    EXTSB	= 614,
    EXTSB8	= 615,
    EXTSB8_32_64	= 616,
    EXTSB8o	= 617,
    EXTSBo	= 618,
    EXTSH	= 619,
    EXTSH8	= 620,
    EXTSH8_32_64	= 621,
    EXTSH8o	= 622,
    EXTSHo	= 623,
    EXTSW	= 624,
    EXTSW_32	= 625,
    EXTSW_32_64	= 626,
    EXTSW_32_64o	= 627,
    EXTSWo	= 628,
    EnforceIEIO	= 629,
    FABSD	= 630,
    FABSDo	= 631,
    FABSS	= 632,
    FABSSo	= 633,
    FADD	= 634,
    FADDS	= 635,
    FADDSo	= 636,
    FADDo	= 637,
    FADDrtz	= 638,
    FCFID	= 639,
    FCFIDS	= 640,
    FCFIDSo	= 641,
    FCFIDU	= 642,
    FCFIDUS	= 643,
    FCFIDUSo	= 644,
    FCFIDUo	= 645,
    FCFIDo	= 646,
    FCMPUD	= 647,
    FCMPUS	= 648,
    FCPSGND	= 649,
    FCPSGNDo	= 650,
    FCPSGNS	= 651,
    FCPSGNSo	= 652,
    FCTID	= 653,
    FCTIDU	= 654,
    FCTIDUZ	= 655,
    FCTIDUZo	= 656,
    FCTIDUo	= 657,
    FCTIDZ	= 658,
    FCTIDZo	= 659,
    FCTIDo	= 660,
    FCTIW	= 661,
    FCTIWU	= 662,
    FCTIWUZ	= 663,
    FCTIWUZo	= 664,
    FCTIWUo	= 665,
    FCTIWZ	= 666,
    FCTIWZo	= 667,
    FCTIWo	= 668,
    FDIV	= 669,
    FDIVS	= 670,
    FDIVSo	= 671,
    FDIVo	= 672,
    FMADD	= 673,
    FMADDS	= 674,
    FMADDSo	= 675,
    FMADDo	= 676,
    FMR	= 677,
    FMRo	= 678,
    FMSUB	= 679,
    FMSUBS	= 680,
    FMSUBSo	= 681,
    FMSUBo	= 682,
    FMUL	= 683,
    FMULS	= 684,
    FMULSo	= 685,
    FMULo	= 686,
    FNABSD	= 687,
    FNABSDo	= 688,
    FNABSS	= 689,
    FNABSSo	= 690,
    FNEGD	= 691,
    FNEGDo	= 692,
    FNEGS	= 693,
    FNEGSo	= 694,
    FNMADD	= 695,
    FNMADDS	= 696,
    FNMADDSo	= 697,
    FNMADDo	= 698,
    FNMSUB	= 699,
    FNMSUBS	= 700,
    FNMSUBSo	= 701,
    FNMSUBo	= 702,
    FRE	= 703,
    FRES	= 704,
    FRESo	= 705,
    FREo	= 706,
    FRIMD	= 707,
    FRIMDo	= 708,
    FRIMS	= 709,
    FRIMSo	= 710,
    FRIND	= 711,
    FRINDo	= 712,
    FRINS	= 713,
    FRINSo	= 714,
    FRIPD	= 715,
    FRIPDo	= 716,
    FRIPS	= 717,
    FRIPSo	= 718,
    FRIZD	= 719,
    FRIZDo	= 720,
    FRIZS	= 721,
    FRIZSo	= 722,
    FRSP	= 723,
    FRSPo	= 724,
    FRSQRTE	= 725,
    FRSQRTES	= 726,
    FRSQRTESo	= 727,
    FRSQRTEo	= 728,
    FSELD	= 729,
    FSELDo	= 730,
    FSELS	= 731,
    FSELSo	= 732,
    FSQRT	= 733,
    FSQRTS	= 734,
    FSQRTSo	= 735,
    FSQRTo	= 736,
    FSUB	= 737,
    FSUBS	= 738,
    FSUBSo	= 739,
    FSUBo	= 740,
    FTDIV	= 741,
    FTSQRT	= 742,
    GETtlsADDR	= 743,
    GETtlsADDR32	= 744,
    GETtlsldADDR	= 745,
    GETtlsldADDR32	= 746,
    HRFID	= 747,
    ICBI	= 748,
    ICBLC	= 749,
    ICBLQ	= 750,
    ICBT	= 751,
    ICBTLS	= 752,
    ICCCI	= 753,
    INSLWI	= 754,
    INSLWIo	= 755,
    INSRDI	= 756,
    INSRDIo	= 757,
    INSRWI	= 758,
    INSRWIo	= 759,
    ISEL	= 760,
    ISEL8	= 761,
    ISYNC	= 762,
    LA	= 763,
    LAx	= 764,
    LBARX	= 765,
    LBARXL	= 766,
    LBZ	= 767,
    LBZ8	= 768,
    LBZCIX	= 769,
    LBZU	= 770,
    LBZU8	= 771,
    LBZUX	= 772,
    LBZUX8	= 773,
    LBZX	= 774,
    LBZX8	= 775,
    LD	= 776,
    LDARX	= 777,
    LDARXL	= 778,
    LDAT	= 779,
    LDBRX	= 780,
    LDCIX	= 781,
    LDMX	= 782,
    LDU	= 783,
    LDUX	= 784,
    LDX	= 785,
    LDgotTprelL	= 786,
    LDgotTprelL32	= 787,
    LDtoc	= 788,
    LDtocBA	= 789,
    LDtocCPT	= 790,
    LDtocJTI	= 791,
    LDtocL	= 792,
    LFD	= 793,
    LFDU	= 794,
    LFDUX	= 795,
    LFDX	= 796,
    LFIWAX	= 797,
    LFIWZX	= 798,
    LFS	= 799,
    LFSU	= 800,
    LFSUX	= 801,
    LFSX	= 802,
    LHA	= 803,
    LHA8	= 804,
    LHARX	= 805,
    LHARXL	= 806,
    LHAU	= 807,
    LHAU8	= 808,
    LHAUX	= 809,
    LHAUX8	= 810,
    LHAX	= 811,
    LHAX8	= 812,
    LHBRX	= 813,
    LHBRX8	= 814,
    LHZ	= 815,
    LHZ8	= 816,
    LHZCIX	= 817,
    LHZU	= 818,
    LHZU8	= 819,
    LHZUX	= 820,
    LHZUX8	= 821,
    LHZX	= 822,
    LHZX8	= 823,
    LI	= 824,
    LI8	= 825,
    LIS	= 826,
    LIS8	= 827,
    LMW	= 828,
    LSWI	= 829,
    LVEBX	= 830,
    LVEHX	= 831,
    LVEWX	= 832,
    LVSL	= 833,
    LVSR	= 834,
    LVX	= 835,
    LVXL	= 836,
    LWA	= 837,
    LWARX	= 838,
    LWARXL	= 839,
    LWAT	= 840,
    LWAUX	= 841,
    LWAX	= 842,
    LWAX_32	= 843,
    LWA_32	= 844,
    LWBRX	= 845,
    LWBRX8	= 846,
    LWZ	= 847,
    LWZ8	= 848,
    LWZCIX	= 849,
    LWZU	= 850,
    LWZU8	= 851,
    LWZUX	= 852,
    LWZUX8	= 853,
    LWZX	= 854,
    LWZX8	= 855,
    LWZtoc	= 856,
    LXSD	= 857,
    LXSDX	= 858,
    LXSIBZX	= 859,
    LXSIHZX	= 860,
    LXSIWAX	= 861,
    LXSIWZX	= 862,
    LXSSP	= 863,
    LXSSPX	= 864,
    LXV	= 865,
    LXVB16X	= 866,
    LXVD2X	= 867,
    LXVDSX	= 868,
    LXVH8X	= 869,
    LXVL	= 870,
    LXVLL	= 871,
    LXVW4X	= 872,
    LXVWSX	= 873,
    LXVX	= 874,
    MBAR	= 875,
    MCRF	= 876,
    MCRFS	= 877,
    MCRXRX	= 878,
    MFBHRBE	= 879,
    MFCR	= 880,
    MFCR8	= 881,
    MFCTR	= 882,
    MFCTR8	= 883,
    MFDCR	= 884,
    MFFS	= 885,
    MFFSo	= 886,
    MFLR	= 887,
    MFLR8	= 888,
    MFMSR	= 889,
    MFOCRF	= 890,
    MFOCRF8	= 891,
    MFPMR	= 892,
    MFSPR	= 893,
    MFSPR8	= 894,
    MFSR	= 895,
    MFSRIN	= 896,
    MFTB	= 897,
    MFTB8	= 898,
    MFVRD	= 899,
    MFVRSAVE	= 900,
    MFVRSAVEv	= 901,
    MFVSCR	= 902,
    MFVSRD	= 903,
    MFVSRLD	= 904,
    MFVSRWZ	= 905,
    MODSD	= 906,
    MODSW	= 907,
    MODUD	= 908,
    MODUW	= 909,
    MSGSYNC	= 910,
    MSYNC	= 911,
    MTCRF	= 912,
    MTCRF8	= 913,
    MTCTR	= 914,
    MTCTR8	= 915,
    MTCTR8loop	= 916,
    MTCTRloop	= 917,
    MTDCR	= 918,
    MTFSB0	= 919,
    MTFSB1	= 920,
    MTFSF	= 921,
    MTFSFI	= 922,
    MTFSFIo	= 923,
    MTFSFb	= 924,
    MTFSFo	= 925,
    MTLR	= 926,
    MTLR8	= 927,
    MTMSR	= 928,
    MTMSRD	= 929,
    MTOCRF	= 930,
    MTOCRF8	= 931,
    MTPMR	= 932,
    MTSPR	= 933,
    MTSPR8	= 934,
    MTSR	= 935,
    MTSRIN	= 936,
    MTVRSAVE	= 937,
    MTVRSAVEv	= 938,
    MTVSCR	= 939,
    MTVSRD	= 940,
    MTVSRDD	= 941,
    MTVSRWA	= 942,
    MTVSRWS	= 943,
    MTVSRWZ	= 944,
    MULHD	= 945,
    MULHDU	= 946,
    MULHDUo	= 947,
    MULHDo	= 948,
    MULHW	= 949,
    MULHWU	= 950,
    MULHWUo	= 951,
    MULHWo	= 952,
    MULLD	= 953,
    MULLDo	= 954,
    MULLI	= 955,
    MULLI8	= 956,
    MULLW	= 957,
    MULLWo	= 958,
    MoveGOTtoLR	= 959,
    MovePCtoLR	= 960,
    MovePCtoLR8	= 961,
    NAND	= 962,
    NAND8	= 963,
    NAND8o	= 964,
    NANDo	= 965,
    NAP	= 966,
    NEG	= 967,
    NEG8	= 968,
    NEG8o	= 969,
    NEGo	= 970,
    NOP	= 971,
    NOP_GT_PWR6	= 972,
    NOP_GT_PWR7	= 973,
    NOR	= 974,
    NOR8	= 975,
    NOR8o	= 976,
    NORo	= 977,
    OR	= 978,
    OR8	= 979,
    OR8o	= 980,
    ORC	= 981,
    ORC8	= 982,
    ORC8o	= 983,
    ORCo	= 984,
    ORI	= 985,
    ORI8	= 986,
    ORIS	= 987,
    ORIS8	= 988,
    ORo	= 989,
    POPCNTD	= 990,
    POPCNTW	= 991,
    PPC32GOT	= 992,
    PPC32PICGOT	= 993,
    QVALIGNI	= 994,
    QVALIGNIb	= 995,
    QVALIGNIs	= 996,
    QVESPLATI	= 997,
    QVESPLATIb	= 998,
    QVESPLATIs	= 999,
    QVFABS	= 1000,
    QVFABSs	= 1001,
    QVFADD	= 1002,
    QVFADDS	= 1003,
    QVFADDSs	= 1004,
    QVFCFID	= 1005,
    QVFCFIDS	= 1006,
    QVFCFIDU	= 1007,
    QVFCFIDUS	= 1008,
    QVFCFIDb	= 1009,
    QVFCMPEQ	= 1010,
    QVFCMPEQb	= 1011,
    QVFCMPEQbs	= 1012,
    QVFCMPGT	= 1013,
    QVFCMPGTb	= 1014,
    QVFCMPGTbs	= 1015,
    QVFCMPLT	= 1016,
    QVFCMPLTb	= 1017,
    QVFCMPLTbs	= 1018,
    QVFCPSGN	= 1019,
    QVFCPSGNs	= 1020,
    QVFCTID	= 1021,
    QVFCTIDU	= 1022,
    QVFCTIDUZ	= 1023,
    QVFCTIDZ	= 1024,
    QVFCTIDb	= 1025,
    QVFCTIW	= 1026,
    QVFCTIWU	= 1027,
    QVFCTIWUZ	= 1028,
    QVFCTIWZ	= 1029,
    QVFLOGICAL	= 1030,
    QVFLOGICALb	= 1031,
    QVFLOGICALs	= 1032,
    QVFMADD	= 1033,
    QVFMADDS	= 1034,
    QVFMADDSs	= 1035,
    QVFMR	= 1036,
    QVFMRb	= 1037,
    QVFMRs	= 1038,
    QVFMSUB	= 1039,
    QVFMSUBS	= 1040,
    QVFMSUBSs	= 1041,
    QVFMUL	= 1042,
    QVFMULS	= 1043,
    QVFMULSs	= 1044,
    QVFNABS	= 1045,
    QVFNABSs	= 1046,
    QVFNEG	= 1047,
    QVFNEGs	= 1048,
    QVFNMADD	= 1049,
    QVFNMADDS	= 1050,
    QVFNMADDSs	= 1051,
    QVFNMSUB	= 1052,
    QVFNMSUBS	= 1053,
    QVFNMSUBSs	= 1054,
    QVFPERM	= 1055,
    QVFPERMs	= 1056,
    QVFRE	= 1057,
    QVFRES	= 1058,
    QVFRESs	= 1059,
    QVFRIM	= 1060,
    QVFRIMs	= 1061,
    QVFRIN	= 1062,
    QVFRINs	= 1063,
    QVFRIP	= 1064,
    QVFRIPs	= 1065,
    QVFRIZ	= 1066,
    QVFRIZs	= 1067,
    QVFRSP	= 1068,
    QVFRSPs	= 1069,
    QVFRSQRTE	= 1070,
    QVFRSQRTES	= 1071,
    QVFRSQRTESs	= 1072,
    QVFSEL	= 1073,
    QVFSELb	= 1074,
    QVFSELbb	= 1075,
    QVFSELbs	= 1076,
    QVFSUB	= 1077,
    QVFSUBS	= 1078,
    QVFSUBSs	= 1079,
    QVFTSTNAN	= 1080,
    QVFTSTNANb	= 1081,
    QVFTSTNANbs	= 1082,
    QVFXMADD	= 1083,
    QVFXMADDS	= 1084,
    QVFXMUL	= 1085,
    QVFXMULS	= 1086,
    QVFXXCPNMADD	= 1087,
    QVFXXCPNMADDS	= 1088,
    QVFXXMADD	= 1089,
    QVFXXMADDS	= 1090,
    QVFXXNPMADD	= 1091,
    QVFXXNPMADDS	= 1092,
    QVGPCI	= 1093,
    QVLFCDUX	= 1094,
    QVLFCDUXA	= 1095,
    QVLFCDX	= 1096,
    QVLFCDXA	= 1097,
    QVLFCSUX	= 1098,
    QVLFCSUXA	= 1099,
    QVLFCSX	= 1100,
    QVLFCSXA	= 1101,
    QVLFCSXs	= 1102,
    QVLFDUX	= 1103,
    QVLFDUXA	= 1104,
    QVLFDX	= 1105,
    QVLFDXA	= 1106,
    QVLFDXb	= 1107,
    QVLFIWAX	= 1108,
    QVLFIWAXA	= 1109,
    QVLFIWZX	= 1110,
    QVLFIWZXA	= 1111,
    QVLFSUX	= 1112,
    QVLFSUXA	= 1113,
    QVLFSX	= 1114,
    QVLFSXA	= 1115,
    QVLFSXb	= 1116,
    QVLFSXs	= 1117,
    QVLPCLDX	= 1118,
    QVLPCLSX	= 1119,
    QVLPCLSXint	= 1120,
    QVLPCRDX	= 1121,
    QVLPCRSX	= 1122,
    QVSTFCDUX	= 1123,
    QVSTFCDUXA	= 1124,
    QVSTFCDUXI	= 1125,
    QVSTFCDUXIA	= 1126,
    QVSTFCDX	= 1127,
    QVSTFCDXA	= 1128,
    QVSTFCDXI	= 1129,
    QVSTFCDXIA	= 1130,
    QVSTFCSUX	= 1131,
    QVSTFCSUXA	= 1132,
    QVSTFCSUXI	= 1133,
    QVSTFCSUXIA	= 1134,
    QVSTFCSX	= 1135,
    QVSTFCSXA	= 1136,
    QVSTFCSXI	= 1137,
    QVSTFCSXIA	= 1138,
    QVSTFCSXs	= 1139,
    QVSTFDUX	= 1140,
    QVSTFDUXA	= 1141,
    QVSTFDUXI	= 1142,
    QVSTFDUXIA	= 1143,
    QVSTFDX	= 1144,
    QVSTFDXA	= 1145,
    QVSTFDXI	= 1146,
    QVSTFDXIA	= 1147,
    QVSTFDXb	= 1148,
    QVSTFIWX	= 1149,
    QVSTFIWXA	= 1150,
    QVSTFSUX	= 1151,
    QVSTFSUXA	= 1152,
    QVSTFSUXI	= 1153,
    QVSTFSUXIA	= 1154,
    QVSTFSUXs	= 1155,
    QVSTFSX	= 1156,
    QVSTFSXA	= 1157,
    QVSTFSXI	= 1158,
    QVSTFSXIA	= 1159,
    QVSTFSXs	= 1160,
    RESTORE_CR	= 1161,
    RESTORE_CRBIT	= 1162,
    RESTORE_VRSAVE	= 1163,
    RFCI	= 1164,
    RFDI	= 1165,
    RFEBB	= 1166,
    RFI	= 1167,
    RFID	= 1168,
    RFMCI	= 1169,
    RLDCL	= 1170,
    RLDCLo	= 1171,
    RLDCR	= 1172,
    RLDCRo	= 1173,
    RLDIC	= 1174,
    RLDICL	= 1175,
    RLDICL_32	= 1176,
    RLDICL_32_64	= 1177,
    RLDICL_32o	= 1178,
    RLDICLo	= 1179,
    RLDICR	= 1180,
    RLDICR_32	= 1181,
    RLDICRo	= 1182,
    RLDICo	= 1183,
    RLDIMI	= 1184,
    RLDIMIo	= 1185,
    RLWIMI	= 1186,
    RLWIMI8	= 1187,
    RLWIMI8o	= 1188,
    RLWIMIbm	= 1189,
    RLWIMIo	= 1190,
    RLWIMIobm	= 1191,
    RLWINM	= 1192,
    RLWINM8	= 1193,
    RLWINM8o	= 1194,
    RLWINMbm	= 1195,
    RLWINMo	= 1196,
    RLWINMobm	= 1197,
    RLWNM	= 1198,
    RLWNM8	= 1199,
    RLWNM8o	= 1200,
    RLWNMbm	= 1201,
    RLWNMo	= 1202,
    RLWNMobm	= 1203,
    ROTRDI	= 1204,
    ROTRDIo	= 1205,
    ROTRWI	= 1206,
    ROTRWIo	= 1207,
    ReadTB	= 1208,
    SC	= 1209,
    SELECT_CC_F4	= 1210,
    SELECT_CC_F8	= 1211,
    SELECT_CC_I4	= 1212,
    SELECT_CC_I8	= 1213,
    SELECT_CC_QBRC	= 1214,
    SELECT_CC_QFRC	= 1215,
    SELECT_CC_QSRC	= 1216,
    SELECT_CC_VRRC	= 1217,
    SELECT_CC_VSFRC	= 1218,
    SELECT_CC_VSRC	= 1219,
    SELECT_CC_VSSRC	= 1220,
    SELECT_F4	= 1221,
    SELECT_F8	= 1222,
    SELECT_I4	= 1223,
    SELECT_I8	= 1224,
    SELECT_QBRC	= 1225,
    SELECT_QFRC	= 1226,
    SELECT_QSRC	= 1227,
    SELECT_VRRC	= 1228,
    SELECT_VSFRC	= 1229,
    SELECT_VSRC	= 1230,
    SELECT_VSSRC	= 1231,
    SLBIA	= 1232,
    SLBIE	= 1233,
    SLBIEG	= 1234,
    SLBMFEE	= 1235,
    SLBMFEV	= 1236,
    SLBMTE	= 1237,
    SLBSYNC	= 1238,
    SLD	= 1239,
    SLDI	= 1240,
    SLDIo	= 1241,
    SLDo	= 1242,
    SLW	= 1243,
    SLW8	= 1244,
    SLW8o	= 1245,
    SLWI	= 1246,
    SLWIo	= 1247,
    SLWo	= 1248,
    SPILL_CR	= 1249,
    SPILL_CRBIT	= 1250,
    SPILL_VRSAVE	= 1251,
    SRAD	= 1252,
    SRADI	= 1253,
    SRADI_32	= 1254,
    SRADIo	= 1255,
    SRADo	= 1256,
    SRAW	= 1257,
    SRAWI	= 1258,
    SRAWIo	= 1259,
    SRAWo	= 1260,
    SRD	= 1261,
    SRDI	= 1262,
    SRDIo	= 1263,
    SRDo	= 1264,
    SRW	= 1265,
    SRW8	= 1266,
    SRW8o	= 1267,
    SRWI	= 1268,
    SRWIo	= 1269,
    SRWo	= 1270,
    STB	= 1271,
    STB8	= 1272,
    STBCIX	= 1273,
    STBCX	= 1274,
    STBU	= 1275,
    STBU8	= 1276,
    STBUX	= 1277,
    STBUX8	= 1278,
    STBX	= 1279,
    STBX8	= 1280,
    STD	= 1281,
    STDAT	= 1282,
    STDBRX	= 1283,
    STDCIX	= 1284,
    STDCX	= 1285,
    STDU	= 1286,
    STDUX	= 1287,
    STDX	= 1288,
    STFD	= 1289,
    STFDU	= 1290,
    STFDUX	= 1291,
    STFDX	= 1292,
    STFIWX	= 1293,
    STFS	= 1294,
    STFSU	= 1295,
    STFSUX	= 1296,
    STFSX	= 1297,
    STH	= 1298,
    STH8	= 1299,
    STHBRX	= 1300,
    STHCIX	= 1301,
    STHCX	= 1302,
    STHU	= 1303,
    STHU8	= 1304,
    STHUX	= 1305,
    STHUX8	= 1306,
    STHX	= 1307,
    STHX8	= 1308,
    STMW	= 1309,
    STOP	= 1310,
    STSWI	= 1311,
    STVEBX	= 1312,
    STVEHX	= 1313,
    STVEWX	= 1314,
    STVX	= 1315,
    STVXL	= 1316,
    STW	= 1317,
    STW8	= 1318,
    STWAT	= 1319,
    STWBRX	= 1320,
    STWCIX	= 1321,
    STWCX	= 1322,
    STWU	= 1323,
    STWU8	= 1324,
    STWUX	= 1325,
    STWUX8	= 1326,
    STWX	= 1327,
    STWX8	= 1328,
    STXSD	= 1329,
    STXSDX	= 1330,
    STXSIBX	= 1331,
    STXSIBXv	= 1332,
    STXSIHX	= 1333,
    STXSIHXv	= 1334,
    STXSIWX	= 1335,
    STXSSP	= 1336,
    STXSSPX	= 1337,
    STXV	= 1338,
    STXVB16X	= 1339,
    STXVD2X	= 1340,
    STXVH8X	= 1341,
    STXVL	= 1342,
    STXVLL	= 1343,
    STXVW4X	= 1344,
    STXVX	= 1345,
    SUBF	= 1346,
    SUBF8	= 1347,
    SUBF8o	= 1348,
    SUBFC	= 1349,
    SUBFC8	= 1350,
    SUBFC8o	= 1351,
    SUBFCo	= 1352,
    SUBFE	= 1353,
    SUBFE8	= 1354,
    SUBFE8o	= 1355,
    SUBFEo	= 1356,
    SUBFIC	= 1357,
    SUBFIC8	= 1358,
    SUBFME	= 1359,
    SUBFME8	= 1360,
    SUBFME8o	= 1361,
    SUBFMEo	= 1362,
    SUBFZE	= 1363,
    SUBFZE8	= 1364,
    SUBFZE8o	= 1365,
    SUBFZEo	= 1366,
    SUBFo	= 1367,
    SUBI	= 1368,
    SUBIC	= 1369,
    SUBICo	= 1370,
    SUBIS	= 1371,
    SYNC	= 1372,
    TABORT	= 1373,
    TABORTDC	= 1374,
    TABORTDCI	= 1375,
    TABORTWC	= 1376,
    TABORTWCI	= 1377,
    TAILB	= 1378,
    TAILB8	= 1379,
    TAILBA	= 1380,
    TAILBA8	= 1381,
    TAILBCTR	= 1382,
    TAILBCTR8	= 1383,
    TBEGIN	= 1384,
    TCHECK	= 1385,
    TCHECK_RET	= 1386,
    TCRETURNai	= 1387,
    TCRETURNai8	= 1388,
    TCRETURNdi	= 1389,
    TCRETURNdi8	= 1390,
    TCRETURNri	= 1391,
    TCRETURNri8	= 1392,
    TD	= 1393,
    TDI	= 1394,
    TEND	= 1395,
    TLBIA	= 1396,
    TLBIE	= 1397,
    TLBIEL	= 1398,
    TLBIVAX	= 1399,
    TLBLD	= 1400,
    TLBLI	= 1401,
    TLBRE	= 1402,
    TLBRE2	= 1403,
    TLBSX	= 1404,
    TLBSX2	= 1405,
    TLBSX2D	= 1406,
    TLBSYNC	= 1407,
    TLBWE	= 1408,
    TLBWE2	= 1409,
    TRAP	= 1410,
    TRECHKPT	= 1411,
    TRECLAIM	= 1412,
    TSR	= 1413,
    TW	= 1414,
    TWI	= 1415,
    UPDATE_VRSAVE	= 1416,
    UpdateGBR	= 1417,
    VABSDUB	= 1418,
    VABSDUH	= 1419,
    VABSDUW	= 1420,
    VADDCUQ	= 1421,
    VADDCUW	= 1422,
    VADDECUQ	= 1423,
    VADDEUQM	= 1424,
    VADDFP	= 1425,
    VADDSBS	= 1426,
    VADDSHS	= 1427,
    VADDSWS	= 1428,
    VADDUBM	= 1429,
    VADDUBS	= 1430,
    VADDUDM	= 1431,
    VADDUHM	= 1432,
    VADDUHS	= 1433,
    VADDUQM	= 1434,
    VADDUWM	= 1435,
    VADDUWS	= 1436,
    VAND	= 1437,
    VANDC	= 1438,
    VAVGSB	= 1439,
    VAVGSH	= 1440,
    VAVGSW	= 1441,
    VAVGUB	= 1442,
    VAVGUH	= 1443,
    VAVGUW	= 1444,
    VBPERMD	= 1445,
    VBPERMQ	= 1446,
    VCFSX	= 1447,
    VCFSX_0	= 1448,
    VCFUX	= 1449,
    VCFUX_0	= 1450,
    VCIPHER	= 1451,
    VCIPHERLAST	= 1452,
    VCLZB	= 1453,
    VCLZD	= 1454,
    VCLZH	= 1455,
    VCLZLSBB	= 1456,
    VCLZW	= 1457,
    VCMPBFP	= 1458,
    VCMPBFPo	= 1459,
    VCMPEQFP	= 1460,
    VCMPEQFPo	= 1461,
    VCMPEQUB	= 1462,
    VCMPEQUBo	= 1463,
    VCMPEQUD	= 1464,
    VCMPEQUDo	= 1465,
    VCMPEQUH	= 1466,
    VCMPEQUHo	= 1467,
    VCMPEQUW	= 1468,
    VCMPEQUWo	= 1469,
    VCMPGEFP	= 1470,
    VCMPGEFPo	= 1471,
    VCMPGTFP	= 1472,
    VCMPGTFPo	= 1473,
    VCMPGTSB	= 1474,
    VCMPGTSBo	= 1475,
    VCMPGTSD	= 1476,
    VCMPGTSDo	= 1477,
    VCMPGTSH	= 1478,
    VCMPGTSHo	= 1479,
    VCMPGTSW	= 1480,
    VCMPGTSWo	= 1481,
    VCMPGTUB	= 1482,
    VCMPGTUBo	= 1483,
    VCMPGTUD	= 1484,
    VCMPGTUDo	= 1485,
    VCMPGTUH	= 1486,
    VCMPGTUHo	= 1487,
    VCMPGTUW	= 1488,
    VCMPGTUWo	= 1489,
    VCMPNEB	= 1490,
    VCMPNEBo	= 1491,
    VCMPNEH	= 1492,
    VCMPNEHo	= 1493,
    VCMPNEW	= 1494,
    VCMPNEWo	= 1495,
    VCMPNEZB	= 1496,
    VCMPNEZBo	= 1497,
    VCMPNEZH	= 1498,
    VCMPNEZHo	= 1499,
    VCMPNEZW	= 1500,
    VCMPNEZWo	= 1501,
    VCTSXS	= 1502,
    VCTSXS_0	= 1503,
    VCTUXS	= 1504,
    VCTUXS_0	= 1505,
    VCTZB	= 1506,
    VCTZD	= 1507,
    VCTZH	= 1508,
    VCTZLSBB	= 1509,
    VCTZW	= 1510,
    VEQV	= 1511,
    VEXPTEFP	= 1512,
    VEXTRACTD	= 1513,
    VEXTRACTUB	= 1514,
    VEXTRACTUH	= 1515,
    VEXTRACTUW	= 1516,
    VEXTSB2D	= 1517,
    VEXTSB2Ds	= 1518,
    VEXTSB2W	= 1519,
    VEXTSB2Ws	= 1520,
    VEXTSH2D	= 1521,
    VEXTSH2Ds	= 1522,
    VEXTSH2W	= 1523,
    VEXTSH2Ws	= 1524,
    VEXTSW2D	= 1525,
    VEXTSW2Ds	= 1526,
    VEXTUBLX	= 1527,
    VEXTUBRX	= 1528,
    VEXTUHLX	= 1529,
    VEXTUHRX	= 1530,
    VEXTUWLX	= 1531,
    VEXTUWRX	= 1532,
    VGBBD	= 1533,
    VINSERTB	= 1534,
    VINSERTD	= 1535,
    VINSERTH	= 1536,
    VINSERTW	= 1537,
    VLOGEFP	= 1538,
    VMADDFP	= 1539,
    VMAXFP	= 1540,
    VMAXSB	= 1541,
    VMAXSD	= 1542,
    VMAXSH	= 1543,
    VMAXSW	= 1544,
    VMAXUB	= 1545,
    VMAXUD	= 1546,
    VMAXUH	= 1547,
    VMAXUW	= 1548,
    VMHADDSHS	= 1549,
    VMHRADDSHS	= 1550,
    VMINFP	= 1551,
    VMINSB	= 1552,
    VMINSD	= 1553,
    VMINSH	= 1554,
    VMINSW	= 1555,
    VMINUB	= 1556,
    VMINUD	= 1557,
    VMINUH	= 1558,
    VMINUW	= 1559,
    VMLADDUHM	= 1560,
    VMRGEW	= 1561,
    VMRGHB	= 1562,
    VMRGHH	= 1563,
    VMRGHW	= 1564,
    VMRGLB	= 1565,
    VMRGLH	= 1566,
    VMRGLW	= 1567,
    VMRGOW	= 1568,
    VMSUMMBM	= 1569,
    VMSUMSHM	= 1570,
    VMSUMSHS	= 1571,
    VMSUMUBM	= 1572,
    VMSUMUHM	= 1573,
    VMSUMUHS	= 1574,
    VMUL10CUQ	= 1575,
    VMUL10ECUQ	= 1576,
    VMUL10EUQ	= 1577,
    VMUL10UQ	= 1578,
    VMULESB	= 1579,
    VMULESH	= 1580,
    VMULESW	= 1581,
    VMULEUB	= 1582,
    VMULEUH	= 1583,
    VMULEUW	= 1584,
    VMULOSB	= 1585,
    VMULOSH	= 1586,
    VMULOSW	= 1587,
    VMULOUB	= 1588,
    VMULOUH	= 1589,
    VMULOUW	= 1590,
    VMULUWM	= 1591,
    VNAND	= 1592,
    VNCIPHER	= 1593,
    VNCIPHERLAST	= 1594,
    VNEGD	= 1595,
    VNEGW	= 1596,
    VNMSUBFP	= 1597,
    VNOR	= 1598,
    VOR	= 1599,
    VORC	= 1600,
    VPERM	= 1601,
    VPERMR	= 1602,
    VPERMXOR	= 1603,
    VPKPX	= 1604,
    VPKSDSS	= 1605,
    VPKSDUS	= 1606,
    VPKSHSS	= 1607,
    VPKSHUS	= 1608,
    VPKSWSS	= 1609,
    VPKSWUS	= 1610,
    VPKUDUM	= 1611,
    VPKUDUS	= 1612,
    VPKUHUM	= 1613,
    VPKUHUS	= 1614,
    VPKUWUM	= 1615,
    VPKUWUS	= 1616,
    VPMSUMB	= 1617,
    VPMSUMD	= 1618,
    VPMSUMH	= 1619,
    VPMSUMW	= 1620,
    VPOPCNTB	= 1621,
    VPOPCNTD	= 1622,
    VPOPCNTH	= 1623,
    VPOPCNTW	= 1624,
    VPRTYBD	= 1625,
    VPRTYBQ	= 1626,
    VPRTYBW	= 1627,
    VREFP	= 1628,
    VRFIM	= 1629,
    VRFIN	= 1630,
    VRFIP	= 1631,
    VRFIZ	= 1632,
    VRLB	= 1633,
    VRLD	= 1634,
    VRLDMI	= 1635,
    VRLDNM	= 1636,
    VRLH	= 1637,
    VRLW	= 1638,
    VRLWMI	= 1639,
    VRLWNM	= 1640,
    VRSQRTEFP	= 1641,
    VSBOX	= 1642,
    VSEL	= 1643,
    VSHASIGMAD	= 1644,
    VSHASIGMAW	= 1645,
    VSL	= 1646,
    VSLB	= 1647,
    VSLD	= 1648,
    VSLDOI	= 1649,
    VSLH	= 1650,
    VSLO	= 1651,
    VSLV	= 1652,
    VSLW	= 1653,
    VSPLTB	= 1654,
    VSPLTBs	= 1655,
    VSPLTH	= 1656,
    VSPLTHs	= 1657,
    VSPLTISB	= 1658,
    VSPLTISH	= 1659,
    VSPLTISW	= 1660,
    VSPLTW	= 1661,
    VSR	= 1662,
    VSRAB	= 1663,
    VSRAD	= 1664,
    VSRAH	= 1665,
    VSRAW	= 1666,
    VSRB	= 1667,
    VSRD	= 1668,
    VSRH	= 1669,
    VSRO	= 1670,
    VSRV	= 1671,
    VSRW	= 1672,
    VSUBCUQ	= 1673,
    VSUBCUW	= 1674,
    VSUBECUQ	= 1675,
    VSUBEUQM	= 1676,
    VSUBFP	= 1677,
    VSUBSBS	= 1678,
    VSUBSHS	= 1679,
    VSUBSWS	= 1680,
    VSUBUBM	= 1681,
    VSUBUBS	= 1682,
    VSUBUDM	= 1683,
    VSUBUHM	= 1684,
    VSUBUHS	= 1685,
    VSUBUQM	= 1686,
    VSUBUWM	= 1687,
    VSUBUWS	= 1688,
    VSUM2SWS	= 1689,
    VSUM4SBS	= 1690,
    VSUM4SHS	= 1691,
    VSUM4UBS	= 1692,
    VSUMSWS	= 1693,
    VUPKHPX	= 1694,
    VUPKHSB	= 1695,
    VUPKHSH	= 1696,
    VUPKHSW	= 1697,
    VUPKLPX	= 1698,
    VUPKLSB	= 1699,
    VUPKLSH	= 1700,
    VUPKLSW	= 1701,
    VXOR	= 1702,
    V_SET0	= 1703,
    V_SET0B	= 1704,
    V_SET0H	= 1705,
    V_SETALLONES	= 1706,
    V_SETALLONESB	= 1707,
    V_SETALLONESH	= 1708,
    WAIT	= 1709,
    WRTEE	= 1710,
    WRTEEI	= 1711,
    XOR	= 1712,
    XOR8	= 1713,
    XOR8o	= 1714,
    XORI	= 1715,
    XORI8	= 1716,
    XORIS	= 1717,
    XORIS8	= 1718,
    XORo	= 1719,
    XSABSDP	= 1720,
    XSABSQP	= 1721,
    XSADDDP	= 1722,
    XSADDQP	= 1723,
    XSADDQPO	= 1724,
    XSADDSP	= 1725,
    XSCMPEQDP	= 1726,
    XSCMPEXPDP	= 1727,
    XSCMPEXPQP	= 1728,
    XSCMPGEDP	= 1729,
    XSCMPGTDP	= 1730,
    XSCMPNEDP	= 1731,
    XSCMPODP	= 1732,
    XSCMPOQP	= 1733,
    XSCMPUDP	= 1734,
    XSCMPUQP	= 1735,
    XSCPSGNDP	= 1736,
    XSCPSGNQP	= 1737,
    XSCVDPHP	= 1738,
    XSCVDPQP	= 1739,
    XSCVDPSP	= 1740,
    XSCVDPSPN	= 1741,
    XSCVDPSXDS	= 1742,
    XSCVDPSXDSs	= 1743,
    XSCVDPSXWS	= 1744,
    XSCVDPSXWSs	= 1745,
    XSCVDPUXDS	= 1746,
    XSCVDPUXDSs	= 1747,
    XSCVDPUXWS	= 1748,
    XSCVDPUXWSs	= 1749,
    XSCVHPDP	= 1750,
    XSCVQPDP	= 1751,
    XSCVQPDPO	= 1752,
    XSCVQPSDZ	= 1753,
    XSCVQPSWZ	= 1754,
    XSCVQPUDZ	= 1755,
    XSCVQPUWZ	= 1756,
    XSCVSDQP	= 1757,
    XSCVSPDP	= 1758,
    XSCVSPDPN	= 1759,
    XSCVSXDDP	= 1760,
    XSCVSXDSP	= 1761,
    XSCVUDQP	= 1762,
    XSCVUXDDP	= 1763,
    XSCVUXDSP	= 1764,
    XSDIVDP	= 1765,
    XSDIVQP	= 1766,
    XSDIVQPO	= 1767,
    XSDIVSP	= 1768,
    XSIEXPDP	= 1769,
    XSIEXPQP	= 1770,
    XSMADDADP	= 1771,
    XSMADDASP	= 1772,
    XSMADDMDP	= 1773,
    XSMADDMSP	= 1774,
    XSMADDQP	= 1775,
    XSMADDQPO	= 1776,
    XSMAXCDP	= 1777,
    XSMAXDP	= 1778,
    XSMAXJDP	= 1779,
    XSMINCDP	= 1780,
    XSMINDP	= 1781,
    XSMINJDP	= 1782,
    XSMSUBADP	= 1783,
    XSMSUBASP	= 1784,
    XSMSUBMDP	= 1785,
    XSMSUBMSP	= 1786,
    XSMSUBQP	= 1787,
    XSMSUBQPO	= 1788,
    XSMULDP	= 1789,
    XSMULQP	= 1790,
    XSMULQPO	= 1791,
    XSMULSP	= 1792,
    XSNABSDP	= 1793,
    XSNABSQP	= 1794,
    XSNEGDP	= 1795,
    XSNEGQP	= 1796,
    XSNMADDADP	= 1797,
    XSNMADDASP	= 1798,
    XSNMADDMDP	= 1799,
    XSNMADDMSP	= 1800,
    XSNMADDQP	= 1801,
    XSNMADDQPO	= 1802,
    XSNMSUBADP	= 1803,
    XSNMSUBASP	= 1804,
    XSNMSUBMDP	= 1805,
    XSNMSUBMSP	= 1806,
    XSNMSUBQP	= 1807,
    XSNMSUBQPO	= 1808,
    XSRDPI	= 1809,
    XSRDPIC	= 1810,
    XSRDPIM	= 1811,
    XSRDPIP	= 1812,
    XSRDPIZ	= 1813,
    XSREDP	= 1814,
    XSRESP	= 1815,
    XSRQPI	= 1816,
    XSRQPIX	= 1817,
    XSRQPXP	= 1818,
    XSRSQRTEDP	= 1819,
    XSRSQRTESP	= 1820,
    XSSQRTDP	= 1821,
    XSSQRTQP	= 1822,
    XSSQRTQPO	= 1823,
    XSSQRTSP	= 1824,
    XSSUBDP	= 1825,
    XSSUBQP	= 1826,
    XSSUBQPO	= 1827,
    XSSUBSP	= 1828,
    XSTDIVDP	= 1829,
    XSTSQRTDP	= 1830,
    XSTSTDCDP	= 1831,
    XSTSTDCQP	= 1832,
    XSTSTDCSP	= 1833,
    XSXEXPDP	= 1834,
    XSXEXPQP	= 1835,
    XSXSIGDP	= 1836,
    XSXSIGQP	= 1837,
    XVABSDP	= 1838,
    XVABSSP	= 1839,
    XVADDDP	= 1840,
    XVADDSP	= 1841,
    XVCMPEQDP	= 1842,
    XVCMPEQDPo	= 1843,
    XVCMPEQSP	= 1844,
    XVCMPEQSPo	= 1845,
    XVCMPGEDP	= 1846,
    XVCMPGEDPo	= 1847,
    XVCMPGESP	= 1848,
    XVCMPGESPo	= 1849,
    XVCMPGTDP	= 1850,
    XVCMPGTDPo	= 1851,
    XVCMPGTSP	= 1852,
    XVCMPGTSPo	= 1853,
    XVCMPNEDP	= 1854,
    XVCMPNEDPo	= 1855,
    XVCMPNESP	= 1856,
    XVCMPNESPo	= 1857,
    XVCPSGNDP	= 1858,
    XVCPSGNSP	= 1859,
    XVCVDPSP	= 1860,
    XVCVDPSXDS	= 1861,
    XVCVDPSXWS	= 1862,
    XVCVDPUXDS	= 1863,
    XVCVDPUXWS	= 1864,
    XVCVHPSP	= 1865,
    XVCVSPDP	= 1866,
    XVCVSPHP	= 1867,
    XVCVSPSXDS	= 1868,
    XVCVSPSXWS	= 1869,
    XVCVSPUXDS	= 1870,
    XVCVSPUXWS	= 1871,
    XVCVSXDDP	= 1872,
    XVCVSXDSP	= 1873,
    XVCVSXWDP	= 1874,
    XVCVSXWSP	= 1875,
    XVCVUXDDP	= 1876,
    XVCVUXDSP	= 1877,
    XVCVUXWDP	= 1878,
    XVCVUXWSP	= 1879,
    XVDIVDP	= 1880,
    XVDIVSP	= 1881,
    XVIEXPDP	= 1882,
    XVIEXPSP	= 1883,
    XVMADDADP	= 1884,
    XVMADDASP	= 1885,
    XVMADDMDP	= 1886,
    XVMADDMSP	= 1887,
    XVMAXDP	= 1888,
    XVMAXSP	= 1889,
    XVMINDP	= 1890,
    XVMINSP	= 1891,
    XVMSUBADP	= 1892,
    XVMSUBASP	= 1893,
    XVMSUBMDP	= 1894,
    XVMSUBMSP	= 1895,
    XVMULDP	= 1896,
    XVMULSP	= 1897,
    XVNABSDP	= 1898,
    XVNABSSP	= 1899,
    XVNEGDP	= 1900,
    XVNEGSP	= 1901,
    XVNMADDADP	= 1902,
    XVNMADDASP	= 1903,
    XVNMADDMDP	= 1904,
    XVNMADDMSP	= 1905,
    XVNMSUBADP	= 1906,
    XVNMSUBASP	= 1907,
    XVNMSUBMDP	= 1908,
    XVNMSUBMSP	= 1909,
    XVRDPI	= 1910,
    XVRDPIC	= 1911,
    XVRDPIM	= 1912,
    XVRDPIP	= 1913,
    XVRDPIZ	= 1914,
    XVREDP	= 1915,
    XVRESP	= 1916,
    XVRSPI	= 1917,
    XVRSPIC	= 1918,
    XVRSPIM	= 1919,
    XVRSPIP	= 1920,
    XVRSPIZ	= 1921,
    XVRSQRTEDP	= 1922,
    XVRSQRTESP	= 1923,
    XVSQRTDP	= 1924,
    XVSQRTSP	= 1925,
    XVSUBDP	= 1926,
    XVSUBSP	= 1927,
    XVTDIVDP	= 1928,
    XVTDIVSP	= 1929,
    XVTSQRTDP	= 1930,
    XVTSQRTSP	= 1931,
    XVTSTDCDP	= 1932,
    XVTSTDCSP	= 1933,
    XVXEXPDP	= 1934,
    XVXEXPSP	= 1935,
    XVXSIGDP	= 1936,
    XVXSIGSP	= 1937,
    XXBRD	= 1938,
    XXBRH	= 1939,
    XXBRQ	= 1940,
    XXBRW	= 1941,
    XXEXTRACTUW	= 1942,
    XXINSERTW	= 1943,
    XXLAND	= 1944,
    XXLANDC	= 1945,
    XXLEQV	= 1946,
    XXLNAND	= 1947,
    XXLNOR	= 1948,
    XXLOR	= 1949,
    XXLORC	= 1950,
    XXLORf	= 1951,
    XXLXOR	= 1952,
    XXLXORdpz	= 1953,
    XXLXORspz	= 1954,
    XXLXORz	= 1955,
    XXMRGHW	= 1956,
    XXMRGLW	= 1957,
    XXPERM	= 1958,
    XXPERMDI	= 1959,
    XXPERMDIs	= 1960,
    XXPERMR	= 1961,
    XXSEL	= 1962,
    XXSLDWI	= 1963,
    XXSPLTIB	= 1964,
    XXSPLTW	= 1965,
    XXSPLTWs	= 1966,
    gBC	= 1967,
    gBCA	= 1968,
    gBCAat	= 1969,
    gBCCTR	= 1970,
    gBCCTRL	= 1971,
    gBCL	= 1972,
    gBCLA	= 1973,
    gBCLAat	= 1974,
    gBCLR	= 1975,
    gBCLRL	= 1976,
    gBCLat	= 1977,
    gBCat	= 1978,
    INSTRUCTION_LIST_END = 1979
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_IntSimple	= 1,
    IIC_IntGeneral	= 2,
    IIC_BrB	= 3,
    IIC_VecFP	= 4,
    IIC_LdStSync	= 5,
    IIC_IntCompare	= 6,
    IIC_SprABORT	= 7,
    IIC_LdStCOPY	= 8,
    IIC_LdStPASTE	= 9,
    IIC_BrCR	= 10,
    IIC_LdStDCBF	= 11,
    IIC_LdStLoad	= 12,
    IIC_IntDivD	= 13,
    IIC_IntDivW	= 14,
    IIC_FPGeneral	= 15,
    IIC_FPAddSub	= 16,
    IIC_FPCompare	= 17,
    IIC_FPDivD	= 18,
    IIC_FPDivS	= 19,
    IIC_FPFused	= 20,
    IIC_FPSqrtD	= 21,
    IIC_FPSqrtS	= 22,
    IIC_LdStICBI	= 23,
    IIC_LdStStore	= 24,
    IIC_IntISEL	= 25,
    IIC_SprISYNC	= 26,
    IIC_LdStLWARX	= 27,
    IIC_LdStLoadUpd	= 28,
    IIC_LdStLoadUpdX	= 29,
    IIC_LdStLD	= 30,
    IIC_LdStLDARX	= 31,
    IIC_LdStLDU	= 32,
    IIC_LdStLDUX	= 33,
    IIC_LdStLFD	= 34,
    IIC_LdStLFDU	= 35,
    IIC_LdStLFDUX	= 36,
    IIC_LdStLHA	= 37,
    IIC_LdStLHAU	= 38,
    IIC_LdStLHAUX	= 39,
    IIC_LdStLMW	= 40,
    IIC_LdStLWA	= 41,
    IIC_BrMCR	= 42,
    IIC_BrMCRX	= 43,
    IIC_SprMFCR	= 44,
    IIC_SprMFSPR	= 45,
    IIC_IntMFFS	= 46,
    IIC_SprMFMSR	= 47,
    IIC_SprMFCRF	= 48,
    IIC_SprMFPMR	= 49,
    IIC_SprMFSR	= 50,
    IIC_SprMFTB	= 51,
    IIC_VecGeneral	= 52,
    IIC_SprMSGSYNC	= 53,
    IIC_SprMTSPR	= 54,
    IIC_IntMTFSB0	= 55,
    IIC_SprMTMSR	= 56,
    IIC_SprMTMSRD	= 57,
    IIC_SprMTPMR	= 58,
    IIC_SprMTSR	= 59,
    IIC_IntMulHW	= 60,
    IIC_IntMulHWU	= 61,
    IIC_IntMulHD	= 62,
    IIC_IntMulLI	= 63,
    IIC_VecPerm	= 64,
    IIC_LdStSTFD	= 65,
    IIC_LdStSTFDU	= 66,
    IIC_SprRFI	= 67,
    IIC_IntRFID	= 68,
    IIC_IntRotateD	= 69,
    IIC_IntRotateDI	= 70,
    IIC_IntRotate	= 71,
    IIC_SprSLBIA	= 72,
    IIC_SprSLBIE	= 73,
    IIC_SprSLBIEG	= 74,
    IIC_SprSLBMFEE	= 75,
    IIC_SprSLBMFEV	= 76,
    IIC_SprSLBMTE	= 77,
    IIC_SprSLBSYNC	= 78,
    IIC_IntShift	= 79,
    IIC_LdStSTWCX	= 80,
    IIC_LdStStoreUpd	= 81,
    IIC_LdStSTD	= 82,
    IIC_LdStSTDCX	= 83,
    IIC_LdStSTDU	= 84,
    IIC_LdStSTDUX	= 85,
    IIC_SprSTOP	= 86,
    IIC_IntTrapD	= 87,
    IIC_SprTLBIA	= 88,
    IIC_SprTLBIE	= 89,
    IIC_SprTLBIEL	= 90,
    IIC_SprTLBSYNC	= 91,
    IIC_IntTrapW	= 92,
    IIC_VecFPCompare	= 93,
    VADDCUW_VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VSUBCUW_VXOR_V_SET0B_V_SET0H_V_SET0_XVABSDP_XVABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP	= 94,
    VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VEXTSB2D_VEXTSB2W_VEXTSH2D_VEXTSH2W_VEXTSW2D_VNAND_VNEGD_VNEGW_VORC_VPOPCNTB_VPOPCNTH_VPOPCNTW_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLEQV_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR	= 95,
    VCMPEQUB_VCMPEQUBo_VCMPEQUD_VCMPEQUDo_VCMPEQUH_VCMPEQUHo_VCMPEQUW_VCMPEQUWo_VCMPGTSB_VCMPGTSBo_VCMPGTSD_VCMPGTSDo_VCMPGTSH_VCMPGTSHo_VCMPGTSW_VCMPGTSWo_VCMPGTUB_VCMPGTUBo_VCMPGTUD_VCMPGTUDo_VCMPGTUH_VCMPGTUHo_VCMPGTUW_VCMPGTUWo_VCMPNEB_VCMPNEBo_VCMPNEH_VCMPNEHo_VCMPNEW_VCMPNEWo_VCMPNEZB_VCMPNEZBo_VCMPNEZH_VCMPNEZHo_VCMPNEZW_VCMPNEZWo	= 96,
    XXSEL	= 97,
    XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP_XSABSDP_XSCPSGNDP_XSIEXPDP_XSNABSDP_XSNEGDP_XSXEXPDP	= 98,
    VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VRLB_VRLD_VRLDMI_VRLDNM_VRLH_VRLW_VRLWMI_VRLWNM_VSHASIGMAD_VSHASIGMAW_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XSCVSPDPN_XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSTSTDCDP_XSTSTDCSP_XSXSIGDP_XVIEXPSP_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXEXPSP_XVXSIGDP_XVXSIGSP	= 99,
    VPOPCNTD_VPRTYBD_VPRTYBW_VSLD_VSRAD_VSRD	= 100,
    XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP_XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP	= 101,
    XVCMPEQDP_XVCMPEQDPo_XVCMPEQSP_XVCMPEQSPo_XVCMPGEDP_XVCMPGEDPo_XVCMPGESP_XVCMPGESPo_XVCMPGTDP_XVCMPGTDPo_XVCMPGTSP_XVCMPGTSPo	= 102,
    VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW	= 103,
    VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VBPERMD_VMAXFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINFP	= 104,
    VCMPBFP_VCMPBFPo_VCMPGTFP_VCMPGTFPo_VCMPEQFP_VCMPEQFPo_VCMPGEFP_VCMPGEFPo	= 105,
    VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS	= 106,
    VSUBFP_VMULUWM	= 107,
    XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP	= 108,
    XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXWS_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN	= 109,
    VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP	= 110,
    VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTB_VINSERTD_VINSERTH_VINSERTW_VPRTYBQ_VADDUQM_VSUBUQM	= 111,
    VSPLTB_VSPLTH_VSPLTISB_VSPLTISH_VSPLTISW_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSPLTIB_XXSPLTW	= 112,
    XSCMPEXPQP_XSCMPOQP_XSCMPUQP	= 113,
    XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPXP_XSSUBQP_XSSUBQPO	= 114,
    XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO	= 115,
    XSDIVQP_XSDIVQPO	= 116,
    XSSQRTQP_XSSQRTQPO	= 117,
    LXSDX_LXVD2X_LXSIWZX_LXV_LXSD	= 118,
    LFIWZX_LFDX_LFD	= 119,
    LXSSPX_LXSIWAX_LXSSP	= 120,
    LFIWAX_LFSX_LFS	= 121,
    LXVDSX_LXVW4X	= 122,
    STFS_STFD_STFIWX_STFSX_STFDX_STXSDX_STXSSPX_STXSIWX	= 123,
    STXVD2X_STXVW4X	= 124,
    DIVW_DIVWU	= 125,
    DIVWE_DIVWEU	= 126,
    DIVD_DIVDU	= 127,
    DIVDE_DIVDEU	= 128,
    DIVWEo_DIVWEUo	= 129,
    DIVDEo_DIVDEUo	= 130,
    SLD_SRD_SRAD	= 131,
    SRADI_RLDIC	= 132,
    RLDCL_RLDCR	= 133,
    RLDIMI_RLDICL_RLDICR_RLDICL_32_64	= 134,
    MTOCRF_MTOCRF8_MTCRF_MTCRF8	= 135,
    MCRF	= 136,
    MCRXRX	= 137,
    MCRFS	= 138,
    FDIV_XSDIVDP	= 139,
    FDIVS_XSDIVSP	= 140,
    XVDIVSP	= 141,
    XVDIVDP	= 142,
    FRSP_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRIMD_FRIMS_FRE_FRES_FRSQRTE_FRSQRTES_FMADDS_FMSUBS_FNMADDS_FNMSUBS_FSELD_FSELS_FADDS_FMULS_FSUBS_FCFID_FCTID_FCTIDZ_FCFIDU_FCFIDS_FCFIDUS_FCTIDUZ_FCTIWUZ_FCTIW_FCTIWZ	= 143,
    FMADD_FMSUB_FNMADD_FNMSUB_FMUL	= 144,
    FMR_FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS	= 145,
    FCMPUS_FCMPUD	= 146,
    LFSU	= 147,
    LFSUX	= 148,
    LFDU	= 149,
    LFDUX	= 150,
    SCHED_LIST_END = 151
  };
} // end Sched namespace
} // end PPC namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { PPC::CR0, 0 };
static const MCPhysReg ImplicitList2[] = { PPC::CARRY, 0 };
static const MCPhysReg ImplicitList3[] = { PPC::CARRY, PPC::CR0, 0 };
static const MCPhysReg ImplicitList4[] = { PPC::X0, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList5[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList6[] = { PPC::R1, 0 };
static const MCPhysReg ImplicitList7[] = { PPC::CTR, 0 };
static const MCPhysReg ImplicitList8[] = { PPC::CTR8, 0 };
static const MCPhysReg ImplicitList9[] = { PPC::CTR, PPC::RM, 0 };
static const MCPhysReg ImplicitList10[] = { PPC::LR, 0 };
static const MCPhysReg ImplicitList11[] = { PPC::CTR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList12[] = { PPC::LR8, 0 };
static const MCPhysReg ImplicitList13[] = { PPC::RM, 0 };
static const MCPhysReg ImplicitList14[] = { PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList15[] = { PPC::CR6, 0 };
static const MCPhysReg ImplicitList16[] = { PPC::LR8, PPC::X2, 0 };
static const MCPhysReg ImplicitList17[] = { PPC::CTR, PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList18[] = { PPC::CTR8, PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList19[] = { PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList20[] = { PPC::CR7, 0 };
static const MCPhysReg ImplicitList21[] = { PPC::CR1EQ, 0 };
static const MCPhysReg ImplicitList22[] = { PPC::X1, 0 };
static const MCPhysReg ImplicitList23[] = { PPC::CR1, 0 };
static const MCPhysReg ImplicitList24[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList25[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList26[] = { PPC::LR, PPC::CTR, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo94[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo95[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo103[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo107[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo204[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo205[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo208[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo210[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { PPC::CTRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { PPC::CTRRC8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo229[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };

extern const MCInstrDesc PPCInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #18 = FENTRY_CALL
  { 19,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #19 = PATCHPOINT
  { 20,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #20 = LOAD_STACK_GUARD
  { 21,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #21 = STATEPOINT
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #22 = LOCAL_ESCAPE
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = FAULTING_OP
  { 24,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #24 = PATCHABLE_OP
  { 25,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #25 = PATCHABLE_FUNCTION_ENTER
  { 26,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #26 = PATCHABLE_RET
  { 27,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #27 = PATCHABLE_FUNCTION_EXIT
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = PATCHABLE_TAIL_CALL
  { 29,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #29 = PATCHABLE_EVENT_CALL
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #30 = G_ADD
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_SUB
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_MUL
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_SDIV
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_UDIV
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_SREM
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_UREM
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_AND
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #38 = G_OR
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #39 = G_XOR
  { 40,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #40 = G_FRAME_INDEX
  { 41,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #41 = G_GLOBAL_VALUE
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #42 = G_EXTRACT
  { 43,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #43 = G_UNMERGE_VALUES
  { 44,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #44 = G_INSERT
  { 45,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = G_SEQUENCE
  { 46,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #46 = G_MERGE_VALUES
  { 47,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #47 = G_PTRTOINT
  { 48,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #48 = G_INTTOPTR
  { 49,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = G_BITCAST
  { 50,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #50 = G_LOAD
  { 51,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #51 = G_STORE
  { 52,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #52 = G_BRCOND
  { 53,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #53 = G_BRINDIRECT
  { 54,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #54 = G_INTRINSIC
  { 55,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #55 = G_INTRINSIC_W_SIDE_EFFECTS
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #56 = G_ANYEXT
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #57 = G_TRUNC
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #58 = G_CONSTANT
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #59 = G_FCONSTANT
  { 60,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #60 = G_VASTART
  { 61,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #61 = G_VAARG
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #62 = G_SEXT
  { 63,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #63 = G_ZEXT
  { 64,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #64 = G_SHL
  { 65,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #65 = G_LSHR
  { 66,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #66 = G_ASHR
  { 67,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #67 = G_ICMP
  { 68,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #68 = G_FCMP
  { 69,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #69 = G_SELECT
  { 70,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #70 = G_UADDE
  { 71,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #71 = G_USUBE
  { 72,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #72 = G_SADDO
  { 73,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #73 = G_SSUBO
  { 74,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #74 = G_UMULO
  { 75,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #75 = G_SMULO
  { 76,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #76 = G_UMULH
  { 77,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #77 = G_SMULH
  { 78,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #78 = G_FADD
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #79 = G_FSUB
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #80 = G_FMUL
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #81 = G_FDIV
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #82 = G_FREM
  { 83,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #83 = G_FPOW
  { 84,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #84 = G_FNEG
  { 85,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #85 = G_FPEXT
  { 86,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #86 = G_FPTRUNC
  { 87,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #87 = G_FPTOSI
  { 88,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #88 = G_FPTOUI
  { 89,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #89 = G_SITOFP
  { 90,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #90 = G_UITOFP
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #91 = G_GEP
  { 92,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #92 = G_PTR_MASK
  { 93,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #93 = G_BR
  { 94,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #94 = G_INSERT_VECTOR_ELT
  { 95,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #95 = G_EXTRACT_VECTOR_ELT
  { 96,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #96 = G_SHUFFLE_VECTOR
  { 97,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #97 = ADD4
  { 98,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #98 = ADD4TLS
  { 99,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #99 = ADD4o
  { 100,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #100 = ADD8
  { 101,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #101 = ADD8TLS
  { 102,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #102 = ADD8TLS_
  { 103,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #103 = ADD8o
  { 104,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #104 = ADDC
  { 105,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #105 = ADDC8
  { 106,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #106 = ADDC8o
  { 107,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #107 = ADDCo
  { 108,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #108 = ADDE
  { 109,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #109 = ADDE8
  { 110,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #110 = ADDE8o
  { 111,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #111 = ADDEo
  { 112,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #112 = ADDI
  { 113,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #113 = ADDI8
  { 114,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #114 = ADDIC
  { 115,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo31, -1 ,nullptr },  // Inst #115 = ADDIC8
  { 116,	3,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #116 = ADDICo
  { 117,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #117 = ADDIS
  { 118,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #118 = ADDIS8
  { 119,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #119 = ADDISdtprelHA
  { 120,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #120 = ADDISdtprelHA32
  { 121,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #121 = ADDISgotTprelHA
  { 122,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #122 = ADDIStlsgdHA
  { 123,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #123 = ADDIStlsldHA
  { 124,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #124 = ADDIStocHA
  { 125,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #125 = ADDIdtprelL
  { 126,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #126 = ADDIdtprelL32
  { 127,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #127 = ADDItlsgdL
  { 128,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #128 = ADDItlsgdL32
  { 129,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo33, -1 ,nullptr },  // Inst #129 = ADDItlsgdLADDR
  { 130,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo34, -1 ,nullptr },  // Inst #130 = ADDItlsgdLADDR32
  { 131,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #131 = ADDItlsldL
  { 132,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #132 = ADDItlsldL32
  { 133,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo33, -1 ,nullptr },  // Inst #133 = ADDItlsldLADDR
  { 134,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo34, -1 ,nullptr },  // Inst #134 = ADDItlsldLADDR32
  { 135,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #135 = ADDItocL
  { 136,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #136 = ADDME
  { 137,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo36, -1 ,nullptr },  // Inst #137 = ADDME8
  { 138,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo36, -1 ,nullptr },  // Inst #138 = ADDME8o
  { 139,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #139 = ADDMEo
  { 140,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #140 = ADDZE
  { 141,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo36, -1 ,nullptr },  // Inst #141 = ADDZE8
  { 142,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo36, -1 ,nullptr },  // Inst #142 = ADDZE8o
  { 143,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #143 = ADDZEo
  { 144,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo7, -1 ,nullptr },  // Inst #144 = ADJCALLSTACKDOWN
  { 145,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo7, -1 ,nullptr },  // Inst #145 = ADJCALLSTACKUP
  { 146,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #146 = AND
  { 147,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #147 = AND8
  { 148,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #148 = AND8o
  { 149,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #149 = ANDC
  { 150,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #150 = ANDC8
  { 151,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #151 = ANDC8o
  { 152,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #152 = ANDCo
  { 153,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #153 = ANDISo
  { 154,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #154 = ANDISo8
  { 155,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #155 = ANDIo
  { 156,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #156 = ANDIo8
  { 157,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #157 = ANDIo_1_EQ_BIT
  { 158,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #158 = ANDIo_1_EQ_BIT8
  { 159,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #159 = ANDIo_1_GT_BIT
  { 160,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #160 = ANDIo_1_GT_BIT8
  { 161,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #161 = ANDo
  { 162,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo39, -1 ,nullptr },  // Inst #162 = ATOMIC_CMP_SWAP_I16
  { 163,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo39, -1 ,nullptr },  // Inst #163 = ATOMIC_CMP_SWAP_I32
  { 164,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #164 = ATOMIC_CMP_SWAP_I64
  { 165,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo39, -1 ,nullptr },  // Inst #165 = ATOMIC_CMP_SWAP_I8
  { 166,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #166 = ATOMIC_LOAD_ADD_I16
  { 167,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #167 = ATOMIC_LOAD_ADD_I32
  { 168,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #168 = ATOMIC_LOAD_ADD_I64
  { 169,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #169 = ATOMIC_LOAD_ADD_I8
  { 170,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #170 = ATOMIC_LOAD_AND_I16
  { 171,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #171 = ATOMIC_LOAD_AND_I32
  { 172,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #172 = ATOMIC_LOAD_AND_I64
  { 173,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #173 = ATOMIC_LOAD_AND_I8
  { 174,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #174 = ATOMIC_LOAD_MAX_I16
  { 175,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #175 = ATOMIC_LOAD_MAX_I32
  { 176,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #176 = ATOMIC_LOAD_MAX_I64
  { 177,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #177 = ATOMIC_LOAD_MAX_I8
  { 178,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #178 = ATOMIC_LOAD_MIN_I16
  { 179,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #179 = ATOMIC_LOAD_MIN_I32
  { 180,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #180 = ATOMIC_LOAD_MIN_I64
  { 181,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #181 = ATOMIC_LOAD_MIN_I8
  { 182,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #182 = ATOMIC_LOAD_NAND_I16
  { 183,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #183 = ATOMIC_LOAD_NAND_I32
  { 184,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #184 = ATOMIC_LOAD_NAND_I64
  { 185,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #185 = ATOMIC_LOAD_NAND_I8
  { 186,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #186 = ATOMIC_LOAD_OR_I16
  { 187,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #187 = ATOMIC_LOAD_OR_I32
  { 188,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #188 = ATOMIC_LOAD_OR_I64
  { 189,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #189 = ATOMIC_LOAD_OR_I8
  { 190,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #190 = ATOMIC_LOAD_SUB_I16
  { 191,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #191 = ATOMIC_LOAD_SUB_I32
  { 192,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #192 = ATOMIC_LOAD_SUB_I64
  { 193,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #193 = ATOMIC_LOAD_SUB_I8
  { 194,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #194 = ATOMIC_LOAD_UMAX_I16
  { 195,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #195 = ATOMIC_LOAD_UMAX_I32
  { 196,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #196 = ATOMIC_LOAD_UMAX_I64
  { 197,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #197 = ATOMIC_LOAD_UMAX_I8
  { 198,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #198 = ATOMIC_LOAD_UMIN_I16
  { 199,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #199 = ATOMIC_LOAD_UMIN_I32
  { 200,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #200 = ATOMIC_LOAD_UMIN_I64
  { 201,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #201 = ATOMIC_LOAD_UMIN_I8
  { 202,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #202 = ATOMIC_LOAD_XOR_I16
  { 203,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #203 = ATOMIC_LOAD_XOR_I32
  { 204,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #204 = ATOMIC_LOAD_XOR_I64
  { 205,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #205 = ATOMIC_LOAD_XOR_I8
  { 206,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #206 = ATOMIC_SWAP_I16
  { 207,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #207 = ATOMIC_SWAP_I32
  { 208,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #208 = ATOMIC_SWAP_I64
  { 209,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #209 = ATOMIC_SWAP_I8
  { 210,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #210 = ATTN
  { 211,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #211 = B
  { 212,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #212 = BA
  { 213,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #213 = BC
  { 214,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #214 = BCC
  { 215,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #215 = BCCA
  { 216,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #216 = BCCCTR
  { 217,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #217 = BCCCTR8
  { 218,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo45, -1 ,nullptr },  // Inst #218 = BCCCTRL
  { 219,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo45, -1 ,nullptr },  // Inst #219 = BCCCTRL8
  { 220,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo44, -1 ,nullptr },  // Inst #220 = BCCL
  { 221,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo44, -1 ,nullptr },  // Inst #221 = BCCLA
  { 222,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #222 = BCCLR
  { 223,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo45, -1 ,nullptr },  // Inst #223 = BCCLRL
  { 224,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #224 = BCCTR
  { 225,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #225 = BCCTR8
  { 226,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #226 = BCCTR8n
  { 227,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo46, -1 ,nullptr },  // Inst #227 = BCCTRL
  { 228,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo46, -1 ,nullptr },  // Inst #228 = BCCTRL8
  { 229,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo46, -1 ,nullptr },  // Inst #229 = BCCTRL8n
  { 230,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo46, -1 ,nullptr },  // Inst #230 = BCCTRLn
  { 231,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #231 = BCCTRn
  { 232,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #232 = BCDCFNo
  { 233,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #233 = BCDCFSQo
  { 234,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #234 = BCDCFZo
  { 235,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #235 = BCDCPSGNo
  { 236,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo49, -1 ,nullptr },  // Inst #236 = BCDCTNo
  { 237,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo49, -1 ,nullptr },  // Inst #237 = BCDCTSQo
  { 238,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #238 = BCDCTZo
  { 239,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #239 = BCDSETSGNo
  { 240,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo50, -1 ,nullptr },  // Inst #240 = BCDSRo
  { 241,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo50, -1 ,nullptr },  // Inst #241 = BCDSo
  { 242,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo50, -1 ,nullptr },  // Inst #242 = BCDTRUNCo
  { 243,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #243 = BCDUSo
  { 244,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #244 = BCDUTRUNCo
  { 245,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo43, -1 ,nullptr },  // Inst #245 = BCL
  { 246,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #246 = BCLR
  { 247,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo46, -1 ,nullptr },  // Inst #247 = BCLRL
  { 248,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo46, -1 ,nullptr },  // Inst #248 = BCLRLn
  { 249,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #249 = BCLRn
  { 250,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #250 = BCLalways
  { 251,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo43, -1 ,nullptr },  // Inst #251 = BCLn
  { 252,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, nullptr, -1 ,nullptr },  // Inst #252 = BCTR
  { 253,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, nullptr, -1 ,nullptr },  // Inst #253 = BCTR8
  { 254,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList9, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #254 = BCTRL
  { 255,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #255 = BCTRL8
  { 256,	2,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList16, OperandInfo51, -1 ,nullptr },  // Inst #256 = BCTRL8_LDinto_toc
  { 257,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #257 = BCn
  { 258,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #258 = BDNZ
  { 259,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #259 = BDNZ8
  { 260,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #260 = BDNZA
  { 261,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #261 = BDNZAm
  { 262,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #262 = BDNZAp
  { 263,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #263 = BDNZL
  { 264,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #264 = BDNZLA
  { 265,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #265 = BDNZLAm
  { 266,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #266 = BDNZLAp
  { 267,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #267 = BDNZLR
  { 268,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #268 = BDNZLR8
  { 269,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #269 = BDNZLRL
  { 270,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #270 = BDNZLRLm
  { 271,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #271 = BDNZLRLp
  { 272,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #272 = BDNZLRm
  { 273,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #273 = BDNZLRp
  { 274,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #274 = BDNZLm
  { 275,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #275 = BDNZLp
  { 276,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #276 = BDNZm
  { 277,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #277 = BDNZp
  { 278,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #278 = BDZ
  { 279,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #279 = BDZ8
  { 280,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #280 = BDZA
  { 281,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #281 = BDZAm
  { 282,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #282 = BDZAp
  { 283,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #283 = BDZL
  { 284,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #284 = BDZLA
  { 285,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #285 = BDZLAm
  { 286,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #286 = BDZLAp
  { 287,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #287 = BDZLR
  { 288,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #288 = BDZLR8
  { 289,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #289 = BDZLRL
  { 290,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #290 = BDZLRLm
  { 291,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #291 = BDZLRLp
  { 292,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #292 = BDZLRm
  { 293,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #293 = BDZLRp
  { 294,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #294 = BDZLm
  { 295,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #295 = BDZLp
  { 296,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #296 = BDZm
  { 297,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #297 = BDZp
  { 298,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #298 = BL
  { 299,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #299 = BL8
  { 300,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #300 = BL8_NOP
  { 301,	2,	0,	8,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #301 = BL8_NOP_TLS
  { 302,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #302 = BL8_TLS
  { 303,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #303 = BL8_TLS_
  { 304,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #304 = BLA
  { 305,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #305 = BLA8
  { 306,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #306 = BLA8_NOP
  { 307,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList14, nullptr, nullptr, -1 ,nullptr },  // Inst #307 = BLR
  { 308,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, nullptr, -1 ,nullptr },  // Inst #308 = BLR8
  { 309,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #309 = BLRL
  { 310,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo7, -1 ,nullptr },  // Inst #310 = BL_TLS
  { 311,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #311 = BPERMD
  { 312,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #312 = BRINC
  { 313,	1,	0,	4,	5,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo52, -1 ,nullptr },  // Inst #313 = CFENCE8
  { 314,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #314 = CLRBHRB
  { 315,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #315 = CLRLSLDI
  { 316,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #316 = CLRLSLDIo
  { 317,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #317 = CLRLSLWI
  { 318,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #318 = CLRLSLWIo
  { 319,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #319 = CLRRDI
  { 320,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #320 = CLRRDIo
  { 321,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #321 = CLRRWI
  { 322,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #322 = CLRRWIo
  { 323,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #323 = CMPB
  { 324,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #324 = CMPB8
  { 325,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #325 = CMPD
  { 326,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #326 = CMPDI
  { 327,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #327 = CMPEQB
  { 328,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #328 = CMPLD
  { 329,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #329 = CMPLDI
  { 330,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #330 = CMPLW
  { 331,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #331 = CMPLWI
  { 332,	4,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #332 = CMPRB
  { 333,	4,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #333 = CMPRB8
  { 334,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #334 = CMPW
  { 335,	3,	1,	4,	6,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #335 = CMPWI
  { 336,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #336 = CNTLZD
  { 337,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #337 = CNTLZDo
  { 338,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #338 = CNTLZW
  { 339,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #339 = CNTLZW8
  { 340,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #340 = CNTLZW8o
  { 341,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #341 = CNTLZWo
  { 342,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #342 = CNTTZD
  { 343,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #343 = CNTTZDo
  { 344,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #344 = CNTTZW
  { 345,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #345 = CNTTZW8
  { 346,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #346 = CNTTZW8o
  { 347,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #347 = CNTTZWo
  { 348,	0,	0,	4,	7,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #348 = CP_ABORT
  { 349,	3,	0,	4,	8,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #349 = CP_COPY
  { 350,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #350 = CP_COPY8
  { 351,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #351 = CP_COPY_FIRST
  { 352,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #352 = CP_COPYx
  { 353,	3,	0,	4,	9,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #353 = CP_PASTE
  { 354,	3,	0,	4,	9,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #354 = CP_PASTE8
  { 355,	3,	0,	4,	9,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #355 = CP_PASTE8o
  { 356,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #356 = CP_PASTE_LAST
  { 357,	3,	0,	4,	9,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #357 = CP_PASTEo
  { 358,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #358 = CP_PASTEx
  { 359,	0,	0,	4,	10,	0, 0x0ULL, nullptr, ImplicitList21, nullptr, -1 ,nullptr },  // Inst #359 = CR6SET
  { 360,	0,	0,	4,	10,	0, 0x0ULL, nullptr, ImplicitList21, nullptr, -1 ,nullptr },  // Inst #360 = CR6UNSET
  { 361,	3,	1,	4,	10,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #361 = CRAND
  { 362,	3,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #362 = CRANDC
  { 363,	3,	1,	4,	10,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #363 = CREQV
  { 364,	3,	1,	4,	10,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #364 = CRNAND
  { 365,	3,	1,	4,	10,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #365 = CRNOR
  { 366,	3,	1,	4,	10,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #366 = CROR
  { 367,	3,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #367 = CRORC
  { 368,	1,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #368 = CRSET
  { 369,	1,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #369 = CRUNSET
  { 370,	3,	1,	4,	10,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #370 = CRXOR
  { 371,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #371 = CTRL_DEP
  { 372,	2,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #372 = DCBA
  { 373,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #373 = DCBF
  { 374,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #374 = DCBFL
  { 375,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #375 = DCBFLP
  { 376,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #376 = DCBFx
  { 377,	2,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #377 = DCBI
  { 378,	2,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #378 = DCBST
  { 379,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #379 = DCBT
  { 380,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #380 = DCBTCT
  { 381,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #381 = DCBTDS
  { 382,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #382 = DCBTST
  { 383,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #383 = DCBTSTCT
  { 384,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #384 = DCBTSTDS
  { 385,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #385 = DCBTSTT
  { 386,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #386 = DCBTSTx
  { 387,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #387 = DCBTT
  { 388,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #388 = DCBTx
  { 389,	2,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #389 = DCBZ
  { 390,	2,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #390 = DCBZL
  { 391,	2,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #391 = DCCCI
  { 392,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #392 = DFLOADf32
  { 393,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #393 = DFLOADf64
  { 394,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #394 = DFSTOREf32
  { 395,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #395 = DFSTOREf64
  { 396,	3,	1,	4,	127,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #396 = DIVD
  { 397,	3,	1,	4,	128,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #397 = DIVDE
  { 398,	3,	1,	4,	128,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #398 = DIVDEU
  { 399,	3,	1,	4,	130,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #399 = DIVDEUo
  { 400,	3,	1,	4,	130,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #400 = DIVDEo
  { 401,	3,	1,	4,	127,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #401 = DIVDU
  { 402,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #402 = DIVDUo
  { 403,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #403 = DIVDo
  { 404,	3,	1,	4,	125,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #404 = DIVW
  { 405,	3,	1,	4,	126,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #405 = DIVWE
  { 406,	3,	1,	4,	126,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #406 = DIVWEU
  { 407,	3,	1,	4,	129,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #407 = DIVWEUo
  { 408,	3,	1,	4,	129,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #408 = DIVWEo
  { 409,	3,	1,	4,	125,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #409 = DIVWU
  { 410,	3,	1,	4,	14,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #410 = DIVWUo
  { 411,	3,	1,	4,	14,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #411 = DIVWo
  { 412,	1,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, PPC::DeprecatedDST ,nullptr },  // Inst #412 = DSS
  { 413,	0,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, PPC::DeprecatedDST ,nullptr },  // Inst #413 = DSSALL
  { 414,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, PPC::DeprecatedDST ,nullptr },  // Inst #414 = DST
  { 415,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, PPC::DeprecatedDST ,nullptr },  // Inst #415 = DST64
  { 416,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, PPC::DeprecatedDST ,nullptr },  // Inst #416 = DSTST
  { 417,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, PPC::DeprecatedDST ,nullptr },  // Inst #417 = DSTST64
  { 418,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, PPC::DeprecatedDST ,nullptr },  // Inst #418 = DSTSTT
  { 419,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, PPC::DeprecatedDST ,nullptr },  // Inst #419 = DSTSTT64
  { 420,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, PPC::DeprecatedDST ,nullptr },  // Inst #420 = DSTT
  { 421,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, PPC::DeprecatedDST ,nullptr },  // Inst #421 = DSTT64
  { 422,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo69, -1 ,nullptr },  // Inst #422 = DYNALLOC
  { 423,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList22, ImplicitList22, OperandInfo70, -1 ,nullptr },  // Inst #423 = DYNALLOC8
  { 424,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #424 = DYNAREAOFFSET
  { 425,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #425 = DYNAREAOFFSET8
  { 426,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #426 = EH_SjLj_LongJmp32
  { 427,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #427 = EH_SjLj_LongJmp64
  { 428,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo73, -1 ,nullptr },  // Inst #428 = EH_SjLj_SetJmp32
  { 429,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo73, -1 ,nullptr },  // Inst #429 = EH_SjLj_SetJmp64
  { 430,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #430 = EH_SjLj_Setup
  { 431,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #431 = EQV
  { 432,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #432 = EQV8
  { 433,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #433 = EQV8o
  { 434,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #434 = EQVo
  { 435,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #435 = EVABS
  { 436,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #436 = EVADDIW
  { 437,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #437 = EVADDSMIAAW
  { 438,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #438 = EVADDSSIAAW
  { 439,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #439 = EVADDUMIAAW
  { 440,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #440 = EVADDUSIAAW
  { 441,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #441 = EVADDW
  { 442,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #442 = EVAND
  { 443,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #443 = EVANDC
  { 444,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #444 = EVCMPEQ
  { 445,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #445 = EVCMPGTS
  { 446,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #446 = EVCMPGTU
  { 447,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #447 = EVCMPLTS
  { 448,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #448 = EVCMPLTU
  { 449,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #449 = EVCNTLSW
  { 450,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #450 = EVCNTLZW
  { 451,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #451 = EVDIVWS
  { 452,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #452 = EVDIVWU
  { 453,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #453 = EVEQV
  { 454,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #454 = EVEXTSB
  { 455,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #455 = EVEXTSH
  { 456,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #456 = EVLDD
  { 457,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #457 = EVLDDX
  { 458,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #458 = EVLDH
  { 459,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #459 = EVLDHX
  { 460,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #460 = EVLDW
  { 461,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #461 = EVLDWX
  { 462,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #462 = EVLHHESPLAT
  { 463,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #463 = EVLHHESPLATX
  { 464,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #464 = EVLHHOSSPLAT
  { 465,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #465 = EVLHHOSSPLATX
  { 466,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #466 = EVLHHOUSPLAT
  { 467,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #467 = EVLHHOUSPLATX
  { 468,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #468 = EVLWHE
  { 469,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #469 = EVLWHEX
  { 470,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #470 = EVLWHOS
  { 471,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #471 = EVLWHOSX
  { 472,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #472 = EVLWHOU
  { 473,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #473 = EVLWHOUX
  { 474,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #474 = EVLWHSPLAT
  { 475,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #475 = EVLWHSPLATX
  { 476,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #476 = EVLWWSPLAT
  { 477,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #477 = EVLWWSPLATX
  { 478,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #478 = EVMERGEHI
  { 479,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #479 = EVMERGEHILO
  { 480,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #480 = EVMERGELO
  { 481,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #481 = EVMERGELOHI
  { 482,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #482 = EVMHEGSMFAA
  { 483,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #483 = EVMHEGSMFAN
  { 484,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #484 = EVMHEGSMIAA
  { 485,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #485 = EVMHEGSMIAN
  { 486,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #486 = EVMHEGUMIAA
  { 487,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #487 = EVMHEGUMIAN
  { 488,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #488 = EVMHESMF
  { 489,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #489 = EVMHESMFA
  { 490,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #490 = EVMHESMFAAW
  { 491,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #491 = EVMHESMFANW
  { 492,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #492 = EVMHESMI
  { 493,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #493 = EVMHESMIA
  { 494,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #494 = EVMHESMIAAW
  { 495,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #495 = EVMHESMIANW
  { 496,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #496 = EVMHESSF
  { 497,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #497 = EVMHESSFA
  { 498,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #498 = EVMHESSFAAW
  { 499,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #499 = EVMHESSFANW
  { 500,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #500 = EVMHESSIAAW
  { 501,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #501 = EVMHESSIANW
  { 502,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #502 = EVMHEUMI
  { 503,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #503 = EVMHEUMIA
  { 504,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #504 = EVMHEUMIAAW
  { 505,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #505 = EVMHEUMIANW
  { 506,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #506 = EVMHEUSIAAW
  { 507,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #507 = EVMHEUSIANW
  { 508,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #508 = EVMHOGSMFAA
  { 509,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #509 = EVMHOGSMFAN
  { 510,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #510 = EVMHOGSMIAA
  { 511,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #511 = EVMHOGSMIAN
  { 512,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #512 = EVMHOGUMIAA
  { 513,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #513 = EVMHOGUMIAN
  { 514,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #514 = EVMHOSMF
  { 515,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #515 = EVMHOSMFA
  { 516,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #516 = EVMHOSMFAAW
  { 517,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #517 = EVMHOSMFANW
  { 518,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #518 = EVMHOSMI
  { 519,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #519 = EVMHOSMIA
  { 520,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #520 = EVMHOSMIAAW
  { 521,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #521 = EVMHOSMIANW
  { 522,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #522 = EVMHOSSF
  { 523,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #523 = EVMHOSSFA
  { 524,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #524 = EVMHOSSFAAW
  { 525,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #525 = EVMHOSSFANW
  { 526,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #526 = EVMHOSSIAAW
  { 527,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #527 = EVMHOSSIANW
  { 528,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #528 = EVMHOUMI
  { 529,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #529 = EVMHOUMIA
  { 530,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #530 = EVMHOUMIAAW
  { 531,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #531 = EVMHOUMIANW
  { 532,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #532 = EVMHOUSIAAW
  { 533,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #533 = EVMHOUSIANW
  { 534,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #534 = EVMRA
  { 535,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #535 = EVMWHSMF
  { 536,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #536 = EVMWHSMFA
  { 537,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #537 = EVMWHSMI
  { 538,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #538 = EVMWHSMIA
  { 539,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #539 = EVMWHSSF
  { 540,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #540 = EVMWHSSFA
  { 541,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #541 = EVMWHUMI
  { 542,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #542 = EVMWHUMIA
  { 543,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #543 = EVMWLSMIAAW
  { 544,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #544 = EVMWLSMIANW
  { 545,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #545 = EVMWLSSIAAW
  { 546,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #546 = EVMWLSSIANW
  { 547,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #547 = EVMWLUMI
  { 548,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #548 = EVMWLUMIA
  { 549,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #549 = EVMWLUMIAAW
  { 550,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #550 = EVMWLUMIANW
  { 551,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #551 = EVMWLUSIAAW
  { 552,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #552 = EVMWLUSIANW
  { 553,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #553 = EVMWSMF
  { 554,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #554 = EVMWSMFA
  { 555,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #555 = EVMWSMFAA
  { 556,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #556 = EVMWSMFAN
  { 557,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #557 = EVMWSMI
  { 558,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #558 = EVMWSMIA
  { 559,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #559 = EVMWSMIAA
  { 560,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #560 = EVMWSMIAN
  { 561,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #561 = EVMWSSF
  { 562,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #562 = EVMWSSFA
  { 563,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #563 = EVMWSSFAA
  { 564,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #564 = EVMWSSFAN
  { 565,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #565 = EVMWUMI
  { 566,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #566 = EVMWUMIA
  { 567,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #567 = EVMWUMIAA
  { 568,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #568 = EVMWUMIAN
  { 569,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #569 = EVNAND
  { 570,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #570 = EVNEG
  { 571,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #571 = EVNOR
  { 572,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #572 = EVOR
  { 573,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #573 = EVORC
  { 574,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #574 = EVRLW
  { 575,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #575 = EVRLWI
  { 576,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #576 = EVRNDW
  { 577,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #577 = EVSLW
  { 578,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #578 = EVSLWI
  { 579,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #579 = EVSPLATFI
  { 580,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #580 = EVSPLATI
  { 581,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #581 = EVSRWIS
  { 582,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #582 = EVSRWIU
  { 583,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #583 = EVSRWS
  { 584,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #584 = EVSRWU
  { 585,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #585 = EVSTDD
  { 586,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #586 = EVSTDDX
  { 587,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #587 = EVSTDH
  { 588,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #588 = EVSTDHX
  { 589,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #589 = EVSTDW
  { 590,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #590 = EVSTDWX
  { 591,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #591 = EVSTWHE
  { 592,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #592 = EVSTWHEX
  { 593,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #593 = EVSTWHO
  { 594,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #594 = EVSTWHOX
  { 595,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #595 = EVSTWWE
  { 596,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #596 = EVSTWWEX
  { 597,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #597 = EVSTWWO
  { 598,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #598 = EVSTWWOX
  { 599,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #599 = EVSUBFSMIAAW
  { 600,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #600 = EVSUBFSSIAAW
  { 601,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #601 = EVSUBFUMIAAW
  { 602,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #602 = EVSUBFUSIAAW
  { 603,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #603 = EVSUBFW
  { 604,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #604 = EVSUBIFW
  { 605,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #605 = EVXOR
  { 606,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #606 = EXTLDI
  { 607,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #607 = EXTLDIo
  { 608,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #608 = EXTLWI
  { 609,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #609 = EXTLWIo
  { 610,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #610 = EXTRDI
  { 611,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #611 = EXTRDIo
  { 612,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #612 = EXTRWI
  { 613,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #613 = EXTRWIo
  { 614,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #614 = EXTSB
  { 615,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #615 = EXTSB8
  { 616,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #616 = EXTSB8_32_64
  { 617,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #617 = EXTSB8o
  { 618,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #618 = EXTSBo
  { 619,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #619 = EXTSH
  { 620,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #620 = EXTSH8
  { 621,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #621 = EXTSH8_32_64
  { 622,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #622 = EXTSH8o
  { 623,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #623 = EXTSHo
  { 624,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #624 = EXTSW
  { 625,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #625 = EXTSW_32
  { 626,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #626 = EXTSW_32_64
  { 627,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #627 = EXTSW_32_64o
  { 628,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #628 = EXTSWo
  { 629,	0,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #629 = EnforceIEIO
  { 630,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #630 = FABSD
  { 631,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #631 = FABSDo
  { 632,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #632 = FABSS
  { 633,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #633 = FABSSo
  { 634,	3,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #634 = FADD
  { 635,	3,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #635 = FADDS
  { 636,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo81, -1 ,nullptr },  // Inst #636 = FADDSo
  { 637,	3,	1,	4,	16,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo80, -1 ,nullptr },  // Inst #637 = FADDo
  { 638,	3,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #638 = FADDrtz
  { 639,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #639 = FCFID
  { 640,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #640 = FCFIDS
  { 641,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo82, -1 ,nullptr },  // Inst #641 = FCFIDSo
  { 642,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #642 = FCFIDU
  { 643,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #643 = FCFIDUS
  { 644,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo82, -1 ,nullptr },  // Inst #644 = FCFIDUSo
  { 645,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #645 = FCFIDUo
  { 646,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #646 = FCFIDo
  { 647,	3,	1,	4,	146,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #647 = FCMPUD
  { 648,	3,	1,	4,	146,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #648 = FCMPUS
  { 649,	3,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #649 = FCPSGND
  { 650,	3,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo80, -1 ,nullptr },  // Inst #650 = FCPSGNDo
  { 651,	3,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #651 = FCPSGNS
  { 652,	3,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo81, -1 ,nullptr },  // Inst #652 = FCPSGNSo
  { 653,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #653 = FCTID
  { 654,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #654 = FCTIDU
  { 655,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #655 = FCTIDUZ
  { 656,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #656 = FCTIDUZo
  { 657,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #657 = FCTIDUo
  { 658,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #658 = FCTIDZ
  { 659,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #659 = FCTIDZo
  { 660,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #660 = FCTIDo
  { 661,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #661 = FCTIW
  { 662,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #662 = FCTIWU
  { 663,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #663 = FCTIWUZ
  { 664,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #664 = FCTIWUZo
  { 665,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #665 = FCTIWUo
  { 666,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #666 = FCTIWZ
  { 667,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #667 = FCTIWZo
  { 668,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #668 = FCTIWo
  { 669,	3,	1,	4,	139,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #669 = FDIV
  { 670,	3,	1,	4,	140,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #670 = FDIVS
  { 671,	3,	1,	4,	19,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo81, -1 ,nullptr },  // Inst #671 = FDIVSo
  { 672,	3,	1,	4,	18,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo80, -1 ,nullptr },  // Inst #672 = FDIVo
  { 673,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #673 = FMADD
  { 674,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #674 = FMADDS
  { 675,	4,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo86, -1 ,nullptr },  // Inst #675 = FMADDSo
  { 676,	4,	1,	4,	20,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo85, -1 ,nullptr },  // Inst #676 = FMADDo
  { 677,	2,	1,	4,	145,	0, 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #677 = FMR
  { 678,	2,	1,	4,	15,	0, 0x0ULL, nullptr, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #678 = FMRo
  { 679,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #679 = FMSUB
  { 680,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #680 = FMSUBS
  { 681,	4,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo86, -1 ,nullptr },  // Inst #681 = FMSUBSo
  { 682,	4,	1,	4,	20,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo85, -1 ,nullptr },  // Inst #682 = FMSUBo
  { 683,	3,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #683 = FMUL
  { 684,	3,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #684 = FMULS
  { 685,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo81, -1 ,nullptr },  // Inst #685 = FMULSo
  { 686,	3,	1,	4,	20,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo80, -1 ,nullptr },  // Inst #686 = FMULo
  { 687,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #687 = FNABSD
  { 688,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #688 = FNABSDo
  { 689,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #689 = FNABSS
  { 690,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #690 = FNABSSo
  { 691,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #691 = FNEGD
  { 692,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #692 = FNEGDo
  { 693,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #693 = FNEGS
  { 694,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #694 = FNEGSo
  { 695,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #695 = FNMADD
  { 696,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #696 = FNMADDS
  { 697,	4,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo86, -1 ,nullptr },  // Inst #697 = FNMADDSo
  { 698,	4,	1,	4,	20,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo85, -1 ,nullptr },  // Inst #698 = FNMADDo
  { 699,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #699 = FNMSUB
  { 700,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #700 = FNMSUBS
  { 701,	4,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo86, -1 ,nullptr },  // Inst #701 = FNMSUBSo
  { 702,	4,	1,	4,	20,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo85, -1 ,nullptr },  // Inst #702 = FNMSUBo
  { 703,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #703 = FRE
  { 704,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #704 = FRES
  { 705,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #705 = FRESo
  { 706,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #706 = FREo
  { 707,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #707 = FRIMD
  { 708,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #708 = FRIMDo
  { 709,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #709 = FRIMS
  { 710,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #710 = FRIMSo
  { 711,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #711 = FRIND
  { 712,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #712 = FRINDo
  { 713,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #713 = FRINS
  { 714,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #714 = FRINSo
  { 715,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #715 = FRIPD
  { 716,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #716 = FRIPDo
  { 717,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #717 = FRIPS
  { 718,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #718 = FRIPSo
  { 719,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #719 = FRIZD
  { 720,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #720 = FRIZDo
  { 721,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #721 = FRIZS
  { 722,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #722 = FRIZSo
  { 723,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #723 = FRSP
  { 724,	2,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo82, -1 ,nullptr },  // Inst #724 = FRSPo
  { 725,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #725 = FRSQRTE
  { 726,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #726 = FRSQRTES
  { 727,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #727 = FRSQRTESo
  { 728,	2,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #728 = FRSQRTEo
  { 729,	4,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #729 = FSELD
  { 730,	4,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo85, -1 ,nullptr },  // Inst #730 = FSELDo
  { 731,	4,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #731 = FSELS
  { 732,	4,	1,	4,	15,	0, 0x18ULL, nullptr, ImplicitList23, OperandInfo87, -1 ,nullptr },  // Inst #732 = FSELSo
  { 733,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #733 = FSQRT
  { 734,	2,	1,	4,	22,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #734 = FSQRTS
  { 735,	2,	1,	4,	22,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo79, -1 ,nullptr },  // Inst #735 = FSQRTSo
  { 736,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo78, -1 ,nullptr },  // Inst #736 = FSQRTo
  { 737,	3,	1,	4,	16,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #737 = FSUB
  { 738,	3,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #738 = FSUBS
  { 739,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo81, -1 ,nullptr },  // Inst #739 = FSUBSo
  { 740,	3,	1,	4,	16,	0, 0x18ULL, ImplicitList13, ImplicitList23, OperandInfo80, -1 ,nullptr },  // Inst #740 = FSUBo
  { 741,	3,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x18ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #741 = FTDIV
  { 742,	2,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x18ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #742 = FTSQRT
  { 743,	3,	1,	8,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo31, -1 ,nullptr },  // Inst #743 = GETtlsADDR
  { 744,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList25, OperandInfo28, -1 ,nullptr },  // Inst #744 = GETtlsADDR32
  { 745,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo31, -1 ,nullptr },  // Inst #745 = GETtlsldADDR
  { 746,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList25, OperandInfo28, -1 ,nullptr },  // Inst #746 = GETtlsldADDR32
  { 747,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #747 = HRFID
  { 748,	2,	0,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #748 = ICBI
  { 749,	3,	0,	4,	24,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #749 = ICBLC
  { 750,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #750 = ICBLQ
  { 751,	3,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #751 = ICBT
  { 752,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #752 = ICBTLS
  { 753,	2,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #753 = ICCCI
  { 754,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #754 = INSLWI
  { 755,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #755 = INSLWIo
  { 756,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #756 = INSRDI
  { 757,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #757 = INSRDIo
  { 758,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #758 = INSRWI
  { 759,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #759 = INSRWIo
  { 760,	4,	1,	4,	25,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #760 = ISEL
  { 761,	4,	1,	4,	25,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #761 = ISEL8
  { 762,	0,	0,	4,	26,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #762 = ISYNC
  { 763,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #763 = LA
  { 764,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #764 = LAx
  { 765,	3,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #765 = LBARX
  { 766,	3,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #766 = LBARXL
  { 767,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #767 = LBZ
  { 768,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #768 = LBZ8
  { 769,	3,	1,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #769 = LBZCIX
  { 770,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #770 = LBZU
  { 771,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #771 = LBZU8
  { 772,	4,	2,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #772 = LBZUX
  { 773,	4,	2,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #773 = LBZUX8
  { 774,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #774 = LBZX
  { 775,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #775 = LBZX8
  { 776,	3,	1,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #776 = LD
  { 777,	3,	1,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #777 = LDARX
  { 778,	3,	1,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #778 = LDARXL
  { 779,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #779 = LDAT
  { 780,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #780 = LDBRX
  { 781,	3,	1,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #781 = LDCIX
  { 782,	3,	1,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #782 = LDMX
  { 783,	4,	2,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #783 = LDU
  { 784,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #784 = LDUX
  { 785,	3,	1,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #785 = LDX
  { 786,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #786 = LDgotTprelL
  { 787,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #787 = LDgotTprelL32
  { 788,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #788 = LDtoc
  { 789,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #789 = LDtocBA
  { 790,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #790 = LDtocCPT
  { 791,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #791 = LDtocJTI
  { 792,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #792 = LDtocL
  { 793,	3,	1,	4,	119,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #793 = LFD
  { 794,	4,	2,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #794 = LFDU
  { 795,	4,	2,	4,	150,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #795 = LFDUX
  { 796,	3,	1,	4,	119,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #796 = LFDX
  { 797,	3,	1,	4,	121,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #797 = LFIWAX
  { 798,	3,	1,	4,	119,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #798 = LFIWZX
  { 799,	3,	1,	4,	121,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #799 = LFS
  { 800,	4,	2,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #800 = LFSU
  { 801,	4,	2,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #801 = LFSUX
  { 802,	3,	1,	4,	121,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #802 = LFSX
  { 803,	3,	1,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #803 = LHA
  { 804,	3,	1,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #804 = LHA8
  { 805,	3,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #805 = LHARX
  { 806,	3,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #806 = LHARXL
  { 807,	4,	2,	4,	38,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #807 = LHAU
  { 808,	4,	2,	4,	38,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #808 = LHAU8
  { 809,	4,	2,	4,	39,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #809 = LHAUX
  { 810,	4,	2,	4,	39,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #810 = LHAUX8
  { 811,	3,	1,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #811 = LHAX
  { 812,	3,	1,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #812 = LHAX8
  { 813,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #813 = LHBRX
  { 814,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #814 = LHBRX8
  { 815,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #815 = LHZ
  { 816,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #816 = LHZ8
  { 817,	3,	1,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #817 = LHZCIX
  { 818,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #818 = LHZU
  { 819,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #819 = LHZU8
  { 820,	4,	2,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #820 = LHZUX
  { 821,	4,	2,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #821 = LHZUX8
  { 822,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #822 = LHZX
  { 823,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #823 = LHZX8
  { 824,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #824 = LI
  { 825,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #825 = LI8
  { 826,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #826 = LIS
  { 827,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #827 = LIS8
  { 828,	3,	1,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #828 = LMW
  { 829,	3,	1,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #829 = LSWI
  { 830,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #830 = LVEBX
  { 831,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #831 = LVEHX
  { 832,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #832 = LVEWX
  { 833,	3,	1,	4,	12,	0, 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #833 = LVSL
  { 834,	3,	1,	4,	12,	0, 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #834 = LVSR
  { 835,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #835 = LVX
  { 836,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #836 = LVXL
  { 837,	3,	1,	4,	41,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #837 = LWA
  { 838,	3,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #838 = LWARX
  { 839,	3,	1,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #839 = LWARXL
  { 840,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #840 = LWAT
  { 841,	4,	2,	4,	39,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #841 = LWAUX
  { 842,	3,	1,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #842 = LWAX
  { 843,	3,	1,	4,	37,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #843 = LWAX_32
  { 844,	3,	1,	4,	41,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #844 = LWA_32
  { 845,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #845 = LWBRX
  { 846,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #846 = LWBRX8
  { 847,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #847 = LWZ
  { 848,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #848 = LWZ8
  { 849,	3,	1,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #849 = LWZCIX
  { 850,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #850 = LWZU
  { 851,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #851 = LWZU8
  { 852,	4,	2,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #852 = LWZUX
  { 853,	4,	2,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #853 = LWZUX8
  { 854,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #854 = LWZX
  { 855,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #855 = LWZX8
  { 856,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #856 = LWZtoc
  { 857,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #857 = LXSD
  { 858,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #858 = LXSDX
  { 859,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #859 = LXSIBZX
  { 860,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #860 = LXSIHZX
  { 861,	3,	1,	4,	120,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #861 = LXSIWAX
  { 862,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #862 = LXSIWZX
  { 863,	3,	1,	4,	120,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #863 = LXSSP
  { 864,	3,	1,	4,	120,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #864 = LXSSPX
  { 865,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #865 = LXV
  { 866,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #866 = LXVB16X
  { 867,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #867 = LXVD2X
  { 868,	3,	1,	4,	122,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #868 = LXVDSX
  { 869,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #869 = LXVH8X
  { 870,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #870 = LXVL
  { 871,	3,	1,	4,	12,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #871 = LXVLL
  { 872,	3,	1,	4,	122,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #872 = LXVW4X
  { 873,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #873 = LXVWSX
  { 874,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #874 = LXVX
  { 875,	1,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #875 = MBAR
  { 876,	2,	1,	4,	136,	0, 0x21ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #876 = MCRF
  { 877,	2,	1,	4,	138,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #877 = MCRFS
  { 878,	1,	1,	4,	137,	0, 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #878 = MCRXRX
  { 879,	3,	1,	4,	3,	0, 0x1ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #879 = MFBHRBE
  { 880,	1,	1,	4,	44,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #880 = MFCR
  { 881,	1,	1,	4,	44,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #881 = MFCR8
  { 882,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList7, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #882 = MFCTR
  { 883,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList8, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #883 = MFCTR8
  { 884,	2,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #884 = MFDCR
  { 885,	1,	1,	4,	46,	0, 0x1aULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #885 = MFFS
  { 886,	1,	1,	4,	46,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList13, ImplicitList23, OperandInfo122, -1 ,nullptr },  // Inst #886 = MFFSo
  { 887,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList10, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #887 = MFLR
  { 888,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList12, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #888 = MFLR8
  { 889,	1,	1,	4,	47,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #889 = MFMSR
  { 890,	2,	1,	4,	48,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #890 = MFOCRF
  { 891,	2,	1,	4,	48,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #891 = MFOCRF8
  { 892,	2,	1,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #892 = MFPMR
  { 893,	2,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #893 = MFSPR
  { 894,	2,	1,	4,	45,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #894 = MFSPR8
  { 895,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #895 = MFSR
  { 896,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #896 = MFSRIN
  { 897,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #897 = MFTB
  { 898,	1,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #898 = MFTB8
  { 899,	2,	1,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #899 = MFVRD
  { 900,	1,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #900 = MFVRSAVE
  { 901,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #901 = MFVRSAVEv
  { 902,	1,	1,	4,	24,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #902 = MFVSCR
  { 903,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #903 = MFVSRD
  { 904,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #904 = MFVSRLD
  { 905,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #905 = MFVSRWZ
  { 906,	3,	1,	4,	14,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #906 = MODSD
  { 907,	3,	1,	4,	14,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #907 = MODSW
  { 908,	3,	1,	4,	14,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #908 = MODUD
  { 909,	3,	1,	4,	14,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #909 = MODUW
  { 910,	0,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #910 = MSGSYNC
  { 911,	0,	0,	4,	5,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #911 = MSYNC
  { 912,	2,	0,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #912 = MTCRF
  { 913,	2,	0,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #913 = MTCRF8
  { 914,	1,	0,	4,	54,	0, 0x9ULL, nullptr, ImplicitList7, OperandInfo121, -1 ,nullptr },  // Inst #914 = MTCTR
  { 915,	1,	0,	4,	54,	0, 0x9ULL, nullptr, ImplicitList8, OperandInfo52, -1 ,nullptr },  // Inst #915 = MTCTR8
  { 916,	1,	0,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList8, OperandInfo52, -1 ,nullptr },  // Inst #916 = MTCTR8loop
  { 917,	1,	0,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList7, OperandInfo121, -1 ,nullptr },  // Inst #917 = MTCTRloop
  { 918,	2,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #918 = MTDCR
  { 919,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #919 = MTFSB0
  { 920,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #920 = MTFSB1
  { 921,	4,	0,	4,	46,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #921 = MTFSF
  { 922,	3,	1,	4,	46,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #922 = MTFSFI
  { 923,	3,	1,	4,	46,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #923 = MTFSFIo
  { 924,	2,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo134, -1 ,nullptr },  // Inst #924 = MTFSFb
  { 925,	4,	0,	4,	46,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #925 = MTFSFo
  { 926,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList10, OperandInfo121, -1 ,nullptr },  // Inst #926 = MTLR
  { 927,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList12, OperandInfo52, -1 ,nullptr },  // Inst #927 = MTLR8
  { 928,	2,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #928 = MTMSR
  { 929,	2,	0,	4,	57,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #929 = MTMSRD
  { 930,	2,	1,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #930 = MTOCRF
  { 931,	2,	1,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #931 = MTOCRF8
  { 932,	2,	0,	4,	58,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #932 = MTPMR
  { 933,	2,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #933 = MTSPR
  { 934,	2,	0,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #934 = MTSPR8
  { 935,	2,	0,	4,	59,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #935 = MTSR
  { 936,	2,	0,	4,	59,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #936 = MTSRIN
  { 937,	1,	0,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #937 = MTVRSAVE
  { 938,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #938 = MTVRSAVEv
  { 939,	1,	0,	4,	12,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #939 = MTVSCR
  { 940,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #940 = MTVSRD
  { 941,	3,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #941 = MTVSRDD
  { 942,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #942 = MTVSRWA
  { 943,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #943 = MTVSRWS
  { 944,	2,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #944 = MTVSRWZ
  { 945,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #945 = MULHD
  { 946,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #946 = MULHDU
  { 947,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #947 = MULHDUo
  { 948,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #948 = MULHDo
  { 949,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #949 = MULHW
  { 950,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #950 = MULHWU
  { 951,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #951 = MULHWUo
  { 952,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #952 = MULHWo
  { 953,	3,	1,	4,	62,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #953 = MULLD
  { 954,	3,	1,	4,	62,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #954 = MULLDo
  { 955,	3,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #955 = MULLI
  { 956,	3,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #956 = MULLI8
  { 957,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #957 = MULLW
  { 958,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #958 = MULLWo
  { 959,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #959 = MoveGOTtoLR
  { 960,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #960 = MovePCtoLR
  { 961,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #961 = MovePCtoLR8
  { 962,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #962 = NAND
  { 963,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #963 = NAND8
  { 964,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #964 = NAND8o
  { 965,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #965 = NANDo
  { 966,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #966 = NAP
  { 967,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #967 = NEG
  { 968,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #968 = NEG8
  { 969,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #969 = NEG8o
  { 970,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #970 = NEGo
  { 971,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #971 = NOP
  { 972,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #972 = NOP_GT_PWR6
  { 973,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #973 = NOP_GT_PWR7
  { 974,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #974 = NOR
  { 975,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #975 = NOR8
  { 976,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #976 = NOR8o
  { 977,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #977 = NORo
  { 978,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #978 = OR
  { 979,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #979 = OR8
  { 980,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #980 = OR8o
  { 981,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #981 = ORC
  { 982,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #982 = ORC8
  { 983,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #983 = ORC8o
  { 984,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #984 = ORCo
  { 985,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #985 = ORI
  { 986,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #986 = ORI8
  { 987,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #987 = ORIS
  { 988,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #988 = ORIS8
  { 989,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #989 = ORo
  { 990,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #990 = POPCNTD
  { 991,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #991 = POPCNTW
  { 992,	1,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #992 = PPC32GOT
  { 993,	2,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #993 = PPC32PICGOT
  { 994,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #994 = QVALIGNI
  { 995,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #995 = QVALIGNIb
  { 996,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #996 = QVALIGNIs
  { 997,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #997 = QVESPLATI
  { 998,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #998 = QVESPLATIb
  { 999,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #999 = QVESPLATIs
  { 1000,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1000 = QVFABS
  { 1001,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1001 = QVFABSs
  { 1002,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1002 = QVFADD
  { 1003,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1003 = QVFADDS
  { 1004,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1004 = QVFADDSs
  { 1005,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1005 = QVFCFID
  { 1006,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1006 = QVFCFIDS
  { 1007,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1007 = QVFCFIDU
  { 1008,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1008 = QVFCFIDUS
  { 1009,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1009 = QVFCFIDb
  { 1010,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1010 = QVFCMPEQ
  { 1011,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1011 = QVFCMPEQb
  { 1012,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1012 = QVFCMPEQbs
  { 1013,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1013 = QVFCMPGT
  { 1014,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1014 = QVFCMPGTb
  { 1015,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1015 = QVFCMPGTbs
  { 1016,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1016 = QVFCMPLT
  { 1017,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1017 = QVFCMPLTb
  { 1018,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1018 = QVFCMPLTbs
  { 1019,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1019 = QVFCPSGN
  { 1020,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1020 = QVFCPSGNs
  { 1021,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1021 = QVFCTID
  { 1022,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1022 = QVFCTIDU
  { 1023,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1023 = QVFCTIDUZ
  { 1024,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1024 = QVFCTIDZ
  { 1025,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1025 = QVFCTIDb
  { 1026,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1026 = QVFCTIW
  { 1027,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1027 = QVFCTIWU
  { 1028,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1028 = QVFCTIWUZ
  { 1029,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1029 = QVFCTIWZ
  { 1030,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #1030 = QVFLOGICAL
  { 1031,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1031 = QVFLOGICALb
  { 1032,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1032 = QVFLOGICALs
  { 1033,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1033 = QVFMADD
  { 1034,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1034 = QVFMADDS
  { 1035,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1035 = QVFMADDSs
  { 1036,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1036 = QVFMR
  { 1037,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1037 = QVFMRb
  { 1038,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1038 = QVFMRs
  { 1039,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1039 = QVFMSUB
  { 1040,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1040 = QVFMSUBS
  { 1041,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1041 = QVFMSUBSs
  { 1042,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1042 = QVFMUL
  { 1043,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1043 = QVFMULS
  { 1044,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1044 = QVFMULSs
  { 1045,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1045 = QVFNABS
  { 1046,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1046 = QVFNABSs
  { 1047,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1047 = QVFNEG
  { 1048,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1048 = QVFNEGs
  { 1049,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1049 = QVFNMADD
  { 1050,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1050 = QVFNMADDS
  { 1051,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1051 = QVFNMADDSs
  { 1052,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1052 = QVFNMSUB
  { 1053,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1053 = QVFNMSUBS
  { 1054,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1054 = QVFNMSUBSs
  { 1055,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1055 = QVFPERM
  { 1056,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1056 = QVFPERMs
  { 1057,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1057 = QVFRE
  { 1058,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1058 = QVFRES
  { 1059,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1059 = QVFRESs
  { 1060,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1060 = QVFRIM
  { 1061,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1061 = QVFRIMs
  { 1062,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1062 = QVFRIN
  { 1063,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1063 = QVFRINs
  { 1064,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1064 = QVFRIP
  { 1065,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1065 = QVFRIPs
  { 1066,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1066 = QVFRIZ
  { 1067,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1067 = QVFRIZs
  { 1068,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1068 = QVFRSP
  { 1069,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #1069 = QVFRSPs
  { 1070,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1070 = QVFRSQRTE
  { 1071,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1071 = QVFRSQRTES
  { 1072,	2,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1072 = QVFRSQRTESs
  { 1073,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1073 = QVFSEL
  { 1074,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1074 = QVFSELb
  { 1075,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1075 = QVFSELbb
  { 1076,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo161, -1 ,nullptr },  // Inst #1076 = QVFSELbs
  { 1077,	3,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1077 = QVFSUB
  { 1078,	3,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1078 = QVFSUBS
  { 1079,	3,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1079 = QVFSUBSs
  { 1080,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1080 = QVFTSTNAN
  { 1081,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1081 = QVFTSTNANb
  { 1082,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1082 = QVFTSTNANbs
  { 1083,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1083 = QVFXMADD
  { 1084,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1084 = QVFXMADDS
  { 1085,	3,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1085 = QVFXMUL
  { 1086,	3,	1,	4,	15,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1086 = QVFXMULS
  { 1087,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1087 = QVFXXCPNMADD
  { 1088,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1088 = QVFXXCPNMADDS
  { 1089,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1089 = QVFXXMADD
  { 1090,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1090 = QVFXXMADDS
  { 1091,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1091 = QVFXXNPMADD
  { 1092,	4,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1092 = QVFXXNPMADDS
  { 1093,	2,	1,	4,	64,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1093 = QVGPCI
  { 1094,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1094 = QVLFCDUX
  { 1095,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1095 = QVLFCDUXA
  { 1096,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1096 = QVLFCDX
  { 1097,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1097 = QVLFCDXA
  { 1098,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1098 = QVLFCSUX
  { 1099,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1099 = QVLFCSUXA
  { 1100,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1100 = QVLFCSX
  { 1101,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1101 = QVLFCSXA
  { 1102,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1102 = QVLFCSXs
  { 1103,	4,	2,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1103 = QVLFDUX
  { 1104,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1104 = QVLFDUXA
  { 1105,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1105 = QVLFDX
  { 1106,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1106 = QVLFDXA
  { 1107,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1107 = QVLFDXb
  { 1108,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1108 = QVLFIWAX
  { 1109,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1109 = QVLFIWAXA
  { 1110,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1110 = QVLFIWZX
  { 1111,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1111 = QVLFIWZXA
  { 1112,	4,	2,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1112 = QVLFSUX
  { 1113,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1113 = QVLFSUXA
  { 1114,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1114 = QVLFSX
  { 1115,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1115 = QVLFSXA
  { 1116,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1116 = QVLFSXb
  { 1117,	3,	1,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1117 = QVLFSXs
  { 1118,	3,	1,	4,	34,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1118 = QVLPCLDX
  { 1119,	3,	1,	4,	34,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1119 = QVLPCLSX
  { 1120,	2,	1,	4,	34,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1120 = QVLPCLSXint
  { 1121,	3,	1,	4,	34,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1121 = QVLPCRDX
  { 1122,	3,	1,	4,	34,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1122 = QVLPCRSX
  { 1123,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1123 = QVSTFCDUX
  { 1124,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1124 = QVSTFCDUXA
  { 1125,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1125 = QVSTFCDUXI
  { 1126,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1126 = QVSTFCDUXIA
  { 1127,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1127 = QVSTFCDX
  { 1128,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1128 = QVSTFCDXA
  { 1129,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1129 = QVSTFCDXI
  { 1130,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1130 = QVSTFCDXIA
  { 1131,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1131 = QVSTFCSUX
  { 1132,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1132 = QVSTFCSUXA
  { 1133,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1133 = QVSTFCSUXI
  { 1134,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1134 = QVSTFCSUXIA
  { 1135,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1135 = QVSTFCSX
  { 1136,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1136 = QVSTFCSXA
  { 1137,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1137 = QVSTFCSXI
  { 1138,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1138 = QVSTFCSXIA
  { 1139,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1139 = QVSTFCSXs
  { 1140,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1140 = QVSTFDUX
  { 1141,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1141 = QVSTFDUXA
  { 1142,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1142 = QVSTFDUXI
  { 1143,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1143 = QVSTFDUXIA
  { 1144,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1144 = QVSTFDX
  { 1145,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1145 = QVSTFDXA
  { 1146,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1146 = QVSTFDXI
  { 1147,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1147 = QVSTFDXIA
  { 1148,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1148 = QVSTFDXb
  { 1149,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1149 = QVSTFIWX
  { 1150,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1150 = QVSTFIWXA
  { 1151,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1151 = QVSTFSUX
  { 1152,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1152 = QVSTFSUXA
  { 1153,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1153 = QVSTFSUXI
  { 1154,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1154 = QVSTFSUXIA
  { 1155,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1155 = QVSTFSUXs
  { 1156,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1156 = QVSTFSX
  { 1157,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1157 = QVSTFSXA
  { 1158,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1158 = QVSTFSXI
  { 1159,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1159 = QVSTFSXIA
  { 1160,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1160 = QVSTFSXs
  { 1161,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1161 = RESTORE_CR
  { 1162,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1162 = RESTORE_CRBIT
  { 1163,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1163 = RESTORE_VRSAVE
  { 1164,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1164 = RFCI
  { 1165,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1165 = RFDI
  { 1166,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1166 = RFEBB
  { 1167,	0,	0,	4,	67,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1167 = RFI
  { 1168,	0,	0,	4,	68,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1168 = RFID
  { 1169,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1169 = RFMCI
  { 1170,	4,	1,	4,	133,	0, 0x8ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1170 = RLDCL
  { 1171,	4,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo174, -1 ,nullptr },  // Inst #1171 = RLDCLo
  { 1172,	4,	1,	4,	133,	0, 0x8ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1172 = RLDCR
  { 1173,	4,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo174, -1 ,nullptr },  // Inst #1173 = RLDCRo
  { 1174,	4,	1,	4,	132,	0, 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #1174 = RLDIC
  { 1175,	4,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #1175 = RLDICL
  { 1176,	4,	1,	4,	70,	0, 0x8ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #1176 = RLDICL_32
  { 1177,	4,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #1177 = RLDICL_32_64
  { 1178,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo54, -1 ,nullptr },  // Inst #1178 = RLDICL_32o
  { 1179,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo53, -1 ,nullptr },  // Inst #1179 = RLDICLo
  { 1180,	4,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #1180 = RLDICR
  { 1181,	4,	1,	4,	70,	0, 0x8ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #1181 = RLDICR_32
  { 1182,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo53, -1 ,nullptr },  // Inst #1182 = RLDICRo
  { 1183,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo53, -1 ,nullptr },  // Inst #1183 = RLDICo
  { 1184,	5,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo176, -1 ,nullptr },  // Inst #1184 = RLDIMI
  { 1185,	5,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo176, -1 ,nullptr },  // Inst #1185 = RLDIMIo
  { 1186,	6,	1,	4,	71,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #1186 = RLWIMI
  { 1187,	6,	1,	4,	71,	0, 0xcULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1187 = RLWIMI8
  { 1188,	6,	1,	4,	71,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo178, -1 ,nullptr },  // Inst #1188 = RLWIMI8o
  { 1189,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1189 = RLWIMIbm
  { 1190,	6,	1,	4,	71,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList1, OperandInfo177, -1 ,nullptr },  // Inst #1190 = RLWIMIo
  { 1191,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1191 = RLWIMIobm
  { 1192,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1192 = RLWINM
  { 1193,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1193 = RLWINM8
  { 1194,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo181, -1 ,nullptr },  // Inst #1194 = RLWINM8o
  { 1195,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1195 = RLWINMbm
  { 1196,	5,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo180, -1 ,nullptr },  // Inst #1196 = RLWINMo
  { 1197,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1197 = RLWINMobm
  { 1198,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1198 = RLWNM
  { 1199,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1199 = RLWNM8
  { 1200,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo183, -1 ,nullptr },  // Inst #1200 = RLWNM8o
  { 1201,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1201 = RLWNMbm
  { 1202,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo182, -1 ,nullptr },  // Inst #1202 = RLWNMo
  { 1203,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1203 = RLWNMobm
  { 1204,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1204 = ROTRDI
  { 1205,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1205 = ROTRDIo
  { 1206,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1206 = ROTRWI
  { 1207,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1207 = ROTRWIo
  { 1208,	2,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1208 = ReadTB
  { 1209,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1209 = SC
  { 1210,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1210 = SELECT_CC_F4
  { 1211,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1211 = SELECT_CC_F8
  { 1212,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1212 = SELECT_CC_I4
  { 1213,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo187, -1 ,nullptr },  // Inst #1213 = SELECT_CC_I8
  { 1214,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo188, -1 ,nullptr },  // Inst #1214 = SELECT_CC_QBRC
  { 1215,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo189, -1 ,nullptr },  // Inst #1215 = SELECT_CC_QFRC
  { 1216,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1216 = SELECT_CC_QSRC
  { 1217,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1217 = SELECT_CC_VRRC
  { 1218,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1218 = SELECT_CC_VSFRC
  { 1219,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1219 = SELECT_CC_VSRC
  { 1220,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1220 = SELECT_CC_VSSRC
  { 1221,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1221 = SELECT_F4
  { 1222,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1222 = SELECT_F8
  { 1223,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1223 = SELECT_I4
  { 1224,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1224 = SELECT_I8
  { 1225,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1225 = SELECT_QBRC
  { 1226,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1226 = SELECT_QFRC
  { 1227,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1227 = SELECT_QSRC
  { 1228,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1228 = SELECT_VRRC
  { 1229,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1229 = SELECT_VSFRC
  { 1230,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1230 = SELECT_VSRC
  { 1231,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1231 = SELECT_VSSRC
  { 1232,	0,	0,	4,	72,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1232 = SLBIA
  { 1233,	1,	0,	4,	73,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #1233 = SLBIE
  { 1234,	2,	0,	4,	74,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1234 = SLBIEG
  { 1235,	2,	1,	4,	75,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1235 = SLBMFEE
  { 1236,	2,	1,	4,	76,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1236 = SLBMFEV
  { 1237,	2,	0,	4,	77,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1237 = SLBMTE
  { 1238,	0,	0,	4,	78,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1238 = SLBSYNC
  { 1239,	3,	1,	4,	131,	0, 0x8ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1239 = SLD
  { 1240,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1240 = SLDI
  { 1241,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1241 = SLDIo
  { 1242,	3,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo202, -1 ,nullptr },  // Inst #1242 = SLDo
  { 1243,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1243 = SLW
  { 1244,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1244 = SLW8
  { 1245,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #1245 = SLW8o
  { 1246,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1246 = SLWI
  { 1247,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1247 = SLWIo
  { 1248,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #1248 = SLWo
  { 1249,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1249 = SPILL_CR
  { 1250,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1250 = SPILL_CRBIT
  { 1251,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1251 = SPILL_VRSAVE
  { 1252,	3,	1,	4,	131,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo202, -1 ,nullptr },  // Inst #1252 = SRAD
  { 1253,	3,	1,	4,	132,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo31, -1 ,nullptr },  // Inst #1253 = SRADI
  { 1254,	3,	1,	4,	70,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1254 = SRADI_32
  { 1255,	3,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo31, -1 ,nullptr },  // Inst #1255 = SRADIo
  { 1256,	3,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo202, -1 ,nullptr },  // Inst #1256 = SRADo
  { 1257,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #1257 = SRAW
  { 1258,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #1258 = SRAWI
  { 1259,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #1259 = SRAWIo
  { 1260,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #1260 = SRAWo
  { 1261,	3,	1,	4,	131,	0, 0x8ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1261 = SRD
  { 1262,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1262 = SRDI
  { 1263,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1263 = SRDIo
  { 1264,	3,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo202, -1 ,nullptr },  // Inst #1264 = SRDo
  { 1265,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1265 = SRW
  { 1266,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1266 = SRW8
  { 1267,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #1267 = SRW8o
  { 1268,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1268 = SRWI
  { 1269,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1269 = SRWIo
  { 1270,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #1270 = SRWo
  { 1271,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #1271 = STB
  { 1272,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1272 = STB8
  { 1273,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1273 = STBCIX
  { 1274,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #1274 = STBCX
  { 1275,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1275 = STBU
  { 1276,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1276 = STBU8
  { 1277,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1277 = STBUX
  { 1278,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1278 = STBUX8
  { 1279,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #1279 = STBX
  { 1280,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1280 = STBX8
  { 1281,	3,	0,	4,	82,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1281 = STD
  { 1282,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1282 = STDAT
  { 1283,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1283 = STDBRX
  { 1284,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1284 = STDCIX
  { 1285,	3,	0,	4,	83,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo97, -1 ,nullptr },  // Inst #1285 = STDCX
  { 1286,	4,	1,	4,	84,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1286 = STDU
  { 1287,	4,	1,	4,	85,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1287 = STDUX
  { 1288,	3,	0,	4,	82,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1288 = STDX
  { 1289,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #1289 = STFD
  { 1290,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1290 = STFDU
  { 1291,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1291 = STFDUX
  { 1292,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1292 = STFDX
  { 1293,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #1293 = STFIWX
  { 1294,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #1294 = STFS
  { 1295,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1295 = STFSU
  { 1296,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1296 = STFSUX
  { 1297,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #1297 = STFSX
  { 1298,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #1298 = STH
  { 1299,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1299 = STH8
  { 1300,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #1300 = STHBRX
  { 1301,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1301 = STHCIX
  { 1302,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #1302 = STHCX
  { 1303,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1303 = STHU
  { 1304,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1304 = STHU8
  { 1305,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1305 = STHUX
  { 1306,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1306 = STHUX8
  { 1307,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #1307 = STHX
  { 1308,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1308 = STHX8
  { 1309,	3,	0,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #1309 = STMW
  { 1310,	0,	0,	4,	86,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1310 = STOP
  { 1311,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1311 = STSWI
  { 1312,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1312 = STVEBX
  { 1313,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1313 = STVEHX
  { 1314,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1314 = STVEWX
  { 1315,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1315 = STVX
  { 1316,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1316 = STVXL
  { 1317,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #1317 = STW
  { 1318,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1318 = STW8
  { 1319,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1319 = STWAT
  { 1320,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #1320 = STWBRX
  { 1321,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1321 = STWCIX
  { 1322,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #1322 = STWCX
  { 1323,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1323 = STWU
  { 1324,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1324 = STWU8
  { 1325,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1325 = STWUX
  { 1326,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1326 = STWUX8
  { 1327,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #1327 = STWX
  { 1328,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1328 = STWX8
  { 1329,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1329 = STXSD
  { 1330,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #1330 = STXSDX
  { 1331,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #1331 = STXSIBX
  { 1332,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1332 = STXSIBXv
  { 1333,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #1333 = STXSIHX
  { 1334,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1334 = STXSIHXv
  { 1335,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #1335 = STXSIWX
  { 1336,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1336 = STXSSP
  { 1337,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #1337 = STXSSPX
  { 1338,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #1338 = STXV
  { 1339,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #1339 = STXVB16X
  { 1340,	3,	0,	4,	124,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #1340 = STXVD2X
  { 1341,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #1341 = STXVH8X
  { 1342,	3,	0,	4,	12,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1342 = STXVL
  { 1343,	3,	0,	4,	12,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1343 = STXVLL
  { 1344,	3,	0,	4,	124,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #1344 = STXVW4X
  { 1345,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #1345 = STXVX
  { 1346,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1346 = SUBF
  { 1347,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1347 = SUBF8
  { 1348,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #1348 = SUBF8o
  { 1349,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #1349 = SUBFC
  { 1350,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #1350 = SUBFC8
  { 1351,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #1351 = SUBFC8o
  { 1352,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #1352 = SUBFCo
  { 1353,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #1353 = SUBFE
  { 1354,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo29, -1 ,nullptr },  // Inst #1354 = SUBFE8
  { 1355,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo29, -1 ,nullptr },  // Inst #1355 = SUBFE8o
  { 1356,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #1356 = SUBFEo
  { 1357,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #1357 = SUBFIC
  { 1358,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo31, -1 ,nullptr },  // Inst #1358 = SUBFIC8
  { 1359,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #1359 = SUBFME
  { 1360,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo36, -1 ,nullptr },  // Inst #1360 = SUBFME8
  { 1361,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo36, -1 ,nullptr },  // Inst #1361 = SUBFME8o
  { 1362,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #1362 = SUBFMEo
  { 1363,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #1363 = SUBFZE
  { 1364,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo36, -1 ,nullptr },  // Inst #1364 = SUBFZE8
  { 1365,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo36, -1 ,nullptr },  // Inst #1365 = SUBFZE8o
  { 1366,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #1366 = SUBFZEo
  { 1367,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #1367 = SUBFo
  { 1368,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1368 = SUBI
  { 1369,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1369 = SUBIC
  { 1370,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1370 = SUBICo
  { 1371,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1371 = SUBIS
  { 1372,	1,	0,	4,	5,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1372 = SYNC
  { 1373,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1373 = TABORT
  { 1374,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1374 = TABORTDC
  { 1375,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1375 = TABORTDCI
  { 1376,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1376 = TABORTWC
  { 1377,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1377 = TABORTWCI
  { 1378,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1378 = TAILB
  { 1379,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1379 = TAILB8
  { 1380,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1380 = TAILBA
  { 1381,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1381 = TAILBA8
  { 1382,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, nullptr, nullptr, -1 ,nullptr },  // Inst #1382 = TAILBCTR
  { 1383,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, nullptr, nullptr, -1 ,nullptr },  // Inst #1383 = TAILBCTR8
  { 1384,	2,	1,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1384 = TBEGIN
  { 1385,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1385 = TCHECK
  { 1386,	1,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1386 = TCHECK_RET
  { 1387,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1387 = TCRETURNai
  { 1388,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1388 = TCRETURNai8
  { 1389,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1389 = TCRETURNdi
  { 1390,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1390 = TCRETURNdi8
  { 1391,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1391 = TCRETURNri
  { 1392,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1392 = TCRETURNri8
  { 1393,	3,	0,	4,	87,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1393 = TD
  { 1394,	3,	0,	4,	87,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1394 = TDI
  { 1395,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1395 = TEND
  { 1396,	0,	0,	4,	88,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1396 = TLBIA
  { 1397,	2,	0,	4,	89,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1397 = TLBIE
  { 1398,	1,	0,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #1398 = TLBIEL
  { 1399,	2,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1399 = TLBIVAX
  { 1400,	1,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #1400 = TLBLD
  { 1401,	1,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #1401 = TLBLI
  { 1402,	0,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1402 = TLBRE
  { 1403,	3,	1,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1403 = TLBRE2
  { 1404,	2,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1404 = TLBSX
  { 1405,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1405 = TLBSX2
  { 1406,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1406 = TLBSX2D
  { 1407,	0,	0,	4,	91,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1407 = TLBSYNC
  { 1408,	0,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1408 = TLBWE
  { 1409,	3,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1409 = TLBWE2
  { 1410,	0,	0,	4,	12,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1410 = TRAP
  { 1411,	1,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1411 = TRECHKPT
  { 1412,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1412 = TRECLAIM
  { 1413,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1413 = TSR
  { 1414,	3,	0,	4,	92,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #1414 = TW
  { 1415,	3,	0,	4,	92,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1415 = TWI
  { 1416,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1416 = UPDATE_VRSAVE
  { 1417,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1417 = UpdateGBR
  { 1418,	3,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1418 = VABSDUB
  { 1419,	3,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1419 = VABSDUH
  { 1420,	3,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1420 = VABSDUW
  { 1421,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1421 = VADDCUQ
  { 1422,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1422 = VADDCUW
  { 1423,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1423 = VADDECUQ
  { 1424,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1424 = VADDEUQM
  { 1425,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1425 = VADDFP
  { 1426,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1426 = VADDSBS
  { 1427,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1427 = VADDSHS
  { 1428,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1428 = VADDSWS
  { 1429,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1429 = VADDUBM
  { 1430,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1430 = VADDUBS
  { 1431,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1431 = VADDUDM
  { 1432,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1432 = VADDUHM
  { 1433,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1433 = VADDUHS
  { 1434,	3,	1,	4,	111,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1434 = VADDUQM
  { 1435,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1435 = VADDUWM
  { 1436,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1436 = VADDUWS
  { 1437,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1437 = VAND
  { 1438,	3,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1438 = VANDC
  { 1439,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1439 = VAVGSB
  { 1440,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1440 = VAVGSH
  { 1441,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1441 = VAVGSW
  { 1442,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1442 = VAVGUB
  { 1443,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1443 = VAVGUH
  { 1444,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1444 = VAVGUW
  { 1445,	3,	1,	4,	104,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1445 = VBPERMD
  { 1446,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1446 = VBPERMQ
  { 1447,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1447 = VCFSX
  { 1448,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1448 = VCFSX_0
  { 1449,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1449 = VCFUX
  { 1450,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1450 = VCFUX_0
  { 1451,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1451 = VCIPHER
  { 1452,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1452 = VCIPHERLAST
  { 1453,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1453 = VCLZB
  { 1454,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1454 = VCLZD
  { 1455,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1455 = VCLZH
  { 1456,	2,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1456 = VCLZLSBB
  { 1457,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1457 = VCLZW
  { 1458,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1458 = VCMPBFP
  { 1459,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1459 = VCMPBFPo
  { 1460,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1460 = VCMPEQFP
  { 1461,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1461 = VCMPEQFPo
  { 1462,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1462 = VCMPEQUB
  { 1463,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1463 = VCMPEQUBo
  { 1464,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1464 = VCMPEQUD
  { 1465,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1465 = VCMPEQUDo
  { 1466,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1466 = VCMPEQUH
  { 1467,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1467 = VCMPEQUHo
  { 1468,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1468 = VCMPEQUW
  { 1469,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1469 = VCMPEQUWo
  { 1470,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1470 = VCMPGEFP
  { 1471,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1471 = VCMPGEFPo
  { 1472,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1472 = VCMPGTFP
  { 1473,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1473 = VCMPGTFPo
  { 1474,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1474 = VCMPGTSB
  { 1475,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1475 = VCMPGTSBo
  { 1476,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1476 = VCMPGTSD
  { 1477,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1477 = VCMPGTSDo
  { 1478,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1478 = VCMPGTSH
  { 1479,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1479 = VCMPGTSHo
  { 1480,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1480 = VCMPGTSW
  { 1481,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1481 = VCMPGTSWo
  { 1482,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1482 = VCMPGTUB
  { 1483,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1483 = VCMPGTUBo
  { 1484,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1484 = VCMPGTUD
  { 1485,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1485 = VCMPGTUDo
  { 1486,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1486 = VCMPGTUH
  { 1487,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1487 = VCMPGTUHo
  { 1488,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1488 = VCMPGTUW
  { 1489,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1489 = VCMPGTUWo
  { 1490,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1490 = VCMPNEB
  { 1491,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1491 = VCMPNEBo
  { 1492,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1492 = VCMPNEH
  { 1493,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1493 = VCMPNEHo
  { 1494,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1494 = VCMPNEW
  { 1495,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1495 = VCMPNEWo
  { 1496,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1496 = VCMPNEZB
  { 1497,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1497 = VCMPNEZBo
  { 1498,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1498 = VCMPNEZH
  { 1499,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1499 = VCMPNEZHo
  { 1500,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1500 = VCMPNEZW
  { 1501,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #1501 = VCMPNEZWo
  { 1502,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1502 = VCTSXS
  { 1503,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1503 = VCTSXS_0
  { 1504,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1504 = VCTUXS
  { 1505,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1505 = VCTUXS_0
  { 1506,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1506 = VCTZB
  { 1507,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1507 = VCTZD
  { 1508,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1508 = VCTZH
  { 1509,	2,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1509 = VCTZLSBB
  { 1510,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1510 = VCTZW
  { 1511,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1511 = VEQV
  { 1512,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1512 = VEXPTEFP
  { 1513,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1513 = VEXTRACTD
  { 1514,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1514 = VEXTRACTUB
  { 1515,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1515 = VEXTRACTUH
  { 1516,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1516 = VEXTRACTUW
  { 1517,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1517 = VEXTSB2D
  { 1518,	2,	1,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1518 = VEXTSB2Ds
  { 1519,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1519 = VEXTSB2W
  { 1520,	2,	1,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1520 = VEXTSB2Ws
  { 1521,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1521 = VEXTSH2D
  { 1522,	2,	1,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1522 = VEXTSH2Ds
  { 1523,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1523 = VEXTSH2W
  { 1524,	2,	1,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1524 = VEXTSH2Ws
  { 1525,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1525 = VEXTSW2D
  { 1526,	2,	1,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1526 = VEXTSW2Ds
  { 1527,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1527 = VEXTUBLX
  { 1528,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1528 = VEXTUBRX
  { 1529,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1529 = VEXTUHLX
  { 1530,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1530 = VEXTUHRX
  { 1531,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1531 = VEXTUWLX
  { 1532,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1532 = VEXTUWRX
  { 1533,	2,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1533 = VGBBD
  { 1534,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1534 = VINSERTB
  { 1535,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1535 = VINSERTD
  { 1536,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1536 = VINSERTH
  { 1537,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1537 = VINSERTW
  { 1538,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1538 = VLOGEFP
  { 1539,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1539 = VMADDFP
  { 1540,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1540 = VMAXFP
  { 1541,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1541 = VMAXSB
  { 1542,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1542 = VMAXSD
  { 1543,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1543 = VMAXSH
  { 1544,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1544 = VMAXSW
  { 1545,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1545 = VMAXUB
  { 1546,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1546 = VMAXUD
  { 1547,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1547 = VMAXUH
  { 1548,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1548 = VMAXUW
  { 1549,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1549 = VMHADDSHS
  { 1550,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1550 = VMHRADDSHS
  { 1551,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1551 = VMINFP
  { 1552,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1552 = VMINSB
  { 1553,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1553 = VMINSD
  { 1554,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1554 = VMINSH
  { 1555,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1555 = VMINSW
  { 1556,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1556 = VMINUB
  { 1557,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1557 = VMINUD
  { 1558,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1558 = VMINUH
  { 1559,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1559 = VMINUW
  { 1560,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1560 = VMLADDUHM
  { 1561,	3,	1,	4,	94,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1561 = VMRGEW
  { 1562,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1562 = VMRGHB
  { 1563,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1563 = VMRGHH
  { 1564,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1564 = VMRGHW
  { 1565,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1565 = VMRGLB
  { 1566,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1566 = VMRGLH
  { 1567,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1567 = VMRGLW
  { 1568,	3,	1,	4,	94,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1568 = VMRGOW
  { 1569,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1569 = VMSUMMBM
  { 1570,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1570 = VMSUMSHM
  { 1571,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1571 = VMSUMSHS
  { 1572,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1572 = VMSUMUBM
  { 1573,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1573 = VMSUMUHM
  { 1574,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1574 = VMSUMUHS
  { 1575,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1575 = VMUL10CUQ
  { 1576,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1576 = VMUL10ECUQ
  { 1577,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1577 = VMUL10EUQ
  { 1578,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1578 = VMUL10UQ
  { 1579,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1579 = VMULESB
  { 1580,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1580 = VMULESH
  { 1581,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1581 = VMULESW
  { 1582,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1582 = VMULEUB
  { 1583,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1583 = VMULEUH
  { 1584,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1584 = VMULEUW
  { 1585,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1585 = VMULOSB
  { 1586,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1586 = VMULOSH
  { 1587,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1587 = VMULOSW
  { 1588,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1588 = VMULOUB
  { 1589,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1589 = VMULOUH
  { 1590,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1590 = VMULOUW
  { 1591,	3,	1,	4,	107,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1591 = VMULUWM
  { 1592,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1592 = VNAND
  { 1593,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1593 = VNCIPHER
  { 1594,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1594 = VNCIPHERLAST
  { 1595,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1595 = VNEGD
  { 1596,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1596 = VNEGW
  { 1597,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1597 = VNMSUBFP
  { 1598,	3,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1598 = VNOR
  { 1599,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1599 = VOR
  { 1600,	3,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1600 = VORC
  { 1601,	4,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1601 = VPERM
  { 1602,	4,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1602 = VPERMR
  { 1603,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1603 = VPERMXOR
  { 1604,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1604 = VPKPX
  { 1605,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1605 = VPKSDSS
  { 1606,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1606 = VPKSDUS
  { 1607,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1607 = VPKSHSS
  { 1608,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1608 = VPKSHUS
  { 1609,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1609 = VPKSWSS
  { 1610,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1610 = VPKSWUS
  { 1611,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1611 = VPKUDUM
  { 1612,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1612 = VPKUDUS
  { 1613,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1613 = VPKUHUM
  { 1614,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1614 = VPKUHUS
  { 1615,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1615 = VPKUWUM
  { 1616,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1616 = VPKUWUS
  { 1617,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1617 = VPMSUMB
  { 1618,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1618 = VPMSUMD
  { 1619,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1619 = VPMSUMH
  { 1620,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1620 = VPMSUMW
  { 1621,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1621 = VPOPCNTB
  { 1622,	2,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1622 = VPOPCNTD
  { 1623,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1623 = VPOPCNTH
  { 1624,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1624 = VPOPCNTW
  { 1625,	2,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1625 = VPRTYBD
  { 1626,	2,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1626 = VPRTYBQ
  { 1627,	2,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1627 = VPRTYBW
  { 1628,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1628 = VREFP
  { 1629,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1629 = VRFIM
  { 1630,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1630 = VRFIN
  { 1631,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1631 = VRFIP
  { 1632,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1632 = VRFIZ
  { 1633,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1633 = VRLB
  { 1634,	3,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1634 = VRLD
  { 1635,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1635 = VRLDMI
  { 1636,	3,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1636 = VRLDNM
  { 1637,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1637 = VRLH
  { 1638,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1638 = VRLW
  { 1639,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1639 = VRLWMI
  { 1640,	3,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1640 = VRLWNM
  { 1641,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1641 = VRSQRTEFP
  { 1642,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1642 = VSBOX
  { 1643,	4,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1643 = VSEL
  { 1644,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1644 = VSHASIGMAD
  { 1645,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1645 = VSHASIGMAW
  { 1646,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1646 = VSL
  { 1647,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1647 = VSLB
  { 1648,	3,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1648 = VSLD
  { 1649,	4,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1649 = VSLDOI
  { 1650,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1650 = VSLH
  { 1651,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1651 = VSLO
  { 1652,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1652 = VSLV
  { 1653,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1653 = VSLW
  { 1654,	3,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1654 = VSPLTB
  { 1655,	3,	1,	4,	64,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1655 = VSPLTBs
  { 1656,	3,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1656 = VSPLTH
  { 1657,	3,	1,	4,	64,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1657 = VSPLTHs
  { 1658,	2,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1658 = VSPLTISB
  { 1659,	2,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1659 = VSPLTISH
  { 1660,	2,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1660 = VSPLTISW
  { 1661,	3,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1661 = VSPLTW
  { 1662,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1662 = VSR
  { 1663,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1663 = VSRAB
  { 1664,	3,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1664 = VSRAD
  { 1665,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1665 = VSRAH
  { 1666,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1666 = VSRAW
  { 1667,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1667 = VSRB
  { 1668,	3,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1668 = VSRD
  { 1669,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1669 = VSRH
  { 1670,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1670 = VSRO
  { 1671,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1671 = VSRV
  { 1672,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1672 = VSRW
  { 1673,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1673 = VSUBCUQ
  { 1674,	3,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1674 = VSUBCUW
  { 1675,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1675 = VSUBECUQ
  { 1676,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1676 = VSUBEUQM
  { 1677,	3,	1,	4,	107,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1677 = VSUBFP
  { 1678,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1678 = VSUBSBS
  { 1679,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1679 = VSUBSHS
  { 1680,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1680 = VSUBSWS
  { 1681,	3,	1,	4,	95,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1681 = VSUBUBM
  { 1682,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1682 = VSUBUBS
  { 1683,	3,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1683 = VSUBUDM
  { 1684,	3,	1,	4,	95,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1684 = VSUBUHM
  { 1685,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1685 = VSUBUHS
  { 1686,	3,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1686 = VSUBUQM
  { 1687,	3,	1,	4,	95,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1687 = VSUBUWM
  { 1688,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1688 = VSUBUWS
  { 1689,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1689 = VSUM2SWS
  { 1690,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1690 = VSUM4SBS
  { 1691,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1691 = VSUM4SHS
  { 1692,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1692 = VSUM4UBS
  { 1693,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1693 = VSUMSWS
  { 1694,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1694 = VUPKHPX
  { 1695,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1695 = VUPKHSB
  { 1696,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1696 = VUPKHSH
  { 1697,	2,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1697 = VUPKHSW
  { 1698,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1698 = VUPKLPX
  { 1699,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1699 = VUPKLSB
  { 1700,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1700 = VUPKLSH
  { 1701,	2,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1701 = VUPKLSW
  { 1702,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1702 = VXOR
  { 1703,	1,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1703 = V_SET0
  { 1704,	1,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1704 = V_SET0B
  { 1705,	1,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1705 = V_SET0H
  { 1706,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1706 = V_SETALLONES
  { 1707,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1707 = V_SETALLONESB
  { 1708,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1708 = V_SETALLONESH
  { 1709,	1,	0,	4,	12,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1709 = WAIT
  { 1710,	1,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #1710 = WRTEE
  { 1711,	1,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1711 = WRTEEI
  { 1712,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1712 = XOR
  { 1713,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #1713 = XOR8
  { 1714,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #1714 = XOR8o
  { 1715,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1715 = XORI
  { 1716,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1716 = XORI8
  { 1717,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1717 = XORIS
  { 1718,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #1718 = XORIS8
  { 1719,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #1719 = XORo
  { 1720,	2,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1720 = XSABSDP
  { 1721,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1721 = XSABSQP
  { 1722,	3,	1,	4,	109,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1722 = XSADDDP
  { 1723,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1723 = XSADDQP
  { 1724,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1724 = XSADDQPO
  { 1725,	3,	1,	4,	109,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1725 = XSADDSP
  { 1726,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1726 = XSCMPEQDP
  { 1727,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1727 = XSCMPEXPDP
  { 1728,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1728 = XSCMPEXPQP
  { 1729,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1729 = XSCMPGEDP
  { 1730,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1730 = XSCMPGTDP
  { 1731,	3,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1731 = XSCMPNEDP
  { 1732,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1732 = XSCMPODP
  { 1733,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1733 = XSCMPOQP
  { 1734,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1734 = XSCMPUDP
  { 1735,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1735 = XSCMPUQP
  { 1736,	3,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1736 = XSCPSGNDP
  { 1737,	3,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1737 = XSCPSGNQP
  { 1738,	2,	1,	4,	109,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1738 = XSCVDPHP
  { 1739,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1739 = XSCVDPQP
  { 1740,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1740 = XSCVDPSP
  { 1741,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1741 = XSCVDPSPN
  { 1742,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1742 = XSCVDPSXDS
  { 1743,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1743 = XSCVDPSXDSs
  { 1744,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1744 = XSCVDPSXWS
  { 1745,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1745 = XSCVDPSXWSs
  { 1746,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1746 = XSCVDPUXDS
  { 1747,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1747 = XSCVDPUXDSs
  { 1748,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1748 = XSCVDPUXWS
  { 1749,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1749 = XSCVDPUXWSs
  { 1750,	2,	1,	4,	109,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1750 = XSCVHPDP
  { 1751,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1751 = XSCVQPDP
  { 1752,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1752 = XSCVQPDPO
  { 1753,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1753 = XSCVQPSDZ
  { 1754,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1754 = XSCVQPSWZ
  { 1755,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1755 = XSCVQPUDZ
  { 1756,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1756 = XSCVQPUWZ
  { 1757,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1757 = XSCVSDQP
  { 1758,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1758 = XSCVSPDP
  { 1759,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1759 = XSCVSPDPN
  { 1760,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1760 = XSCVSXDDP
  { 1761,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1761 = XSCVSXDSP
  { 1762,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1762 = XSCVUDQP
  { 1763,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1763 = XSCVUXDDP
  { 1764,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1764 = XSCVUXDSP
  { 1765,	3,	1,	4,	139,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1765 = XSDIVDP
  { 1766,	3,	1,	4,	116,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1766 = XSDIVQP
  { 1767,	3,	1,	4,	116,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1767 = XSDIVQPO
  { 1768,	3,	1,	4,	140,	0, 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1768 = XSDIVSP
  { 1769,	3,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1769 = XSIEXPDP
  { 1770,	3,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1770 = XSIEXPQP
  { 1771,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1771 = XSMADDADP
  { 1772,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1772 = XSMADDASP
  { 1773,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1773 = XSMADDMDP
  { 1774,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1774 = XSMADDMSP
  { 1775,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1775 = XSMADDQP
  { 1776,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1776 = XSMADDQPO
  { 1777,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1777 = XSMAXCDP
  { 1778,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1778 = XSMAXDP
  { 1779,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1779 = XSMAXJDP
  { 1780,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1780 = XSMINCDP
  { 1781,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1781 = XSMINDP
  { 1782,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1782 = XSMINJDP
  { 1783,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1783 = XSMSUBADP
  { 1784,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1784 = XSMSUBASP
  { 1785,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1785 = XSMSUBMDP
  { 1786,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1786 = XSMSUBMSP
  { 1787,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1787 = XSMSUBQP
  { 1788,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1788 = XSMSUBQPO
  { 1789,	3,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1789 = XSMULDP
  { 1790,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1790 = XSMULQP
  { 1791,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1791 = XSMULQPO
  { 1792,	3,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1792 = XSMULSP
  { 1793,	2,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1793 = XSNABSDP
  { 1794,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1794 = XSNABSQP
  { 1795,	2,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1795 = XSNEGDP
  { 1796,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1796 = XSNEGQP
  { 1797,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1797 = XSNMADDADP
  { 1798,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1798 = XSNMADDASP
  { 1799,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1799 = XSNMADDMDP
  { 1800,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1800 = XSNMADDMSP
  { 1801,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1801 = XSNMADDQP
  { 1802,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1802 = XSNMADDQPO
  { 1803,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1803 = XSNMSUBADP
  { 1804,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1804 = XSNMSUBASP
  { 1805,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1805 = XSNMSUBMDP
  { 1806,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1806 = XSNMSUBMSP
  { 1807,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1807 = XSNMSUBQP
  { 1808,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1808 = XSNMSUBQPO
  { 1809,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1809 = XSRDPI
  { 1810,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1810 = XSRDPIC
  { 1811,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1811 = XSRDPIM
  { 1812,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1812 = XSRDPIP
  { 1813,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1813 = XSRDPIZ
  { 1814,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1814 = XSREDP
  { 1815,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1815 = XSRESP
  { 1816,	4,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1816 = XSRQPI
  { 1817,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1817 = XSRQPIX
  { 1818,	4,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1818 = XSRQPXP
  { 1819,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1819 = XSRSQRTEDP
  { 1820,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1820 = XSRSQRTESP
  { 1821,	2,	1,	4,	21,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1821 = XSSQRTDP
  { 1822,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1822 = XSSQRTQP
  { 1823,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1823 = XSSQRTQPO
  { 1824,	2,	1,	4,	22,	0, 0x40ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1824 = XSSQRTSP
  { 1825,	3,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1825 = XSSUBDP
  { 1826,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1826 = XSSUBQP
  { 1827,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1827 = XSSUBQPO
  { 1828,	3,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1828 = XSSUBSP
  { 1829,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1829 = XSTDIVDP
  { 1830,	2,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo248, -1 ,nullptr },  // Inst #1830 = XSTSQRTDP
  { 1831,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1831 = XSTSTDCDP
  { 1832,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1832 = XSTSTDCQP
  { 1833,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1833 = XSTSTDCSP
  { 1834,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #1834 = XSXEXPDP
  { 1835,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1835 = XSXEXPQP
  { 1836,	2,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #1836 = XSXSIGDP
  { 1837,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1837 = XSXSIGQP
  { 1838,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1838 = XVABSDP
  { 1839,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1839 = XVABSSP
  { 1840,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1840 = XVADDDP
  { 1841,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1841 = XVADDSP
  { 1842,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1842 = XVCMPEQDP
  { 1843,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1843 = XVCMPEQDPo
  { 1844,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1844 = XVCMPEQSP
  { 1845,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1845 = XVCMPEQSPo
  { 1846,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1846 = XVCMPGEDP
  { 1847,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1847 = XVCMPGEDPo
  { 1848,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1848 = XVCMPGESP
  { 1849,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1849 = XVCMPGESPo
  { 1850,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1850 = XVCMPGTDP
  { 1851,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1851 = XVCMPGTDPo
  { 1852,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1852 = XVCMPGTSP
  { 1853,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1853 = XVCMPGTSPo
  { 1854,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1854 = XVCMPNEDP
  { 1855,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1855 = XVCMPNEDPo
  { 1856,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1856 = XVCMPNESP
  { 1857,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, ImplicitList15, OperandInfo252, -1 ,nullptr },  // Inst #1857 = XVCMPNESPo
  { 1858,	3,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1858 = XVCPSGNDP
  { 1859,	3,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1859 = XVCPSGNSP
  { 1860,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1860 = XVCVDPSP
  { 1861,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1861 = XVCVDPSXDS
  { 1862,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1862 = XVCVDPSXWS
  { 1863,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1863 = XVCVDPUXDS
  { 1864,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1864 = XVCVDPUXWS
  { 1865,	2,	1,	4,	106,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1865 = XVCVHPSP
  { 1866,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1866 = XVCVSPDP
  { 1867,	2,	1,	4,	106,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1867 = XVCVSPHP
  { 1868,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1868 = XVCVSPSXDS
  { 1869,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1869 = XVCVSPSXWS
  { 1870,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1870 = XVCVSPUXDS
  { 1871,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1871 = XVCVSPUXWS
  { 1872,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1872 = XVCVSXDDP
  { 1873,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1873 = XVCVSXDSP
  { 1874,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1874 = XVCVSXWDP
  { 1875,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1875 = XVCVSXWSP
  { 1876,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1876 = XVCVUXDDP
  { 1877,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1877 = XVCVUXDSP
  { 1878,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1878 = XVCVUXWDP
  { 1879,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1879 = XVCVUXWSP
  { 1880,	3,	1,	4,	142,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1880 = XVDIVDP
  { 1881,	3,	1,	4,	141,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1881 = XVDIVSP
  { 1882,	3,	1,	4,	94,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1882 = XVIEXPDP
  { 1883,	3,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1883 = XVIEXPSP
  { 1884,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1884 = XVMADDADP
  { 1885,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1885 = XVMADDASP
  { 1886,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1886 = XVMADDMDP
  { 1887,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1887 = XVMADDMSP
  { 1888,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1888 = XVMAXDP
  { 1889,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1889 = XVMAXSP
  { 1890,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1890 = XVMINDP
  { 1891,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1891 = XVMINSP
  { 1892,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1892 = XVMSUBADP
  { 1893,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1893 = XVMSUBASP
  { 1894,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1894 = XVMSUBMDP
  { 1895,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1895 = XVMSUBMSP
  { 1896,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1896 = XVMULDP
  { 1897,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1897 = XVMULSP
  { 1898,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1898 = XVNABSDP
  { 1899,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1899 = XVNABSSP
  { 1900,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1900 = XVNEGDP
  { 1901,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1901 = XVNEGSP
  { 1902,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1902 = XVNMADDADP
  { 1903,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1903 = XVNMADDASP
  { 1904,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1904 = XVNMADDMDP
  { 1905,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1905 = XVNMADDMSP
  { 1906,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1906 = XVNMSUBADP
  { 1907,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1907 = XVNMSUBASP
  { 1908,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1908 = XVNMSUBMDP
  { 1909,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1909 = XVNMSUBMSP
  { 1910,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1910 = XVRDPI
  { 1911,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1911 = XVRDPIC
  { 1912,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1912 = XVRDPIM
  { 1913,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1913 = XVRDPIP
  { 1914,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1914 = XVRDPIZ
  { 1915,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1915 = XVREDP
  { 1916,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1916 = XVRESP
  { 1917,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1917 = XVRSPI
  { 1918,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1918 = XVRSPIC
  { 1919,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1919 = XVRSPIM
  { 1920,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1920 = XVRSPIP
  { 1921,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1921 = XVRSPIZ
  { 1922,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1922 = XVRSQRTEDP
  { 1923,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1923 = XVRSQRTESP
  { 1924,	2,	1,	4,	21,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1924 = XVSQRTDP
  { 1925,	2,	1,	4,	22,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1925 = XVSQRTSP
  { 1926,	3,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1926 = XVSUBDP
  { 1927,	3,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1927 = XVSUBSP
  { 1928,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo254, -1 ,nullptr },  // Inst #1928 = XVTDIVDP
  { 1929,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo254, -1 ,nullptr },  // Inst #1929 = XVTDIVSP
  { 1930,	2,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo255, -1 ,nullptr },  // Inst #1930 = XVTSQRTDP
  { 1931,	2,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo255, -1 ,nullptr },  // Inst #1931 = XVTSQRTSP
  { 1932,	3,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo256, -1 ,nullptr },  // Inst #1932 = XVTSTDCDP
  { 1933,	3,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo256, -1 ,nullptr },  // Inst #1933 = XVTSTDCSP
  { 1934,	2,	1,	4,	94,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1934 = XVXEXPDP
  { 1935,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1935 = XVXEXPSP
  { 1936,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1936 = XVXSIGDP
  { 1937,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1937 = XVXSIGSP
  { 1938,	2,	1,	4,	110,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1938 = XXBRD
  { 1939,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1939 = XXBRH
  { 1940,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1940 = XXBRQ
  { 1941,	2,	1,	4,	110,	0, 0x40ULL, nullptr, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1941 = XXBRW
  { 1942,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo257, -1 ,nullptr },  // Inst #1942 = XXEXTRACTUW
  { 1943,	4,	1,	4,	110,	0, 0x40ULL, nullptr, nullptr, OperandInfo258, -1 ,nullptr },  // Inst #1943 = XXINSERTW
  { 1944,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1944 = XXLAND
  { 1945,	3,	1,	4,	95,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1945 = XXLANDC
  { 1946,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1946 = XXLEQV
  { 1947,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1947 = XXLNAND
  { 1948,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1948 = XXLNOR
  { 1949,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1949 = XXLOR
  { 1950,	3,	1,	4,	95,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1950 = XXLORC
  { 1951,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1951 = XXLORf
  { 1952,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1952 = XXLXOR
  { 1953,	1,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo259, -1 ,nullptr },  // Inst #1953 = XXLXORdpz
  { 1954,	1,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo260, -1 ,nullptr },  // Inst #1954 = XXLXORspz
  { 1955,	1,	1,	4,	52,	0, 0x40ULL, nullptr, nullptr, OperandInfo261, -1 ,nullptr },  // Inst #1955 = XXLXORz
  { 1956,	3,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1956 = XXMRGHW
  { 1957,	3,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1957 = XXMRGLW
  { 1958,	3,	1,	4,	112,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1958 = XXPERM
  { 1959,	4,	1,	4,	64,	0, 0x40ULL, nullptr, nullptr, OperandInfo262, -1 ,nullptr },  // Inst #1959 = XXPERMDI
  { 1960,	3,	1,	4,	64,	0, 0x40ULL, nullptr, nullptr, OperandInfo263, -1 ,nullptr },  // Inst #1960 = XXPERMDIs
  { 1961,	3,	1,	4,	112,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1961 = XXPERMR
  { 1962,	4,	1,	4,	97,	0, 0x40ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1962 = XXSEL
  { 1963,	4,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo262, -1 ,nullptr },  // Inst #1963 = XXSLDWI
  { 1964,	2,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo265, -1 ,nullptr },  // Inst #1964 = XXSPLTIB
  { 1965,	3,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo266, -1 ,nullptr },  // Inst #1965 = XXSPLTW
  { 1966,	3,	1,	4,	64,	0, 0x40ULL, nullptr, nullptr, OperandInfo267, -1 ,nullptr },  // Inst #1966 = XXSPLTWs
  { 1967,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo268, -1 ,nullptr },  // Inst #1967 = gBC
  { 1968,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo268, -1 ,nullptr },  // Inst #1968 = gBCA
  { 1969,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo269, -1 ,nullptr },  // Inst #1969 = gBCAat
  { 1970,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo270, -1 ,nullptr },  // Inst #1970 = gBCCTR
  { 1971,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList26, OperandInfo270, -1 ,nullptr },  // Inst #1971 = gBCCTRL
  { 1972,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList26, OperandInfo268, -1 ,nullptr },  // Inst #1972 = gBCL
  { 1973,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList26, OperandInfo268, -1 ,nullptr },  // Inst #1973 = gBCLA
  { 1974,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList26, OperandInfo269, -1 ,nullptr },  // Inst #1974 = gBCLAat
  { 1975,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo270, -1 ,nullptr },  // Inst #1975 = gBCLR
  { 1976,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList26, OperandInfo270, -1 ,nullptr },  // Inst #1976 = gBCLRL
  { 1977,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList26, OperandInfo269, -1 ,nullptr },  // Inst #1977 = gBCLat
  { 1978,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo269, -1 ,nullptr },  // Inst #1978 = gBCat
};

extern const char PPCInstrNameData[] = {
  /* 0 */ 'M', 'T', 'F', 'S', 'B', '0', 0,
  /* 7 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 14 */ 'V', 'C', 'T', 'S', 'X', 'S', '_', '0', 0,
  /* 23 */ 'V', 'C', 'T', 'U', 'X', 'S', '_', '0', 0,
  /* 32 */ 'V', 'C', 'F', 'S', 'X', '_', '0', 0,
  /* 40 */ 'V', 'C', 'F', 'U', 'X', '_', '0', 0,
  /* 48 */ 'M', 'T', 'F', 'S', 'B', '1', 0,
  /* 55 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 71 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 91 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 132 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 173 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 193 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 209 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 229 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 249 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 268 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 289 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 309 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 322 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 335 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 349 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 363 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 380 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 397 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 412 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 425 */ 'L', 'W', 'A', '_', '3', '2', 0,
  /* 432 */ 'S', 'R', 'A', 'D', 'I', '_', '3', '2', 0,
  /* 441 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', 0,
  /* 451 */ 'R', 'L', 'D', 'I', 'C', 'R', '_', '3', '2', 0,
  /* 461 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', 0,
  /* 470 */ 'L', 'W', 'A', 'X', '_', '3', '2', 0,
  /* 478 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 488 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 499 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 517 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 534 */ 'T', 'L', 'B', 'R', 'E', '2', 0,
  /* 541 */ 'T', 'L', 'B', 'W', 'E', '2', 0,
  /* 548 */ 'T', 'L', 'B', 'S', 'X', '2', 0,
  /* 555 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 575 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 595 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 616 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 636 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 657 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 677 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 693 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 713 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 733 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 752 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 773 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 793 */ 'D', 'S', 'T', '6', '4', 0,
  /* 799 */ 'D', 'S', 'T', 'S', 'T', '6', '4', 0,
  /* 807 */ 'D', 'S', 'T', 'T', '6', '4', 0,
  /* 814 */ 'D', 'S', 'T', 'S', 'T', 'T', '6', '4', 0,
  /* 823 */ 'E', 'X', 'T', 'S', 'B', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 836 */ 'E', 'X', 'T', 'S', 'H', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 849 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', '6', '4', 0,
  /* 862 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 0,
  /* 874 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 884 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 895 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 913 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 930 */ 'A', 'D', 'D', '4', 0,
  /* 935 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 948 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 958 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 971 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 981 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 1001 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 1021 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1042 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1062 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1083 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1103 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1119 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1139 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1159 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1178 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1199 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1219 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '6', 0,
  /* 1231 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '7', 0,
  /* 1243 */ 'T', 'A', 'I', 'L', 'B', 'A', '8', 0,
  /* 1251 */ 'L', 'H', 'A', '8', 0,
  /* 1256 */ 'B', 'L', 'A', '8', 0,
  /* 1261 */ 'T', 'A', 'I', 'L', 'B', '8', 0,
  /* 1268 */ 'C', 'M', 'P', 'B', '8', 0,
  /* 1274 */ 'C', 'M', 'P', 'R', 'B', '8', 0,
  /* 1281 */ 'E', 'X', 'T', 'S', 'B', '8', 0,
  /* 1288 */ 'M', 'F', 'T', 'B', '8', 0,
  /* 1294 */ 'S', 'T', 'B', '8', 0,
  /* 1299 */ 'A', 'D', 'D', 'C', '8', 0,
  /* 1305 */ 'A', 'N', 'D', 'C', '8', 0,
  /* 1311 */ 'S', 'U', 'B', 'F', 'C', '8', 0,
  /* 1318 */ 'A', 'D', 'D', 'I', 'C', '8', 0,
  /* 1325 */ 'S', 'U', 'B', 'F', 'I', 'C', '8', 0,
  /* 1333 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 1343 */ 'O', 'R', 'C', '8', 0,
  /* 1348 */ 'A', 'D', 'D', '8', 0,
  /* 1353 */ 'N', 'A', 'N', 'D', '8', 0,
  /* 1359 */ 'C', 'F', 'E', 'N', 'C', 'E', '8', 0,
  /* 1367 */ 'A', 'D', 'D', 'E', '8', 0,
  /* 1373 */ 'S', 'U', 'B', 'F', 'E', '8', 0,
  /* 1380 */ 'A', 'D', 'D', 'M', 'E', '8', 0,
  /* 1387 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 0,
  /* 1395 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 0,
  /* 1405 */ 'A', 'D', 'D', 'Z', 'E', '8', 0,
  /* 1412 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 0,
  /* 1420 */ 'S', 'U', 'B', 'F', '8', 0,
  /* 1426 */ 'M', 'F', 'O', 'C', 'R', 'F', '8', 0,
  /* 1434 */ 'M', 'T', 'O', 'C', 'R', 'F', '8', 0,
  /* 1442 */ 'M', 'T', 'C', 'R', 'F', '8', 0,
  /* 1449 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 1462 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 1472 */ 'N', 'E', 'G', '8', 0,
  /* 1477 */ 'E', 'X', 'T', 'S', 'H', '8', 0,
  /* 1484 */ 'S', 'T', 'H', '8', 0,
  /* 1489 */ 'A', 'D', 'D', 'I', '8', 0,
  /* 1495 */ 'M', 'U', 'L', 'L', 'I', '8', 0,
  /* 1502 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 0,
  /* 1510 */ 'X', 'O', 'R', 'I', '8', 0,
  /* 1516 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 1535 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 1548 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 1567 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1587 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1606 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1626 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1645 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1660 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1679 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 1698 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 1716 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 1726 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1746 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1765 */ 'B', 'L', '8', 0,
  /* 1769 */ 'I', 'S', 'E', 'L', '8', 0,
  /* 1775 */ 'B', 'C', 'T', 'R', 'L', '8', 0,
  /* 1782 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1790 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1799 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 0,
  /* 1807 */ 'R', 'L', 'W', 'N', 'M', '8', 0,
  /* 1814 */ 'M', 'F', 'C', 'R', '8', 0,
  /* 1820 */ 'B', 'L', 'R', '8', 0,
  /* 1825 */ 'M', 'F', 'L', 'R', '8', 0,
  /* 1831 */ 'M', 'T', 'L', 'R', '8', 0,
  /* 1837 */ 'B', 'D', 'Z', 'L', 'R', '8', 0,
  /* 1844 */ 'B', 'D', 'N', 'Z', 'L', 'R', '8', 0,
  /* 1852 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 1864 */ 'N', 'O', 'R', '8', 0,
  /* 1869 */ 'X', 'O', 'R', '8', 0,
  /* 1874 */ 'M', 'F', 'S', 'P', 'R', '8', 0,
  /* 1881 */ 'M', 'T', 'S', 'P', 'R', '8', 0,
  /* 1888 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', '8', 0,
  /* 1898 */ 'B', 'C', 'C', 'T', 'R', '8', 0,
  /* 1905 */ 'B', 'C', 'C', 'C', 'T', 'R', '8', 0,
  /* 1913 */ 'M', 'F', 'C', 'T', 'R', '8', 0,
  /* 1920 */ 'M', 'T', 'C', 'T', 'R', '8', 0,
  /* 1927 */ 'A', 'D', 'D', 'I', 'S', '8', 0,
  /* 1934 */ 'L', 'I', 'S', '8', 0,
  /* 1939 */ 'X', 'O', 'R', 'I', 'S', '8', 0,
  /* 1946 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 1961 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 1977 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 1993 */ 'L', 'H', 'A', 'U', '8', 0,
  /* 1999 */ 'S', 'T', 'B', 'U', '8', 0,
  /* 2005 */ 'S', 'T', 'H', 'U', '8', 0,
  /* 2011 */ 'S', 'T', 'W', 'U', '8', 0,
  /* 2017 */ 'L', 'B', 'Z', 'U', '8', 0,
  /* 2023 */ 'L', 'H', 'Z', 'U', '8', 0,
  /* 2029 */ 'L', 'W', 'Z', 'U', '8', 0,
  /* 2035 */ 'E', 'Q', 'V', '8', 0,
  /* 2040 */ 'S', 'L', 'W', '8', 0,
  /* 2045 */ 'S', 'R', 'W', '8', 0,
  /* 2050 */ 'S', 'T', 'W', '8', 0,
  /* 2055 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 0,
  /* 2063 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 0,
  /* 2071 */ 'L', 'H', 'A', 'X', '8', 0,
  /* 2077 */ 'S', 'T', 'B', 'X', '8', 0,
  /* 2083 */ 'S', 'T', 'H', 'X', '8', 0,
  /* 2089 */ 'L', 'H', 'B', 'R', 'X', '8', 0,
  /* 2096 */ 'L', 'W', 'B', 'R', 'X', '8', 0,
  /* 2103 */ 'L', 'H', 'A', 'U', 'X', '8', 0,
  /* 2110 */ 'S', 'T', 'B', 'U', 'X', '8', 0,
  /* 2117 */ 'S', 'T', 'H', 'U', 'X', '8', 0,
  /* 2124 */ 'S', 'T', 'W', 'U', 'X', '8', 0,
  /* 2131 */ 'L', 'B', 'Z', 'U', 'X', '8', 0,
  /* 2138 */ 'L', 'H', 'Z', 'U', 'X', '8', 0,
  /* 2145 */ 'L', 'W', 'Z', 'U', 'X', '8', 0,
  /* 2152 */ 'S', 'T', 'W', 'X', '8', 0,
  /* 2158 */ 'L', 'B', 'Z', 'X', '8', 0,
  /* 2164 */ 'L', 'H', 'Z', 'X', '8', 0,
  /* 2170 */ 'L', 'W', 'Z', 'X', '8', 0,
  /* 2176 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '8', 0,
  /* 2185 */ 'L', 'B', 'Z', '8', 0,
  /* 2190 */ 'B', 'D', 'Z', '8', 0,
  /* 2195 */ 'L', 'H', 'Z', '8', 0,
  /* 2200 */ 'B', 'D', 'N', 'Z', '8', 0,
  /* 2206 */ 'L', 'W', 'Z', '8', 0,
  /* 2211 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', '8', 0,
  /* 2223 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '8', 0,
  /* 2235 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '8', 0,
  /* 2247 */ 'A', 'N', 'D', 'I', 'o', '8', 0,
  /* 2254 */ 'A', 'N', 'D', 'I', 'S', 'o', '8', 0,
  /* 2262 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2274 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2286 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2296 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'A', 0,
  /* 2306 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2318 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2330 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2340 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2352 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2364 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2374 */ 'D', 'C', 'B', 'A', 0,
  /* 2379 */ 'T', 'A', 'I', 'L', 'B', 'A', 0,
  /* 2386 */ 'L', 'D', 't', 'o', 'c', 'B', 'A', 0,
  /* 2394 */ 'g', 'B', 'C', 'A', 0,
  /* 2399 */ 'B', 'C', 'C', 'A', 0,
  /* 2404 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 0,
  /* 2414 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 'A', 0,
  /* 2424 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 0,
  /* 2434 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 0,
  /* 2443 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 0,
  /* 2453 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 'A', 0,
  /* 2463 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 0,
  /* 2473 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 0,
  /* 2482 */ 'L', 'H', 'A', 0,
  /* 2486 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 2497 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 2510 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 2523 */ 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2539 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2553 */ 'S', 'L', 'B', 'I', 'A', 0,
  /* 2559 */ 'T', 'L', 'B', 'I', 'A', 0,
  /* 2565 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 0,
  /* 2575 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 'A', 0,
  /* 2585 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 0,
  /* 2595 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 0,
  /* 2604 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 0,
  /* 2614 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 'A', 0,
  /* 2624 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 0,
  /* 2634 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 0,
  /* 2644 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 0,
  /* 2653 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 'A', 0,
  /* 2664 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 'A', 0,
  /* 2674 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 'A', 0,
  /* 2685 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 'A', 0,
  /* 2695 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2707 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2718 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2730 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2741 */ 'B', 'L', 'A', 0,
  /* 2745 */ 'g', 'B', 'C', 'L', 'A', 0,
  /* 2751 */ 'B', 'C', 'C', 'L', 'A', 0,
  /* 2757 */ 'B', 'D', 'Z', 'L', 'A', 0,
  /* 2763 */ 'B', 'D', 'N', 'Z', 'L', 'A', 0,
  /* 2770 */ 'E', 'V', 'M', 'R', 'A', 0,
  /* 2776 */ 'L', 'W', 'A', 0,
  /* 2780 */ 'M', 'T', 'V', 'S', 'R', 'W', 'A', 0,
  /* 2788 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 'A', 0,
  /* 2798 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2807 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2817 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'A', 0,
  /* 2825 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'A', 0,
  /* 2834 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2843 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2853 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'A', 0,
  /* 2861 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'A', 0,
  /* 2870 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2880 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2891 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2900 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2910 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2920 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2931 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2940 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2950 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 'A', 0,
  /* 2960 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 'A', 0,
  /* 2970 */ 'B', 'D', 'Z', 'A', 0,
  /* 2975 */ 'B', 'D', 'N', 'Z', 'A', 0,
  /* 2981 */ 'V', '_', 'S', 'E', 'T', '0', 'B', 0,
  /* 2989 */ 'V', 'S', 'R', 'A', 'B', 0,
  /* 2995 */ 'R', 'F', 'E', 'B', 'B', 0,
  /* 3001 */ 'V', 'C', 'L', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 3010 */ 'V', 'C', 'T', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 3019 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 0,
  /* 3027 */ 'V', 'M', 'R', 'G', 'H', 'B', 0,
  /* 3034 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'B', 0,
  /* 3043 */ 'V', 'M', 'R', 'G', 'L', 'B', 0,
  /* 3050 */ 'T', 'A', 'I', 'L', 'B', 0,
  /* 3056 */ 'V', 'R', 'L', 'B', 0,
  /* 3061 */ 'V', 'S', 'L', 'B', 0,
  /* 3066 */ 'V', 'P', 'M', 'S', 'U', 'M', 'B', 0,
  /* 3074 */ 'C', 'M', 'P', 'B', 0,
  /* 3079 */ 'C', 'M', 'P', 'E', 'Q', 'B', 0,
  /* 3086 */ 'C', 'L', 'R', 'B', 'H', 'R', 'B', 0,
  /* 3094 */ 'C', 'M', 'P', 'R', 'B', 0,
  /* 3100 */ 'V', 'S', 'R', 'B', 0,
  /* 3105 */ 'V', 'M', 'U', 'L', 'E', 'S', 'B', 0,
  /* 3113 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'B', 0,
  /* 3127 */ 'V', 'A', 'V', 'G', 'S', 'B', 0,
  /* 3134 */ 'V', 'U', 'P', 'K', 'H', 'S', 'B', 0,
  /* 3142 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'B', 0,
  /* 3151 */ 'V', 'U', 'P', 'K', 'L', 'S', 'B', 0,
  /* 3159 */ 'V', 'M', 'I', 'N', 'S', 'B', 0,
  /* 3166 */ 'V', 'M', 'U', 'L', 'O', 'S', 'B', 0,
  /* 3174 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 0,
  /* 3183 */ 'E', 'V', 'E', 'X', 'T', 'S', 'B', 0,
  /* 3191 */ 'V', 'M', 'A', 'X', 'S', 'B', 0,
  /* 3198 */ 'M', 'F', 'T', 'B', 0,
  /* 3203 */ 'V', 'S', 'P', 'L', 'T', 'B', 0,
  /* 3210 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'B', 0,
  /* 3219 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'B', 0,
  /* 3228 */ 'S', 'T', 'B', 0,
  /* 3232 */ 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 3239 */ 'V', 'A', 'B', 'S', 'D', 'U', 'B', 0,
  /* 3247 */ 'V', 'M', 'U', 'L', 'E', 'U', 'B', 0,
  /* 3255 */ 'V', 'A', 'V', 'G', 'U', 'B', 0,
  /* 3262 */ 'V', 'M', 'I', 'N', 'U', 'B', 0,
  /* 3269 */ 'V', 'M', 'U', 'L', 'O', 'U', 'B', 0,
  /* 3277 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 0,
  /* 3286 */ 'Q', 'V', 'F', 'S', 'U', 'B', 0,
  /* 3293 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 3300 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 0,
  /* 3308 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 0,
  /* 3317 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 3323 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'B', 0,
  /* 3334 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 0,
  /* 3343 */ 'V', 'M', 'A', 'X', 'U', 'B', 0,
  /* 3350 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 0,
  /* 3359 */ 'V', 'C', 'L', 'Z', 'B', 0,
  /* 3365 */ 'V', 'C', 'T', 'Z', 'B', 0,
  /* 3371 */ 'g', 'B', 'C', 0,
  /* 3375 */ 'B', 'C', 'C', 0,
  /* 3379 */ 'A', 'D', 'D', 'C', 0,
  /* 3384 */ 'X', 'X', 'L', 'A', 'N', 'D', 'C', 0,
  /* 3392 */ 'C', 'R', 'A', 'N', 'D', 'C', 0,
  /* 3399 */ 'E', 'V', 'A', 'N', 'D', 'C', 0,
  /* 3406 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 0,
  /* 3415 */ 'S', 'U', 'B', 'F', 'C', 0,
  /* 3421 */ 'S', 'U', 'B', 'I', 'C', 0,
  /* 3427 */ 'A', 'D', 'D', 'I', 'C', 0,
  /* 3433 */ 'R', 'L', 'D', 'I', 'C', 0,
  /* 3439 */ 'S', 'U', 'B', 'F', 'I', 'C', 0,
  /* 3446 */ 'X', 'S', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3454 */ 'X', 'V', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3462 */ 'X', 'V', 'R', 'S', 'P', 'I', 'C', 0,
  /* 3470 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 3482 */ 'I', 'C', 'B', 'L', 'C', 0,
  /* 3488 */ 'B', 'R', 'I', 'N', 'C', 0,
  /* 3494 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3504 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3512 */ 'S', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3520 */ 'T', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3528 */ 'M', 'S', 'G', 'S', 'Y', 'N', 'C', 0,
  /* 3536 */ 'I', 'S', 'Y', 'N', 'C', 0,
  /* 3542 */ 'M', 'S', 'Y', 'N', 'C', 0,
  /* 3548 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 3557 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3572 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3584 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3599 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3611 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3627 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3640 */ 'X', 'X', 'L', 'O', 'R', 'C', 0,
  /* 3647 */ 'C', 'R', 'O', 'R', 'C', 0,
  /* 3653 */ 'E', 'V', 'O', 'R', 'C', 0,
  /* 3659 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 3674 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 3686 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3701 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3713 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3729 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3742 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 3757 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 3769 */ 'S', 'C', 0,
  /* 3772 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 0,
  /* 3781 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 0,
  /* 3790 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 0,
  /* 3799 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 0,
  /* 3808 */ 'T', 'L', 'B', 'S', 'X', '2', 'D', 0,
  /* 3816 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'D', 0,
  /* 3827 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 3834 */ 'V', 'S', 'R', 'A', 'D', 0,
  /* 3840 */ 'V', 'G', 'B', 'B', 'D', 0,
  /* 3846 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'D', 0,
  /* 3854 */ 'Q', 'V', 'F', 'A', 'D', 'D', 0,
  /* 3861 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 3868 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 0,
  /* 3876 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3885 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3898 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 0,
  /* 3910 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3919 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3929 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 3935 */ 'E', 'V', 'L', 'D', 'D', 0,
  /* 3941 */ 'M', 'T', 'V', 'S', 'R', 'D', 'D', 0,
  /* 3949 */ 'E', 'V', 'S', 'T', 'D', 'D', 0,
  /* 3956 */ 'L', 'F', 'D', 0,
  /* 3960 */ 'S', 'T', 'F', 'D', 0,
  /* 3965 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 3971 */ 'V', 'N', 'E', 'G', 'D', 0,
  /* 3977 */ 'M', 'U', 'L', 'H', 'D', 0,
  /* 3983 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 0,
  /* 3991 */ 'H', 'R', 'F', 'I', 'D', 0,
  /* 3997 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 0,
  /* 4005 */ 'T', 'L', 'B', 'L', 'D', 0,
  /* 4011 */ 'F', 'S', 'E', 'L', 'D', 0,
  /* 4017 */ 'M', 'U', 'L', 'L', 'D', 0,
  /* 4023 */ 'C', 'M', 'P', 'L', 'D', 0,
  /* 4029 */ 'M', 'F', 'V', 'S', 'R', 'L', 'D', 0,
  /* 4037 */ 'V', 'R', 'L', 'D', 0,
  /* 4042 */ 'V', 'S', 'L', 'D', 0,
  /* 4047 */ 'F', 'R', 'I', 'M', 'D', 0,
  /* 4053 */ 'V', 'B', 'P', 'E', 'R', 'M', 'D', 0,
  /* 4061 */ 'V', 'P', 'M', 'S', 'U', 'M', 'D', 0,
  /* 4069 */ 'X', 'X', 'L', 'A', 'N', 'D', 0,
  /* 4076 */ 'X', 'X', 'L', 'N', 'A', 'N', 'D', 0,
  /* 4084 */ 'C', 'R', 'N', 'A', 'N', 'D', 0,
  /* 4091 */ 'E', 'V', 'N', 'A', 'N', 'D', 0,
  /* 4098 */ 'C', 'R', 'A', 'N', 'D', 0,
  /* 4104 */ 'E', 'V', 'A', 'N', 'D', 0,
  /* 4110 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 4116 */ 'T', 'E', 'N', 'D', 0,
  /* 4121 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4134 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 0,
  /* 4142 */ 'F', 'R', 'I', 'N', 'D', 0,
  /* 4148 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 4157 */ 'F', 'R', 'I', 'P', 'D', 0,
  /* 4163 */ 'C', 'M', 'P', 'D', 0,
  /* 4168 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 4185 */ 'X', 'X', 'B', 'R', 'D', 0,
  /* 4191 */ 'M', 'T', 'M', 'S', 'R', 'D', 0,
  /* 4198 */ 'M', 'F', 'V', 'S', 'R', 'D', 0,
  /* 4205 */ 'M', 'T', 'V', 'S', 'R', 'D', 0,
  /* 4212 */ 'M', 'F', 'V', 'R', 'D', 0,
  /* 4218 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 4224 */ 'F', 'N', 'A', 'B', 'S', 'D', 0,
  /* 4231 */ 'M', 'O', 'D', 'S', 'D', 0,
  /* 4237 */ 'V', 'M', 'I', 'N', 'S', 'D', 0,
  /* 4244 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 0,
  /* 4253 */ 'V', 'M', 'A', 'X', 'S', 'D', 0,
  /* 4260 */ 'L', 'X', 'S', 'D', 0,
  /* 4265 */ 'S', 'T', 'X', 'S', 'D', 0,
  /* 4271 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'D', 0,
  /* 4281 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'D', 0,
  /* 4290 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'D', 0,
  /* 4299 */ 'S', 'T', 'D', 0,
  /* 4303 */ 'M', 'O', 'D', 'U', 'D', 0,
  /* 4309 */ 'V', 'M', 'I', 'N', 'U', 'D', 0,
  /* 4316 */ 'F', 'C', 'M', 'P', 'U', 'D', 0,
  /* 4323 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 0,
  /* 4332 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 0,
  /* 4341 */ 'V', 'M', 'A', 'X', 'U', 'D', 0,
  /* 4348 */ 'D', 'I', 'V', 'D', 0,
  /* 4353 */ 'F', 'R', 'I', 'Z', 'D', 0,
  /* 4359 */ 'V', 'C', 'L', 'Z', 'D', 0,
  /* 4365 */ 'C', 'N', 'T', 'L', 'Z', 'D', 0,
  /* 4372 */ 'V', 'C', 'T', 'Z', 'D', 0,
  /* 4378 */ 'C', 'N', 'T', 'T', 'Z', 'D', 0,
  /* 4385 */ 'M', 'F', 'B', 'H', 'R', 'B', 'E', 0,
  /* 4393 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 4401 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 4414 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 4422 */ 'D', 'I', 'V', 'D', 'E', 0,
  /* 4428 */ 'S', 'L', 'B', 'M', 'F', 'E', 'E', 0,
  /* 4436 */ 'W', 'R', 'T', 'E', 'E', 0,
  /* 4442 */ 'S', 'U', 'B', 'F', 'E', 0,
  /* 4448 */ 'E', 'V', 'L', 'W', 'H', 'E', 0,
  /* 4455 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 0,
  /* 4463 */ 'S', 'L', 'B', 'I', 'E', 0,
  /* 4469 */ 'T', 'L', 'B', 'I', 'E', 0,
  /* 4475 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4482 */ 'A', 'D', 'D', 'M', 'E', 0,
  /* 4488 */ 'S', 'U', 'B', 'F', 'M', 'E', 0,
  /* 4495 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 4508 */ 'T', 'L', 'B', 'R', 'E', 0,
  /* 4514 */ 'Q', 'V', 'F', 'R', 'E', 0,
  /* 4520 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 4528 */ 'S', 'L', 'B', 'M', 'T', 'E', 0,
  /* 4535 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 0,
  /* 4545 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 0,
  /* 4554 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4564 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4579 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4588 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4597 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4612 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4626 */ 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4639 */ 'T', 'L', 'B', 'W', 'E', 0,
  /* 4645 */ 'D', 'I', 'V', 'W', 'E', 0,
  /* 4651 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 0,
  /* 4659 */ 'A', 'D', 'D', 'Z', 'E', 0,
  /* 4665 */ 'S', 'U', 'B', 'F', 'Z', 'E', 0,
  /* 4672 */ 'D', 'C', 'B', 'F', 0,
  /* 4677 */ 'S', 'U', 'B', 'F', 0,
  /* 4682 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 4695 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 0,
  /* 4704 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 0,
  /* 4713 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 0,
  /* 4722 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 0,
  /* 4730 */ 'M', 'C', 'R', 'F', 0,
  /* 4735 */ 'M', 'F', 'O', 'C', 'R', 'F', 0,
  /* 4742 */ 'M', 'T', 'O', 'C', 'R', 'F', 0,
  /* 4749 */ 'M', 'T', 'C', 'R', 'F', 0,
  /* 4755 */ 'M', 'T', 'F', 'S', 'F', 0,
  /* 4761 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 0,
  /* 4770 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 0,
  /* 4779 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 0,
  /* 4788 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 0,
  /* 4796 */ 'S', 'L', 'B', 'I', 'E', 'G', 0,
  /* 4803 */ 'Q', 'V', 'F', 'N', 'E', 'G', 0,
  /* 4810 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 4817 */ 'E', 'V', 'N', 'E', 'G', 0,
  /* 4823 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4838 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4852 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4866 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 4874 */ 'V', '_', 'S', 'E', 'T', '0', 'H', 0,
  /* 4882 */ 'V', 'S', 'R', 'A', 'H', 0,
  /* 4888 */ 'E', 'V', 'L', 'D', 'H', 0,
  /* 4894 */ 'E', 'V', 'S', 'T', 'D', 'H', 0,
  /* 4901 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 0,
  /* 4909 */ 'V', 'M', 'R', 'G', 'H', 'H', 0,
  /* 4916 */ 'V', 'M', 'R', 'G', 'L', 'H', 0,
  /* 4923 */ 'V', 'R', 'L', 'H', 0,
  /* 4928 */ 'V', 'S', 'L', 'H', 0,
  /* 4933 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 4941 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 4949 */ 'V', 'P', 'M', 'S', 'U', 'M', 'H', 0,
  /* 4957 */ 'X', 'X', 'B', 'R', 'H', 0,
  /* 4963 */ 'V', 'S', 'R', 'H', 0,
  /* 4968 */ 'V', 'M', 'U', 'L', 'E', 'S', 'H', 0,
  /* 4976 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'H', 0,
  /* 4990 */ 'V', 'A', 'V', 'G', 'S', 'H', 0,
  /* 4997 */ 'V', 'U', 'P', 'K', 'H', 'S', 'H', 0,
  /* 5005 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'H', 0,
  /* 5014 */ 'V', 'U', 'P', 'K', 'L', 'S', 'H', 0,
  /* 5022 */ 'V', 'M', 'I', 'N', 'S', 'H', 0,
  /* 5029 */ 'V', 'M', 'U', 'L', 'O', 'S', 'H', 0,
  /* 5037 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 0,
  /* 5046 */ 'E', 'V', 'E', 'X', 'T', 'S', 'H', 0,
  /* 5054 */ 'V', 'M', 'A', 'X', 'S', 'H', 0,
  /* 5061 */ 'V', 'S', 'P', 'L', 'T', 'H', 0,
  /* 5068 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'H', 0,
  /* 5077 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'H', 0,
  /* 5086 */ 'S', 'T', 'H', 0,
  /* 5090 */ 'V', 'A', 'B', 'S', 'D', 'U', 'H', 0,
  /* 5098 */ 'V', 'M', 'U', 'L', 'E', 'U', 'H', 0,
  /* 5106 */ 'V', 'A', 'V', 'G', 'U', 'H', 0,
  /* 5113 */ 'V', 'M', 'I', 'N', 'U', 'H', 0,
  /* 5120 */ 'V', 'M', 'U', 'L', 'O', 'U', 'H', 0,
  /* 5128 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 0,
  /* 5137 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'H', 0,
  /* 5148 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 0,
  /* 5157 */ 'V', 'M', 'A', 'X', 'U', 'H', 0,
  /* 5164 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 0,
  /* 5173 */ 'V', 'C', 'L', 'Z', 'H', 0,
  /* 5179 */ 'V', 'C', 'T', 'Z', 'H', 0,
  /* 5185 */ 'D', 'C', 'B', 'I', 0,
  /* 5190 */ 'I', 'C', 'B', 'I', 0,
  /* 5195 */ 'S', 'U', 'B', 'I', 0,
  /* 5200 */ 'D', 'C', 'C', 'C', 'I', 0,
  /* 5206 */ 'I', 'C', 'C', 'C', 'I', 0,
  /* 5212 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 'I', 0,
  /* 5222 */ 'R', 'F', 'C', 'I', 0,
  /* 5227 */ 'R', 'F', 'M', 'C', 'I', 0,
  /* 5233 */ 'Q', 'V', 'G', 'P', 'C', 'I', 0,
  /* 5240 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 'I', 0,
  /* 5250 */ 'S', 'R', 'A', 'D', 'I', 0,
  /* 5256 */ 'A', 'D', 'D', 'I', 0,
  /* 5261 */ 'R', 'F', 'D', 'I', 0,
  /* 5266 */ 'C', 'M', 'P', 'L', 'D', 'I', 0,
  /* 5273 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 0,
  /* 5282 */ 'E', 'X', 'T', 'L', 'D', 'I', 0,
  /* 5289 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 0,
  /* 5298 */ 'C', 'M', 'P', 'D', 'I', 0,
  /* 5304 */ 'C', 'L', 'R', 'R', 'D', 'I', 0,
  /* 5311 */ 'I', 'N', 'S', 'R', 'D', 'I', 0,
  /* 5318 */ 'R', 'O', 'T', 'R', 'D', 'I', 0,
  /* 5325 */ 'E', 'X', 'T', 'R', 'D', 'I', 0,
  /* 5332 */ 'T', 'D', 'I', 0,
  /* 5336 */ 'W', 'R', 'T', 'E', 'E', 'I', 0,
  /* 5343 */ 'R', 'F', 'I', 0,
  /* 5347 */ 'M', 'T', 'F', 'S', 'F', 'I', 0,
  /* 5354 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'F', 'I', 0,
  /* 5364 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 0,
  /* 5374 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 'H', 'I', 0,
  /* 5386 */ 'P', 'H', 'I', 0,
  /* 5390 */ 'T', 'L', 'B', 'L', 'I', 0,
  /* 5396 */ 'M', 'U', 'L', 'L', 'I', 0,
  /* 5402 */ 'V', 'R', 'L', 'D', 'M', 'I', 0,
  /* 5409 */ 'R', 'L', 'D', 'I', 'M', 'I', 0,
  /* 5416 */ 'R', 'L', 'W', 'I', 'M', 'I', 0,
  /* 5423 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 0,
  /* 5432 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 0,
  /* 5441 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 0,
  /* 5450 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 0,
  /* 5458 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 0,
  /* 5467 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 0,
  /* 5476 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 0,
  /* 5485 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 0,
  /* 5494 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 0,
  /* 5502 */ 'V', 'R', 'L', 'W', 'M', 'I', 0,
  /* 5509 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 0,
  /* 5518 */ 'V', 'S', 'L', 'D', 'O', 'I', 0,
  /* 5525 */ 'X', 'S', 'R', 'D', 'P', 'I', 0,
  /* 5532 */ 'X', 'V', 'R', 'D', 'P', 'I', 0,
  /* 5539 */ 'X', 'S', 'R', 'Q', 'P', 'I', 0,
  /* 5546 */ 'X', 'V', 'R', 'S', 'P', 'I', 0,
  /* 5553 */ 'X', 'O', 'R', 'I', 0,
  /* 5558 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 5567 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5577 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5586 */ 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 5595 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 5604 */ 'S', 'R', 'A', 'W', 'I', 0,
  /* 5610 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 0,
  /* 5618 */ 'C', 'M', 'P', 'L', 'W', 'I', 0,
  /* 5625 */ 'E', 'V', 'R', 'L', 'W', 'I', 0,
  /* 5632 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 0,
  /* 5641 */ 'I', 'N', 'S', 'L', 'W', 'I', 0,
  /* 5648 */ 'E', 'V', 'S', 'L', 'W', 'I', 0,
  /* 5655 */ 'E', 'X', 'T', 'L', 'W', 'I', 0,
  /* 5662 */ 'C', 'M', 'P', 'W', 'I', 0,
  /* 5668 */ 'C', 'L', 'R', 'R', 'W', 'I', 0,
  /* 5675 */ 'I', 'N', 'S', 'R', 'W', 'I', 0,
  /* 5682 */ 'R', 'O', 'T', 'R', 'W', 'I', 0,
  /* 5689 */ 'E', 'X', 'T', 'R', 'W', 'I', 0,
  /* 5696 */ 'L', 'S', 'W', 'I', 0,
  /* 5701 */ 'S', 'T', 'S', 'W', 'I', 0,
  /* 5707 */ 'T', 'W', 'I', 0,
  /* 5711 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 0,
  /* 5721 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 0,
  /* 5730 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 0,
  /* 5740 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 0,
  /* 5749 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 0,
  /* 5760 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 0,
  /* 5770 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 0,
  /* 5781 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 0,
  /* 5791 */ 'T', 'C', 'H', 'E', 'C', 'K', 0,
  /* 5798 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 5809 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 0,
  /* 5820 */ 'B', 'L', 0,
  /* 5823 */ 'g', 'B', 'C', 'L', 0,
  /* 5828 */ 'B', 'C', 'C', 'L', 0,
  /* 5833 */ 'R', 'L', 'D', 'C', 'L', 0,
  /* 5839 */ 'R', 'L', 'D', 'I', 'C', 'L', 0,
  /* 5846 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5855 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5864 */ 'T', 'L', 'B', 'I', 'E', 'L', 0,
  /* 5871 */ 'Q', 'V', 'F', 'S', 'E', 'L', 0,
  /* 5878 */ 'I', 'S', 'E', 'L', 0,
  /* 5883 */ 'V', 'S', 'E', 'L', 0,
  /* 5888 */ 'X', 'X', 'S', 'E', 'L', 0,
  /* 5894 */ 'D', 'C', 'B', 'F', 'L', 0,
  /* 5900 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 5906 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 5926 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 5947 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 5959 */ 'D', 'S', 'S', 'A', 'L', 'L', 0,
  /* 5966 */ 'K', 'I', 'L', 'L', 0,
  /* 5971 */ 'L', 'X', 'V', 'L', 'L', 0,
  /* 5977 */ 'S', 'T', 'X', 'V', 'L', 'L', 0,
  /* 5984 */ 'B', 'L', 'R', 'L', 0,
  /* 5989 */ 'g', 'B', 'C', 'L', 'R', 'L', 0,
  /* 5996 */ 'B', 'C', 'C', 'L', 'R', 'L', 0,
  /* 6003 */ 'B', 'D', 'Z', 'L', 'R', 'L', 0,
  /* 6010 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 0,
  /* 6018 */ 'B', 'C', 'T', 'R', 'L', 0,
  /* 6024 */ 'g', 'B', 'C', 'C', 'T', 'R', 'L', 0,
  /* 6032 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', 0,
  /* 6040 */ 'L', 'V', 'S', 'L', 0,
  /* 6045 */ 'Q', 'V', 'F', 'M', 'U', 'L', 0,
  /* 6052 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 6059 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 0,
  /* 6067 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 6073 */ 'L', 'X', 'V', 'L', 0,
  /* 6078 */ 'S', 'T', 'X', 'V', 'L', 0,
  /* 6084 */ 'L', 'B', 'A', 'R', 'X', 'L', 0,
  /* 6091 */ 'L', 'D', 'A', 'R', 'X', 'L', 0,
  /* 6098 */ 'L', 'H', 'A', 'R', 'X', 'L', 0,
  /* 6105 */ 'L', 'W', 'A', 'R', 'X', 'L', 0,
  /* 6112 */ 'L', 'V', 'X', 'L', 0,
  /* 6117 */ 'S', 'T', 'V', 'X', 'L', 0,
  /* 6123 */ 'D', 'C', 'B', 'Z', 'L', 0,
  /* 6129 */ 'B', 'D', 'Z', 'L', 0,
  /* 6134 */ 'B', 'D', 'N', 'Z', 'L', 0,
  /* 6140 */ 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 6147 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 6156 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 6167 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 6178 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 6190 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 6202 */ 'V', 'M', 'S', 'U', 'M', 'M', 'B', 'M', 0,
  /* 6211 */ 'V', 'S', 'U', 'B', 'U', 'B', 'M', 0,
  /* 6219 */ 'V', 'A', 'D', 'D', 'U', 'B', 'M', 0,
  /* 6227 */ 'V', 'M', 'S', 'U', 'M', 'U', 'B', 'M', 0,
  /* 6236 */ 'V', 'S', 'U', 'B', 'U', 'D', 'M', 0,
  /* 6244 */ 'V', 'A', 'D', 'D', 'U', 'D', 'M', 0,
  /* 6252 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 6259 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 6266 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 6273 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'M', 0,
  /* 6282 */ 'V', 'S', 'U', 'B', 'U', 'H', 'M', 0,
  /* 6290 */ 'V', 'M', 'L', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 6300 */ 'V', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 6308 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'M', 0,
  /* 6317 */ 'T', 'R', 'E', 'C', 'L', 'A', 'I', 'M', 0,
  /* 6326 */ 'V', 'R', 'F', 'I', 'M', 0,
  /* 6332 */ 'X', 'S', 'R', 'D', 'P', 'I', 'M', 0,
  /* 6340 */ 'X', 'V', 'R', 'D', 'P', 'I', 'M', 0,
  /* 6348 */ 'X', 'V', 'R', 'S', 'P', 'I', 'M', 0,
  /* 6356 */ 'Q', 'V', 'F', 'R', 'I', 'M', 0,
  /* 6363 */ 'V', 'R', 'L', 'D', 'N', 'M', 0,
  /* 6370 */ 'R', 'L', 'W', 'I', 'N', 'M', 0,
  /* 6377 */ 'V', 'R', 'L', 'W', 'N', 'M', 0,
  /* 6384 */ 'V', 'S', 'U', 'B', 'U', 'Q', 'M', 0,
  /* 6392 */ 'V', 'A', 'D', 'D', 'U', 'Q', 'M', 0,
  /* 6400 */ 'V', 'S', 'U', 'B', 'E', 'U', 'Q', 'M', 0,
  /* 6409 */ 'V', 'A', 'D', 'D', 'E', 'U', 'Q', 'M', 0,
  /* 6418 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 0,
  /* 6426 */ 'V', 'P', 'E', 'R', 'M', 0,
  /* 6432 */ 'X', 'X', 'P', 'E', 'R', 'M', 0,
  /* 6439 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 6449 */ 'V', 'P', 'K', 'U', 'D', 'U', 'M', 0,
  /* 6457 */ 'V', 'P', 'K', 'U', 'H', 'U', 'M', 0,
  /* 6465 */ 'V', 'P', 'K', 'U', 'W', 'U', 'M', 0,
  /* 6473 */ 'V', 'S', 'U', 'B', 'U', 'W', 'M', 0,
  /* 6481 */ 'V', 'A', 'D', 'D', 'U', 'W', 'M', 0,
  /* 6489 */ 'V', 'M', 'U', 'L', 'U', 'W', 'M', 0,
  /* 6497 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6509 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6521 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6531 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'N', 0,
  /* 6541 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6553 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6565 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6575 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6587 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6599 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6609 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 0,
  /* 6619 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 0,
  /* 6628 */ 'V', 'R', 'F', 'I', 'N', 0,
  /* 6634 */ 'T', 'B', 'E', 'G', 'I', 'N', 0,
  /* 6641 */ 'Q', 'V', 'F', 'R', 'I', 'N', 0,
  /* 6648 */ 'M', 'F', 'S', 'R', 'I', 'N', 0,
  /* 6655 */ 'M', 'T', 'S', 'R', 'I', 'N', 0,
  /* 6662 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 6678 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 'N', 0,
  /* 6688 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 'N', 0,
  /* 6698 */ 'A', 'T', 'T', 'N', 0,
  /* 6703 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 6720 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 6728 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 6736 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 0,
  /* 6744 */ 'E', 'n', 'f', 'o', 'r', 'c', 'e', 'I', 'E', 'I', 'O', 0,
  /* 6756 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 0,
  /* 6766 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 'L', 'O', 0,
  /* 6778 */ 'V', 'S', 'L', 'O', 0,
  /* 6783 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 6791 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 6799 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 'O', 0,
  /* 6809 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6820 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6830 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6839 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6850 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6860 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6869 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 'O', 0,
  /* 6878 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 'O', 0,
  /* 6888 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 'O', 0,
  /* 6897 */ 'V', 'S', 'R', 'O', 0,
  /* 6902 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 0,
  /* 6910 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 6919 */ 'N', 'A', 'P', 0,
  /* 6923 */ 'T', 'R', 'A', 'P', 0,
  /* 6928 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6939 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6950 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6960 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6970 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6981 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6992 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 7002 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 7012 */ 'X', 'S', 'S', 'U', 'B', 'D', 'P', 0,
  /* 7020 */ 'X', 'V', 'S', 'U', 'B', 'D', 'P', 0,
  /* 7028 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 7038 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 7048 */ 'X', 'S', 'M', 'I', 'N', 'C', 'D', 'P', 0,
  /* 7057 */ 'X', 'S', 'M', 'A', 'X', 'C', 'D', 'P', 0,
  /* 7066 */ 'X', 'S', 'A', 'D', 'D', 'D', 'P', 0,
  /* 7074 */ 'X', 'V', 'A', 'D', 'D', 'D', 'P', 0,
  /* 7082 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 7092 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 7102 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 7112 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 7122 */ 'X', 'S', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 7132 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 7142 */ 'X', 'S', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 7152 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 7162 */ 'X', 'S', 'R', 'E', 'D', 'P', 0,
  /* 7169 */ 'X', 'V', 'R', 'E', 'D', 'P', 0,
  /* 7176 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 7187 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 7198 */ 'X', 'S', 'N', 'E', 'G', 'D', 'P', 0,
  /* 7206 */ 'X', 'V', 'N', 'E', 'G', 'D', 'P', 0,
  /* 7214 */ 'X', 'S', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 7223 */ 'X', 'V', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 7232 */ 'X', 'S', 'M', 'I', 'N', 'J', 'D', 'P', 0,
  /* 7241 */ 'X', 'S', 'M', 'A', 'X', 'J', 'D', 'P', 0,
  /* 7250 */ 'X', 'S', 'M', 'U', 'L', 'D', 'P', 0,
  /* 7258 */ 'X', 'V', 'M', 'U', 'L', 'D', 'P', 0,
  /* 7266 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7277 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7288 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7298 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7308 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7319 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7330 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7340 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7350 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 7360 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 7370 */ 'X', 'S', 'M', 'I', 'N', 'D', 'P', 0,
  /* 7378 */ 'X', 'V', 'M', 'I', 'N', 'D', 'P', 0,
  /* 7386 */ 'X', 'S', 'C', 'M', 'P', 'O', 'D', 'P', 0,
  /* 7395 */ 'X', 'S', 'C', 'V', 'H', 'P', 'D', 'P', 0,
  /* 7404 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 0,
  /* 7413 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7422 */ 'X', 'V', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7431 */ 'X', 'S', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7440 */ 'X', 'V', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7449 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7460 */ 'X', 'S', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7469 */ 'X', 'V', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7478 */ 'X', 'S', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7488 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7498 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7507 */ 'X', 'V', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7516 */ 'X', 'S', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7524 */ 'X', 'V', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7532 */ 'X', 'S', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7542 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7552 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7561 */ 'X', 'S', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7571 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7581 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7590 */ 'X', 'S', 'C', 'M', 'P', 'U', 'D', 'P', 0,
  /* 7599 */ 'X', 'S', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7607 */ 'X', 'S', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7616 */ 'X', 'V', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7625 */ 'X', 'V', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7633 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'D', 'P', 0,
  /* 7643 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'D', 'P', 0,
  /* 7653 */ 'X', 'S', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7661 */ 'X', 'V', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7669 */ 'C', 'T', 'R', 'L', '_', 'D', 'E', 'P', 0,
  /* 7678 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 7684 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 0,
  /* 7692 */ 'V', 'N', 'M', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7701 */ 'V', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7708 */ 'V', 'M', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7716 */ 'V', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7723 */ 'V', 'L', 'O', 'G', 'E', 'F', 'P', 0,
  /* 7731 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 0,
  /* 7740 */ 'V', 'R', 'E', 'F', 'P', 0,
  /* 7746 */ 'V', 'E', 'X', 'P', 'T', 'E', 'F', 'P', 0,
  /* 7755 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'F', 'P', 0,
  /* 7765 */ 'V', 'M', 'I', 'N', 'F', 'P', 0,
  /* 7772 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 7781 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 7790 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 0,
  /* 7799 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 0,
  /* 7808 */ 'V', 'M', 'A', 'X', 'F', 'P', 0,
  /* 7815 */ 'X', 'S', 'C', 'V', 'D', 'P', 'H', 'P', 0,
  /* 7824 */ 'X', 'V', 'C', 'V', 'S', 'P', 'H', 'P', 0,
  /* 7833 */ 'V', 'R', 'F', 'I', 'P', 0,
  /* 7839 */ 'X', 'S', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7847 */ 'X', 'V', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7855 */ 'X', 'V', 'R', 'S', 'P', 'I', 'P', 0,
  /* 7863 */ 'Q', 'V', 'F', 'R', 'I', 'P', 0,
  /* 7870 */ 'D', 'C', 'B', 'F', 'L', 'P', 0,
  /* 7877 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 7884 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 7891 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', 0,
  /* 7900 */ 'B', 'L', '8', '_', 'N', 'O', 'P', 0,
  /* 7908 */ 'S', 'T', 'O', 'P', 0,
  /* 7913 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 7926 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 7938 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7948 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7957 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7965 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'Q', 'P', 0,
  /* 7975 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7985 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7994 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 8002 */ 'X', 'S', 'C', 'V', 'S', 'D', 'Q', 'P', 0,
  /* 8011 */ 'X', 'S', 'C', 'V', 'U', 'D', 'Q', 'P', 0,
  /* 8020 */ 'X', 'S', 'N', 'E', 'G', 'Q', 'P', 0,
  /* 8028 */ 'X', 'S', 'X', 'S', 'I', 'G', 'Q', 'P', 0,
  /* 8037 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 0,
  /* 8045 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'Q', 'P', 0,
  /* 8055 */ 'X', 'S', 'C', 'M', 'P', 'O', 'Q', 'P', 0,
  /* 8064 */ 'X', 'S', 'C', 'V', 'D', 'P', 'Q', 'P', 0,
  /* 8073 */ 'X', 'S', 'I', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 8082 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 8093 */ 'X', 'S', 'X', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 8102 */ 'X', 'S', 'N', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 8111 */ 'X', 'S', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 8119 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 0,
  /* 8128 */ 'X', 'S', 'C', 'M', 'P', 'U', 'Q', 'P', 0,
  /* 8137 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 0,
  /* 8145 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8156 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8167 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8177 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8187 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8198 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8209 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8219 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8229 */ 'X', 'S', 'S', 'U', 'B', 'S', 'P', 0,
  /* 8237 */ 'X', 'V', 'S', 'U', 'B', 'S', 'P', 0,
  /* 8245 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 8255 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 8265 */ 'X', 'S', 'A', 'D', 'D', 'S', 'P', 0,
  /* 8273 */ 'X', 'V', 'A', 'D', 'D', 'S', 'P', 0,
  /* 8281 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 8291 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 8301 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 8311 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 8321 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 0,
  /* 8331 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 0,
  /* 8341 */ 'X', 'S', 'R', 'E', 'S', 'P', 0,
  /* 8348 */ 'X', 'V', 'R', 'E', 'S', 'P', 0,
  /* 8355 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 8366 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 8377 */ 'X', 'V', 'N', 'E', 'G', 'S', 'P', 0,
  /* 8385 */ 'X', 'V', 'X', 'S', 'I', 'G', 'S', 'P', 0,
  /* 8394 */ 'X', 'S', 'M', 'U', 'L', 'S', 'P', 0,
  /* 8402 */ 'X', 'V', 'M', 'U', 'L', 'S', 'P', 0,
  /* 8410 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8421 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8432 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8442 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8452 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8463 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8474 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8484 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8494 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'S', 'P', 0,
  /* 8504 */ 'X', 'V', 'M', 'I', 'N', 'S', 'P', 0,
  /* 8512 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8521 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8530 */ 'X', 'V', 'C', 'V', 'H', 'P', 'S', 'P', 0,
  /* 8539 */ 'X', 'V', 'I', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8548 */ 'X', 'V', 'X', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8557 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 0,
  /* 8567 */ 'Q', 'V', 'F', 'R', 'S', 'P', 0,
  /* 8574 */ 'X', 'V', 'N', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8583 */ 'X', 'V', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8591 */ 'L', 'X', 'S', 'S', 'P', 0,
  /* 8597 */ 'S', 'T', 'X', 'S', 'S', 'P', 0,
  /* 8604 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 0,
  /* 8614 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8623 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8633 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8642 */ 'X', 'S', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8650 */ 'X', 'V', 'T', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8659 */ 'X', 'V', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8667 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'S', 'P', 0,
  /* 8677 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'S', 'P', 0,
  /* 8687 */ 'X', 'V', 'M', 'A', 'X', 'S', 'P', 0,
  /* 8695 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 8710 */ 'X', 'S', 'R', 'Q', 'P', 'X', 'P', 0,
  /* 8718 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'Q', 0,
  /* 8726 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8735 */ 'E', 'V', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8743 */ 'I', 'C', 'B', 'L', 'Q', 0,
  /* 8749 */ 'V', 'B', 'P', 'E', 'R', 'M', 'Q', 0,
  /* 8757 */ 'X', 'X', 'B', 'R', 'Q', 0,
  /* 8763 */ 'V', 'M', 'U', 'L', '1', '0', 'U', 'Q', 0,
  /* 8772 */ 'V', 'M', 'U', 'L', '1', '0', 'C', 'U', 'Q', 0,
  /* 8782 */ 'V', 'S', 'U', 'B', 'C', 'U', 'Q', 0,
  /* 8790 */ 'V', 'A', 'D', 'D', 'C', 'U', 'Q', 0,
  /* 8798 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'C', 'U', 'Q', 0,
  /* 8809 */ 'V', 'S', 'U', 'B', 'E', 'C', 'U', 'Q', 0,
  /* 8818 */ 'V', 'A', 'D', 'D', 'E', 'C', 'U', 'Q', 0,
  /* 8827 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'U', 'Q', 0,
  /* 8837 */ 'M', 'B', 'A', 'R', 0,
  /* 8842 */ 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 8852 */ 'G', '_', 'B', 'R', 0,
  /* 8857 */ 'M', 'F', 'D', 'C', 'R', 0,
  /* 8863 */ 'R', 'L', 'D', 'C', 'R', 0,
  /* 8869 */ 'M', 'T', 'D', 'C', 'R', 0,
  /* 8875 */ 'M', 'F', 'C', 'R', 0,
  /* 8880 */ 'R', 'L', 'D', 'I', 'C', 'R', 0,
  /* 8887 */ 'M', 'F', 'V', 'S', 'C', 'R', 0,
  /* 8894 */ 'M', 'T', 'V', 'S', 'C', 'R', 0,
  /* 8901 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 8912 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 8921 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8936 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8951 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 8964 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 8975 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8984 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8992 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 9017 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 9024 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 9031 */ 'B', 'L', 'R', 0,
  /* 9035 */ 'g', 'B', 'C', 'L', 'R', 0,
  /* 9041 */ 'B', 'C', 'C', 'L', 'R', 0,
  /* 9047 */ 'M', 'F', 'L', 'R', 0,
  /* 9052 */ 'M', 'T', 'L', 'R', 0,
  /* 9057 */ 'B', 'D', 'Z', 'L', 'R', 0,
  /* 9063 */ 'B', 'D', 'N', 'Z', 'L', 'R', 0,
  /* 9070 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 9081 */ 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 9093 */ 'Q', 'V', 'F', 'M', 'R', 0,
  /* 9099 */ 'M', 'F', 'P', 'M', 'R', 0,
  /* 9105 */ 'M', 'T', 'P', 'M', 'R', 0,
  /* 9111 */ 'V', 'P', 'E', 'R', 'M', 'R', 0,
  /* 9118 */ 'X', 'X', 'P', 'E', 'R', 'M', 'R', 0,
  /* 9126 */ 'X', 'X', 'L', 'O', 'R', 0,
  /* 9132 */ 'X', 'X', 'L', 'N', 'O', 'R', 0,
  /* 9139 */ 'C', 'R', 'N', 'O', 'R', 0,
  /* 9145 */ 'E', 'V', 'N', 'O', 'R', 0,
  /* 9151 */ 'C', 'R', 'O', 'R', 0,
  /* 9156 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 9173 */ 'E', 'V', 'O', 'R', 0,
  /* 9178 */ 'X', 'X', 'L', 'X', 'O', 'R', 0,
  /* 9185 */ 'V', 'P', 'E', 'R', 'M', 'X', 'O', 'R', 0,
  /* 9194 */ 'C', 'R', 'X', 'O', 'R', 0,
  /* 9200 */ 'E', 'V', 'X', 'O', 'R', 0,
  /* 9206 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 9212 */ 'G', '_', 'O', 'R', 0,
  /* 9217 */ 'M', 'F', 'S', 'P', 'R', 0,
  /* 9223 */ 'M', 'T', 'S', 'P', 'R', 0,
  /* 9229 */ 'M', 'F', 'S', 'R', 0,
  /* 9234 */ 'M', 'F', 'M', 'S', 'R', 0,
  /* 9240 */ 'M', 'T', 'M', 'S', 'R', 0,
  /* 9246 */ 'M', 'T', 'S', 'R', 0,
  /* 9251 */ 'L', 'V', 'S', 'R', 0,
  /* 9256 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', 0,
  /* 9265 */ 'g', 'B', 'C', 'C', 'T', 'R', 0,
  /* 9272 */ 'B', 'C', 'C', 'C', 'T', 'R', 0,
  /* 9279 */ 'M', 'F', 'C', 'T', 'R', 0,
  /* 9285 */ 'M', 'T', 'C', 'T', 'R', 0,
  /* 9291 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 9302 */ 'Q', 'V', 'F', 'A', 'B', 'S', 0,
  /* 9309 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 0,
  /* 9317 */ 'E', 'V', 'A', 'B', 'S', 0,
  /* 9323 */ 'V', 'S', 'U', 'M', '4', 'S', 'B', 'S', 0,
  /* 9332 */ 'V', 'S', 'U', 'B', 'S', 'B', 'S', 0,
  /* 9340 */ 'V', 'A', 'D', 'D', 'S', 'B', 'S', 0,
  /* 9348 */ 'V', 'S', 'U', 'M', '4', 'U', 'B', 'S', 0,
  /* 9357 */ 'V', 'S', 'U', 'B', 'U', 'B', 'S', 0,
  /* 9365 */ 'V', 'A', 'D', 'D', 'U', 'B', 'S', 0,
  /* 9373 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 0,
  /* 9381 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 0,
  /* 9390 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 0,
  /* 9400 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 0,
  /* 9408 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9417 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9427 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9441 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9454 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9464 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9475 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'S', 0,
  /* 9484 */ 'D', 'C', 'B', 'T', 'D', 'S', 0,
  /* 9491 */ 'D', 'C', 'B', 'T', 'S', 'T', 'D', 'S', 0,
  /* 9500 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9511 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9522 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9533 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9544 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9555 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9566 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9579 */ 'Q', 'V', 'F', 'R', 'E', 'S', 0,
  /* 9586 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 0,
  /* 9597 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 9614 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 9629 */ 'M', 'F', 'F', 'S', 0,
  /* 9634 */ 'L', 'F', 'S', 0,
  /* 9638 */ 'M', 'C', 'R', 'F', 'S', 0,
  /* 9644 */ 'S', 'T', 'F', 'S', 0,
  /* 9649 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 9655 */ 'V', 'S', 'U', 'M', '4', 'S', 'H', 'S', 0,
  /* 9664 */ 'V', 'S', 'U', 'B', 'S', 'H', 'S', 0,
  /* 9672 */ 'V', 'M', 'H', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9682 */ 'V', 'M', 'H', 'R', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9693 */ 'V', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9701 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'S', 0,
  /* 9710 */ 'V', 'S', 'U', 'B', 'U', 'H', 'S', 0,
  /* 9718 */ 'V', 'A', 'D', 'D', 'U', 'H', 'S', 0,
  /* 9726 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'S', 0,
  /* 9735 */ 'S', 'U', 'B', 'I', 'S', 0,
  /* 9741 */ 'A', 'D', 'D', 'I', 'S', 0,
  /* 9747 */ 'L', 'I', 'S', 0,
  /* 9751 */ 'X', 'O', 'R', 'I', 'S', 0,
  /* 9757 */ 'E', 'V', 'S', 'R', 'W', 'I', 'S', 0,
  /* 9765 */ 'F', 'S', 'E', 'L', 'S', 0,
  /* 9771 */ 'A', 'D', 'D', '4', 'T', 'L', 'S', 0,
  /* 9779 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', 0,
  /* 9787 */ 'I', 'C', 'B', 'T', 'L', 'S', 0,
  /* 9794 */ 'B', 'L', '8', '_', 'T', 'L', 'S', 0,
  /* 9802 */ 'B', 'L', '_', 'T', 'L', 'S', 0,
  /* 9809 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'T', 'L', 'S', 0,
  /* 9821 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 0,
  /* 9829 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 'S', 0,
  /* 9838 */ 'F', 'R', 'I', 'M', 'S', 0,
  /* 9844 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 0,
  /* 9852 */ 'F', 'R', 'I', 'N', 'S', 0,
  /* 9858 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 0,
  /* 9866 */ 'F', 'R', 'I', 'P', 'S', 0,
  /* 9872 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9889 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 9895 */ 'F', 'N', 'A', 'B', 'S', 'S', 0,
  /* 9902 */ 'V', 'P', 'K', 'S', 'D', 'S', 'S', 0,
  /* 9910 */ 'V', 'P', 'K', 'S', 'H', 'S', 'S', 0,
  /* 9918 */ 'V', 'P', 'K', 'S', 'W', 'S', 'S', 0,
  /* 9926 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 9953 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 0,
  /* 9962 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'S', 0,
  /* 9971 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 9978 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 'S', 0,
  /* 9988 */ 'V', 'P', 'K', 'S', 'D', 'U', 'S', 0,
  /* 9996 */ 'V', 'P', 'K', 'U', 'D', 'U', 'S', 0,
  /* 10004 */ 'V', 'P', 'K', 'S', 'H', 'U', 'S', 0,
  /* 10012 */ 'V', 'P', 'K', 'U', 'H', 'U', 'S', 0,
  /* 10020 */ 'F', 'C', 'M', 'P', 'U', 'S', 0,
  /* 10027 */ 'V', 'P', 'K', 'S', 'W', 'U', 'S', 0,
  /* 10035 */ 'V', 'P', 'K', 'U', 'W', 'U', 'S', 0,
  /* 10043 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 10049 */ 'E', 'V', 'S', 'R', 'W', 'S', 0,
  /* 10056 */ 'M', 'T', 'V', 'S', 'R', 'W', 'S', 0,
  /* 10064 */ 'V', 'S', 'U', 'M', '2', 'S', 'W', 'S', 0,
  /* 10073 */ 'V', 'S', 'U', 'B', 'S', 'W', 'S', 0,
  /* 10081 */ 'V', 'A', 'D', 'D', 'S', 'W', 'S', 0,
  /* 10089 */ 'V', 'S', 'U', 'M', 'S', 'W', 'S', 0,
  /* 10097 */ 'V', 'S', 'U', 'B', 'U', 'W', 'S', 0,
  /* 10105 */ 'V', 'A', 'D', 'D', 'U', 'W', 'S', 0,
  /* 10113 */ 'E', 'V', 'D', 'I', 'V', 'W', 'S', 0,
  /* 10121 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 10132 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 10143 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'W', 'S', 0,
  /* 10154 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 10165 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 10176 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'W', 'S', 0,
  /* 10187 */ 'V', 'C', 'T', 'S', 'X', 'S', 0,
  /* 10194 */ 'V', 'C', 'T', 'U', 'X', 'S', 0,
  /* 10201 */ 'F', 'R', 'I', 'Z', 'S', 0,
  /* 10207 */ 'L', 'D', 'A', 'T', 0,
  /* 10212 */ 'S', 'T', 'D', 'A', 'T', 0,
  /* 10218 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10230 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10241 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10254 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10267 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10278 */ 'L', 'W', 'A', 'T', 0,
  /* 10283 */ 'S', 'T', 'W', 'A', 'T', 0,
  /* 10289 */ 'D', 'C', 'B', 'T', 0,
  /* 10294 */ 'I', 'C', 'B', 'T', 0,
  /* 10299 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 10309 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 10318 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 10331 */ 'D', 'C', 'B', 'T', 'C', 'T', 0,
  /* 10338 */ 'D', 'C', 'B', 'T', 'S', 'T', 'C', 'T', 0,
  /* 10347 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 10361 */ 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 10372 */ 'C', 'R', '6', 'S', 'E', 'T', 0,
  /* 10379 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 10393 */ 'C', 'R', '6', 'U', 'N', 'S', 'E', 'T', 0,
  /* 10402 */ 'C', 'R', 'U', 'N', 'S', 'E', 'T', 0,
  /* 10410 */ 'C', 'R', 'S', 'E', 'T', 0,
  /* 10416 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 0,
  /* 10425 */ 'W', 'A', 'I', 'T', 0,
  /* 10430 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 10444 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 10456 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 10471 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 10486 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 10510 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 10531 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 10551 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 0,
  /* 10560 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 10572 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 10583 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 10594 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 10605 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 10616 */ 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 10625 */ 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 10637 */ 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 10646 */ 'T', 'R', 'E', 'C', 'H', 'K', 'P', 'T', 0,
  /* 10655 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10665 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10680 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 10689 */ 'T', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10696 */ 'C', 'P', '_', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10705 */ 'F', 'S', 'Q', 'R', 'T', 0,
  /* 10711 */ 'F', 'T', 'S', 'Q', 'R', 'T', 0,
  /* 10718 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 10728 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 10741 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 10753 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '_', 'L', 'A', 'S', 'T', 0,
  /* 10767 */ 'D', 'C', 'B', 'S', 'T', 0,
  /* 10773 */ 'D', 'S', 'T', 0,
  /* 10777 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '_', 'F', 'I', 'R', 'S', 'T', 0,
  /* 10791 */ 'D', 'C', 'B', 'T', 'S', 'T', 0,
  /* 10798 */ 'D', 'S', 'T', 'S', 'T', 0,
  /* 10804 */ 'D', 'C', 'B', 'T', 'T', 0,
  /* 10810 */ 'D', 'S', 'T', 'T', 0,
  /* 10815 */ 'D', 'C', 'B', 'T', 'S', 'T', 'T', 0,
  /* 10823 */ 'D', 'S', 'T', 'S', 'T', 'T', 0,
  /* 10830 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 10838 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 10845 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 10854 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 10861 */ 'L', 'H', 'A', 'U', 0,
  /* 10866 */ 'S', 'T', 'B', 'U', 0,
  /* 10871 */ 'L', 'F', 'D', 'U', 0,
  /* 10876 */ 'S', 'T', 'F', 'D', 'U', 0,
  /* 10882 */ 'M', 'U', 'L', 'H', 'D', 'U', 0,
  /* 10889 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 0,
  /* 10898 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 0,
  /* 10907 */ 'L', 'D', 'U', 0,
  /* 10911 */ 'S', 'T', 'D', 'U', 0,
  /* 10916 */ 'D', 'I', 'V', 'D', 'U', 0,
  /* 10922 */ 'D', 'I', 'V', 'D', 'E', 'U', 0,
  /* 10929 */ 'D', 'I', 'V', 'W', 'E', 'U', 0,
  /* 10936 */ 'S', 'T', 'H', 'U', 0,
  /* 10941 */ 'E', 'V', 'S', 'R', 'W', 'I', 'U', 0,
  /* 10949 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 0,
  /* 10957 */ 'L', 'F', 'S', 'U', 0,
  /* 10962 */ 'S', 'T', 'F', 'S', 'U', 0,
  /* 10968 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'U', 0,
  /* 10977 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'U', 0,
  /* 10986 */ 'M', 'U', 'L', 'H', 'W', 'U', 0,
  /* 10993 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 0,
  /* 11002 */ 'E', 'V', 'S', 'R', 'W', 'U', 0,
  /* 11009 */ 'S', 'T', 'W', 'U', 0,
  /* 11014 */ 'E', 'V', 'D', 'I', 'V', 'W', 'U', 0,
  /* 11022 */ 'L', 'B', 'Z', 'U', 0,
  /* 11027 */ 'L', 'H', 'Z', 'U', 0,
  /* 11032 */ 'L', 'W', 'Z', 'U', 0,
  /* 11037 */ 'S', 'L', 'B', 'M', 'F', 'E', 'V', 0,
  /* 11045 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 11052 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 11059 */ 'F', 'T', 'D', 'I', 'V', 0,
  /* 11065 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 11072 */ 'V', 'S', 'L', 'V', 0,
  /* 11077 */ 'X', 'X', 'L', 'E', 'Q', 'V', 0,
  /* 11084 */ 'C', 'R', 'E', 'Q', 'V', 0,
  /* 11090 */ 'E', 'V', 'E', 'Q', 'V', 0,
  /* 11096 */ 'V', 'S', 'R', 'V', 0,
  /* 11101 */ 'L', 'X', 'V', 0,
  /* 11105 */ 'S', 'T', 'X', 'V', 0,
  /* 11110 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 0,
  /* 11119 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 0,
  /* 11128 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 11140 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 11152 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 11164 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 11176 */ 'E', 'V', 'A', 'D', 'D', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11188 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11200 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11213 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11225 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11237 */ 'E', 'V', 'A', 'D', 'D', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11249 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11261 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11274 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11286 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11298 */ 'E', 'V', 'A', 'D', 'D', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11310 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11322 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11335 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11347 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11359 */ 'E', 'V', 'A', 'D', 'D', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11371 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11383 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11396 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11408 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11420 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'W', 0,
  /* 11431 */ 'V', 'S', 'R', 'A', 'W', 0,
  /* 11437 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'W', 0,
  /* 11445 */ 'E', 'V', 'A', 'D', 'D', 'W', 0,
  /* 11452 */ 'E', 'V', 'L', 'D', 'W', 0,
  /* 11458 */ 'E', 'V', 'R', 'N', 'D', 'W', 0,
  /* 11465 */ 'E', 'V', 'S', 'T', 'D', 'W', 0,
  /* 11472 */ 'V', 'M', 'R', 'G', 'E', 'W', 0,
  /* 11479 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 0,
  /* 11487 */ 'E', 'V', 'S', 'U', 'B', 'F', 'W', 0,
  /* 11495 */ 'E', 'V', 'S', 'U', 'B', 'I', 'F', 'W', 0,
  /* 11504 */ 'V', 'N', 'E', 'G', 'W', 0,
  /* 11510 */ 'V', 'M', 'R', 'G', 'H', 'W', 0,
  /* 11517 */ 'X', 'X', 'M', 'R', 'G', 'H', 'W', 0,
  /* 11525 */ 'M', 'U', 'L', 'H', 'W', 0,
  /* 11531 */ 'E', 'V', 'A', 'D', 'D', 'I', 'W', 0,
  /* 11539 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 0,
  /* 11547 */ 'V', 'M', 'R', 'G', 'L', 'W', 0,
  /* 11554 */ 'X', 'X', 'M', 'R', 'G', 'L', 'W', 0,
  /* 11562 */ 'M', 'U', 'L', 'L', 'W', 0,
  /* 11568 */ 'C', 'M', 'P', 'L', 'W', 0,
  /* 11574 */ 'E', 'V', 'R', 'L', 'W', 0,
  /* 11580 */ 'E', 'V', 'S', 'L', 'W', 0,
  /* 11586 */ 'L', 'M', 'W', 0,
  /* 11590 */ 'S', 'T', 'M', 'W', 0,
  /* 11595 */ 'V', 'P', 'M', 'S', 'U', 'M', 'W', 0,
  /* 11603 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 11615 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 11627 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 11639 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 11651 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11663 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11675 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11687 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11699 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11711 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11723 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11735 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11747 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11759 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11771 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11783 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11795 */ 'V', 'M', 'R', 'G', 'O', 'W', 0,
  /* 11802 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 11809 */ 'C', 'M', 'P', 'W', 0,
  /* 11814 */ 'X', 'X', 'B', 'R', 'W', 0,
  /* 11820 */ 'V', 'S', 'R', 'W', 0,
  /* 11825 */ 'M', 'O', 'D', 'S', 'W', 0,
  /* 11831 */ 'V', 'M', 'U', 'L', 'E', 'S', 'W', 0,
  /* 11839 */ 'V', 'A', 'V', 'G', 'S', 'W', 0,
  /* 11846 */ 'V', 'U', 'P', 'K', 'H', 'S', 'W', 0,
  /* 11854 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'W', 0,
  /* 11863 */ 'V', 'U', 'P', 'K', 'L', 'S', 'W', 0,
  /* 11871 */ 'E', 'V', 'C', 'N', 'T', 'L', 'S', 'W', 0,
  /* 11880 */ 'V', 'M', 'I', 'N', 'S', 'W', 0,
  /* 11887 */ 'V', 'M', 'U', 'L', 'O', 'S', 'W', 0,
  /* 11895 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 0,
  /* 11904 */ 'E', 'X', 'T', 'S', 'W', 0,
  /* 11910 */ 'V', 'M', 'A', 'X', 'S', 'W', 0,
  /* 11917 */ 'V', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11924 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11932 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'W', 0,
  /* 11941 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11950 */ 'X', 'X', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11960 */ 'S', 'T', 'W', 0,
  /* 11964 */ 'V', 'S', 'U', 'B', 'C', 'U', 'W', 0,
  /* 11972 */ 'V', 'A', 'D', 'D', 'C', 'U', 'W', 0,
  /* 11980 */ 'M', 'O', 'D', 'U', 'W', 0,
  /* 11986 */ 'V', 'A', 'B', 'S', 'D', 'U', 'W', 0,
  /* 11994 */ 'V', 'M', 'U', 'L', 'E', 'U', 'W', 0,
  /* 12002 */ 'V', 'A', 'V', 'G', 'U', 'W', 0,
  /* 12009 */ 'V', 'M', 'I', 'N', 'U', 'W', 0,
  /* 12016 */ 'V', 'M', 'U', 'L', 'O', 'U', 'W', 0,
  /* 12024 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 0,
  /* 12033 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 12044 */ 'X', 'X', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 12056 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 0,
  /* 12065 */ 'V', 'M', 'A', 'X', 'U', 'W', 0,
  /* 12072 */ 'D', 'I', 'V', 'W', 0,
  /* 12077 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 0,
  /* 12086 */ 'V', 'C', 'L', 'Z', 'W', 0,
  /* 12092 */ 'E', 'V', 'C', 'N', 'T', 'L', 'Z', 'W', 0,
  /* 12101 */ 'V', 'C', 'T', 'Z', 'W', 0,
  /* 12107 */ 'C', 'N', 'T', 'T', 'Z', 'W', 0,
  /* 12114 */ 'L', 'X', 'V', 'D', '2', 'X', 0,
  /* 12121 */ 'S', 'T', 'X', 'V', 'D', '2', 'X', 0,
  /* 12129 */ 'L', 'X', 'V', 'W', '4', 'X', 0,
  /* 12136 */ 'S', 'T', 'X', 'V', 'W', '4', 'X', 0,
  /* 12144 */ 'L', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 12152 */ 'S', 'T', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 12161 */ 'L', 'X', 'V', 'H', '8', 'X', 0,
  /* 12168 */ 'S', 'T', 'X', 'V', 'H', '8', 'X', 0,
  /* 12176 */ 'L', 'H', 'A', 'X', 0,
  /* 12181 */ 'T', 'L', 'B', 'I', 'V', 'A', 'X', 0,
  /* 12189 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 0,
  /* 12198 */ 'L', 'X', 'S', 'I', 'W', 'A', 'X', 0,
  /* 12206 */ 'L', 'W', 'A', 'X', 0,
  /* 12211 */ 'L', 'V', 'E', 'B', 'X', 0,
  /* 12217 */ 'S', 'T', 'V', 'E', 'B', 'X', 0,
  /* 12224 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 0,
  /* 12232 */ 'S', 'T', 'B', 'X', 0,
  /* 12237 */ 'S', 'T', 'B', 'C', 'X', 0,
  /* 12243 */ 'S', 'T', 'D', 'C', 'X', 0,
  /* 12249 */ 'S', 'T', 'H', 'C', 'X', 0,
  /* 12255 */ 'S', 'T', 'W', 'C', 'X', 0,
  /* 12261 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 0,
  /* 12269 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 0,
  /* 12278 */ 'E', 'V', 'L', 'D', 'D', 'X', 0,
  /* 12285 */ 'E', 'V', 'S', 'T', 'D', 'D', 'X', 0,
  /* 12293 */ 'Q', 'V', 'L', 'F', 'D', 'X', 0,
  /* 12300 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 0,
  /* 12308 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'D', 'X', 0,
  /* 12317 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'D', 'X', 0,
  /* 12326 */ 'L', 'X', 'S', 'D', 'X', 0,
  /* 12332 */ 'S', 'T', 'X', 'S', 'D', 'X', 0,
  /* 12339 */ 'S', 'T', 'D', 'X', 0,
  /* 12344 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 12358 */ 'E', 'V', 'L', 'W', 'H', 'E', 'X', 0,
  /* 12366 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 'X', 0,
  /* 12375 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 'X', 0,
  /* 12384 */ 'E', 'V', 'L', 'D', 'H', 'X', 0,
  /* 12391 */ 'E', 'V', 'S', 'T', 'D', 'H', 'X', 0,
  /* 12399 */ 'L', 'V', 'E', 'H', 'X', 0,
  /* 12405 */ 'S', 'T', 'V', 'E', 'H', 'X', 0,
  /* 12412 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 0,
  /* 12420 */ 'S', 'T', 'H', 'X', 0,
  /* 12425 */ 'S', 'T', 'B', 'C', 'I', 'X', 0,
  /* 12432 */ 'L', 'D', 'C', 'I', 'X', 0,
  /* 12438 */ 'S', 'T', 'D', 'C', 'I', 'X', 0,
  /* 12445 */ 'S', 'T', 'H', 'C', 'I', 'X', 0,
  /* 12452 */ 'S', 'T', 'W', 'C', 'I', 'X', 0,
  /* 12459 */ 'L', 'B', 'Z', 'C', 'I', 'X', 0,
  /* 12466 */ 'L', 'H', 'Z', 'C', 'I', 'X', 0,
  /* 12473 */ 'L', 'W', 'Z', 'C', 'I', 'X', 0,
  /* 12480 */ 'X', 'S', 'R', 'Q', 'P', 'I', 'X', 0,
  /* 12488 */ 'V', 'E', 'X', 'T', 'U', 'B', 'L', 'X', 0,
  /* 12497 */ 'V', 'E', 'X', 'T', 'U', 'H', 'L', 'X', 0,
  /* 12506 */ 'V', 'E', 'X', 'T', 'U', 'W', 'L', 'X', 0,
  /* 12515 */ 'L', 'D', 'M', 'X', 0,
  /* 12520 */ 'V', 'S', 'B', 'O', 'X', 0,
  /* 12526 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 'X', 0,
  /* 12535 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 'X', 0,
  /* 12544 */ 'V', 'U', 'P', 'K', 'H', 'P', 'X', 0,
  /* 12552 */ 'V', 'P', 'K', 'P', 'X', 0,
  /* 12558 */ 'V', 'U', 'P', 'K', 'L', 'P', 'X', 0,
  /* 12566 */ 'L', 'X', 'S', 'S', 'P', 'X', 0,
  /* 12573 */ 'S', 'T', 'X', 'S', 'S', 'P', 'X', 0,
  /* 12581 */ 'L', 'B', 'A', 'R', 'X', 0,
  /* 12587 */ 'L', 'D', 'A', 'R', 'X', 0,
  /* 12593 */ 'L', 'H', 'A', 'R', 'X', 0,
  /* 12599 */ 'L', 'W', 'A', 'R', 'X', 0,
  /* 12605 */ 'L', 'D', 'B', 'R', 'X', 0,
  /* 12611 */ 'S', 'T', 'D', 'B', 'R', 'X', 0,
  /* 12618 */ 'L', 'H', 'B', 'R', 'X', 0,
  /* 12624 */ 'S', 'T', 'H', 'B', 'R', 'X', 0,
  /* 12631 */ 'V', 'E', 'X', 'T', 'U', 'B', 'R', 'X', 0,
  /* 12640 */ 'L', 'W', 'B', 'R', 'X', 0,
  /* 12646 */ 'S', 'T', 'W', 'B', 'R', 'X', 0,
  /* 12653 */ 'V', 'E', 'X', 'T', 'U', 'H', 'R', 'X', 0,
  /* 12662 */ 'V', 'E', 'X', 'T', 'U', 'W', 'R', 'X', 0,
  /* 12671 */ 'M', 'C', 'R', 'X', 'R', 'X', 0,
  /* 12678 */ 'T', 'L', 'B', 'S', 'X', 0,
  /* 12684 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 0,
  /* 12692 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 0,
  /* 12701 */ 'L', 'X', 'V', 'D', 'S', 'X', 0,
  /* 12708 */ 'V', 'C', 'F', 'S', 'X', 0,
  /* 12714 */ 'Q', 'V', 'L', 'F', 'S', 'X', 0,
  /* 12721 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 0,
  /* 12729 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 0,
  /* 12738 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 'X', 0,
  /* 12747 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'S', 'X', 0,
  /* 12756 */ 'L', 'X', 'V', 'W', 'S', 'X', 0,
  /* 12763 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12776 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12788 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12802 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12816 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12828 */ 'L', 'H', 'A', 'U', 'X', 0,
  /* 12834 */ 'L', 'W', 'A', 'U', 'X', 0,
  /* 12840 */ 'S', 'T', 'B', 'U', 'X', 0,
  /* 12846 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 0,
  /* 12855 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 0,
  /* 12865 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 0,
  /* 12873 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 0,
  /* 12882 */ 'L', 'D', 'U', 'X', 0,
  /* 12887 */ 'S', 'T', 'D', 'U', 'X', 0,
  /* 12893 */ 'V', 'C', 'F', 'U', 'X', 0,
  /* 12899 */ 'S', 'T', 'H', 'U', 'X', 0,
  /* 12905 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 'X', 0,
  /* 12914 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12923 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12933 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 0,
  /* 12941 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 0,
  /* 12950 */ 'S', 'T', 'W', 'U', 'X', 0,
  /* 12956 */ 'L', 'B', 'Z', 'U', 'X', 0,
  /* 12962 */ 'L', 'H', 'Z', 'U', 'X', 0,
  /* 12968 */ 'L', 'W', 'Z', 'U', 'X', 0,
  /* 12974 */ 'L', 'V', 'X', 0,
  /* 12978 */ 'S', 'T', 'V', 'X', 0,
  /* 12983 */ 'L', 'X', 'V', 'X', 0,
  /* 12988 */ 'S', 'T', 'X', 'V', 'X', 0,
  /* 12994 */ 'E', 'V', 'L', 'D', 'W', 'X', 0,
  /* 13001 */ 'E', 'V', 'S', 'T', 'D', 'W', 'X', 0,
  /* 13009 */ 'L', 'V', 'E', 'W', 'X', 0,
  /* 13015 */ 'S', 'T', 'V', 'E', 'W', 'X', 0,
  /* 13022 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 0,
  /* 13031 */ 'S', 'T', 'X', 'S', 'I', 'W', 'X', 0,
  /* 13039 */ 'S', 'T', 'W', 'X', 0,
  /* 13044 */ 'L', 'X', 'S', 'I', 'B', 'Z', 'X', 0,
  /* 13052 */ 'L', 'B', 'Z', 'X', 0,
  /* 13057 */ 'L', 'X', 'S', 'I', 'H', 'Z', 'X', 0,
  /* 13065 */ 'L', 'H', 'Z', 'X', 0,
  /* 13070 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 0,
  /* 13079 */ 'L', 'X', 'S', 'I', 'W', 'Z', 'X', 0,
  /* 13087 */ 'L', 'W', 'Z', 'X', 0,
  /* 13092 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 0,
  /* 13100 */ 'D', 'C', 'B', 'Z', 0,
  /* 13105 */ 'L', 'B', 'Z', 0,
  /* 13109 */ 'B', 'D', 'Z', 0,
  /* 13113 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'Z', 0,
  /* 13122 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'D', 'Z', 0,
  /* 13132 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'D', 'Z', 0,
  /* 13142 */ 'L', 'H', 'Z', 0,
  /* 13146 */ 'V', 'R', 'F', 'I', 'Z', 0,
  /* 13152 */ 'X', 'S', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 13160 */ 'X', 'V', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 13168 */ 'X', 'V', 'R', 'S', 'P', 'I', 'Z', 0,
  /* 13176 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 0,
  /* 13183 */ 'B', 'D', 'N', 'Z', 0,
  /* 13188 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 0,
  /* 13198 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 0,
  /* 13208 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'Z', 0,
  /* 13217 */ 'L', 'W', 'Z', 0,
  /* 13221 */ 'M', 'F', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 13229 */ 'M', 'T', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 13237 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'W', 'Z', 0,
  /* 13247 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'W', 'Z', 0,
  /* 13257 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', '_', 0,
  /* 13266 */ 'B', 'L', '8', '_', 'T', 'L', 'S', '_', 0,
  /* 13275 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'b', 0,
  /* 13284 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'b', 0,
  /* 13293 */ 'M', 'T', 'F', 'S', 'F', 'b', 0,
  /* 13300 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 'b', 0,
  /* 13310 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 'b', 0,
  /* 13321 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 'b', 0,
  /* 13333 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 0,
  /* 13341 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 0,
  /* 13352 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 0,
  /* 13362 */ 'Q', 'V', 'F', 'M', 'R', 'b', 0,
  /* 13369 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 0,
  /* 13379 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 0,
  /* 13389 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'b', 0,
  /* 13397 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'b', 0,
  /* 13406 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'b', 0,
  /* 13414 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 'b', 0,
  /* 13423 */ 'L', 'D', 't', 'o', 'c', 0,
  /* 13429 */ 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 13436 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 13454 */ 'X', 'X', 'L', 'O', 'R', 'f', 0,
  /* 13461 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', 0,
  /* 13472 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 13483 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 13494 */ 'B', 'D', 'Z', 'L', 'A', 'm', 0,
  /* 13501 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'm', 0,
  /* 13509 */ 'B', 'D', 'Z', 'A', 'm', 0,
  /* 13515 */ 'B', 'D', 'N', 'Z', 'A', 'm', 0,
  /* 13522 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 13530 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 13539 */ 'B', 'D', 'Z', 'L', 'm', 0,
  /* 13545 */ 'B', 'D', 'N', 'Z', 'L', 'm', 0,
  /* 13552 */ 'B', 'D', 'Z', 'L', 'R', 'm', 0,
  /* 13559 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'm', 0,
  /* 13567 */ 'B', 'D', 'Z', 'm', 0,
  /* 13572 */ 'B', 'D', 'N', 'Z', 'm', 0,
  /* 13578 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', 0,
  /* 13587 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', 0,
  /* 13596 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', 0,
  /* 13604 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 'b', 'm', 0,
  /* 13614 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 'b', 'm', 0,
  /* 13624 */ 'R', 'L', 'W', 'N', 'M', 'o', 'b', 'm', 0,
  /* 13633 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 'n', 0,
  /* 13642 */ 'B', 'C', 'C', 'T', 'R', '8', 'n', 0,
  /* 13650 */ 'B', 'C', 'n', 0,
  /* 13654 */ 'B', 'C', 'L', 'n', 0,
  /* 13659 */ 'B', 'C', 'L', 'R', 'L', 'n', 0,
  /* 13666 */ 'B', 'C', 'C', 'T', 'R', 'L', 'n', 0,
  /* 13674 */ 'B', 'C', 'L', 'R', 'n', 0,
  /* 13680 */ 'B', 'C', 'C', 'T', 'R', 'n', 0,
  /* 13687 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', 'o', 0,
  /* 13698 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 'o', 0,
  /* 13711 */ 'A', 'D', 'D', '4', 'o', 0,
  /* 13717 */ 'E', 'X', 'T', 'S', 'B', '8', 'o', 0,
  /* 13725 */ 'A', 'D', 'D', 'C', '8', 'o', 0,
  /* 13732 */ 'A', 'N', 'D', 'C', '8', 'o', 0,
  /* 13739 */ 'S', 'U', 'B', 'F', 'C', '8', 'o', 0,
  /* 13747 */ 'O', 'R', 'C', '8', 'o', 0,
  /* 13753 */ 'A', 'D', 'D', '8', 'o', 0,
  /* 13759 */ 'N', 'A', 'N', 'D', '8', 'o', 0,
  /* 13766 */ 'A', 'D', 'D', 'E', '8', 'o', 0,
  /* 13773 */ 'S', 'U', 'B', 'F', 'E', '8', 'o', 0,
  /* 13781 */ 'A', 'D', 'D', 'M', 'E', '8', 'o', 0,
  /* 13789 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'o', 0,
  /* 13798 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 'o', 0,
  /* 13809 */ 'A', 'D', 'D', 'Z', 'E', '8', 'o', 0,
  /* 13817 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'o', 0,
  /* 13826 */ 'S', 'U', 'B', 'F', '8', 'o', 0,
  /* 13833 */ 'N', 'E', 'G', '8', 'o', 0,
  /* 13839 */ 'E', 'X', 'T', 'S', 'H', '8', 'o', 0,
  /* 13847 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 'o', 0,
  /* 13856 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 'o', 0,
  /* 13865 */ 'R', 'L', 'W', 'N', 'M', '8', 'o', 0,
  /* 13873 */ 'N', 'O', 'R', '8', 'o', 0,
  /* 13879 */ 'X', 'O', 'R', '8', 'o', 0,
  /* 13885 */ 'E', 'Q', 'V', '8', 'o', 0,
  /* 13891 */ 'S', 'L', 'W', '8', 'o', 0,
  /* 13897 */ 'S', 'R', 'W', '8', 'o', 0,
  /* 13903 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 'o', 0,
  /* 13912 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 'o', 0,
  /* 13921 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 'o', 0,
  /* 13930 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 'o', 0,
  /* 13940 */ 'E', 'X', 'T', 'S', 'B', 'o', 0,
  /* 13947 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 'o', 0,
  /* 13957 */ 'F', 'S', 'U', 'B', 'o', 0,
  /* 13963 */ 'F', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13970 */ 'F', 'N', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13978 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 'o', 0,
  /* 13988 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 'o', 0,
  /* 13998 */ 'A', 'D', 'D', 'C', 'o', 0,
  /* 14004 */ 'A', 'N', 'D', 'C', 'o', 0,
  /* 14010 */ 'S', 'U', 'B', 'F', 'C', 'o', 0,
  /* 14017 */ 'S', 'U', 'B', 'I', 'C', 'o', 0,
  /* 14024 */ 'A', 'D', 'D', 'I', 'C', 'o', 0,
  /* 14031 */ 'R', 'L', 'D', 'I', 'C', 'o', 0,
  /* 14038 */ 'B', 'C', 'D', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 14048 */ 'B', 'C', 'D', 'U', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 14059 */ 'O', 'R', 'C', 'o', 0,
  /* 14064 */ 'S', 'R', 'A', 'D', 'o', 0,
  /* 14070 */ 'F', 'A', 'D', 'D', 'o', 0,
  /* 14076 */ 'F', 'M', 'A', 'D', 'D', 'o', 0,
  /* 14083 */ 'F', 'N', 'M', 'A', 'D', 'D', 'o', 0,
  /* 14091 */ 'F', 'N', 'E', 'G', 'D', 'o', 0,
  /* 14098 */ 'M', 'U', 'L', 'H', 'D', 'o', 0,
  /* 14105 */ 'F', 'C', 'F', 'I', 'D', 'o', 0,
  /* 14112 */ 'F', 'C', 'T', 'I', 'D', 'o', 0,
  /* 14119 */ 'F', 'S', 'E', 'L', 'D', 'o', 0,
  /* 14126 */ 'M', 'U', 'L', 'L', 'D', 'o', 0,
  /* 14133 */ 'S', 'L', 'D', 'o', 0,
  /* 14138 */ 'F', 'R', 'I', 'M', 'D', 'o', 0,
  /* 14145 */ 'N', 'A', 'N', 'D', 'o', 0,
  /* 14151 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 'o', 0,
  /* 14160 */ 'F', 'R', 'I', 'N', 'D', 'o', 0,
  /* 14167 */ 'F', 'R', 'I', 'P', 'D', 'o', 0,
  /* 14174 */ 'S', 'R', 'D', 'o', 0,
  /* 14179 */ 'F', 'A', 'B', 'S', 'D', 'o', 0,
  /* 14186 */ 'F', 'N', 'A', 'B', 'S', 'D', 'o', 0,
  /* 14194 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 'o', 0,
  /* 14204 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 'o', 0,
  /* 14214 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 'o', 0,
  /* 14224 */ 'D', 'I', 'V', 'D', 'o', 0,
  /* 14230 */ 'F', 'R', 'I', 'Z', 'D', 'o', 0,
  /* 14237 */ 'C', 'N', 'T', 'L', 'Z', 'D', 'o', 0,
  /* 14245 */ 'C', 'N', 'T', 'T', 'Z', 'D', 'o', 0,
  /* 14253 */ 'A', 'D', 'D', 'E', 'o', 0,
  /* 14259 */ 'D', 'I', 'V', 'D', 'E', 'o', 0,
  /* 14266 */ 'S', 'U', 'B', 'F', 'E', 'o', 0,
  /* 14273 */ 'A', 'D', 'D', 'M', 'E', 'o', 0,
  /* 14280 */ 'S', 'U', 'B', 'F', 'M', 'E', 'o', 0,
  /* 14288 */ 'F', 'R', 'E', 'o', 0,
  /* 14293 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'o', 0,
  /* 14302 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'o', 0,
  /* 14312 */ 'D', 'I', 'V', 'W', 'E', 'o', 0,
  /* 14319 */ 'A', 'D', 'D', 'Z', 'E', 'o', 0,
  /* 14326 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'o', 0,
  /* 14334 */ 'S', 'U', 'B', 'F', 'o', 0,
  /* 14340 */ 'M', 'T', 'F', 'S', 'F', 'o', 0,
  /* 14347 */ 'N', 'E', 'G', 'o', 0,
  /* 14352 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 'o', 0,
  /* 14361 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 'o', 0,
  /* 14371 */ 'E', 'X', 'T', 'S', 'H', 'o', 0,
  /* 14378 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 'o', 0,
  /* 14388 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 'o', 0,
  /* 14398 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 'o', 0,
  /* 14408 */ 'S', 'R', 'A', 'D', 'I', 'o', 0,
  /* 14415 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 'o', 0,
  /* 14425 */ 'E', 'X', 'T', 'L', 'D', 'I', 'o', 0,
  /* 14433 */ 'A', 'N', 'D', 'I', 'o', 0,
  /* 14439 */ 'C', 'L', 'R', 'R', 'D', 'I', 'o', 0,
  /* 14447 */ 'I', 'N', 'S', 'R', 'D', 'I', 'o', 0,
  /* 14455 */ 'R', 'O', 'T', 'R', 'D', 'I', 'o', 0,
  /* 14463 */ 'E', 'X', 'T', 'R', 'D', 'I', 'o', 0,
  /* 14471 */ 'M', 'T', 'F', 'S', 'F', 'I', 'o', 0,
  /* 14479 */ 'R', 'L', 'D', 'I', 'M', 'I', 'o', 0,
  /* 14487 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 0,
  /* 14495 */ 'S', 'R', 'A', 'W', 'I', 'o', 0,
  /* 14502 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 'o', 0,
  /* 14512 */ 'I', 'N', 'S', 'L', 'W', 'I', 'o', 0,
  /* 14520 */ 'E', 'X', 'T', 'L', 'W', 'I', 'o', 0,
  /* 14528 */ 'C', 'L', 'R', 'R', 'W', 'I', 'o', 0,
  /* 14536 */ 'I', 'N', 'S', 'R', 'W', 'I', 'o', 0,
  /* 14544 */ 'R', 'O', 'T', 'R', 'W', 'I', 'o', 0,
  /* 14552 */ 'E', 'X', 'T', 'R', 'W', 'I', 'o', 0,
  /* 14560 */ 'R', 'L', 'D', 'C', 'L', 'o', 0,
  /* 14567 */ 'R', 'L', 'D', 'I', 'C', 'L', 'o', 0,
  /* 14575 */ 'F', 'M', 'U', 'L', 'o', 0,
  /* 14581 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 0,
  /* 14589 */ 'R', 'L', 'W', 'N', 'M', 'o', 0,
  /* 14596 */ 'B', 'C', 'D', 'C', 'F', 'N', 'o', 0,
  /* 14604 */ 'B', 'C', 'D', 'C', 'P', 'S', 'G', 'N', 'o', 0,
  /* 14614 */ 'B', 'C', 'D', 'S', 'E', 'T', 'S', 'G', 'N', 'o', 0,
  /* 14625 */ 'B', 'C', 'D', 'C', 'T', 'N', 'o', 0,
  /* 14633 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 'o', 0,
  /* 14644 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 'o', 0,
  /* 14655 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 'o', 0,
  /* 14666 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 'o', 0,
  /* 14677 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 'o', 0,
  /* 14686 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 'o', 0,
  /* 14696 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 'o', 0,
  /* 14706 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 'o', 0,
  /* 14716 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 'o', 0,
  /* 14727 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 'o', 0,
  /* 14738 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 'o', 0,
  /* 14749 */ 'F', 'R', 'S', 'P', 'o', 0,
  /* 14755 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 'o', 0,
  /* 14766 */ 'B', 'C', 'D', 'C', 'F', 'S', 'Q', 'o', 0,
  /* 14775 */ 'B', 'C', 'D', 'C', 'T', 'S', 'Q', 'o', 0,
  /* 14784 */ 'R', 'L', 'D', 'C', 'R', 'o', 0,
  /* 14791 */ 'R', 'L', 'D', 'I', 'C', 'R', 'o', 0,
  /* 14799 */ 'F', 'M', 'R', 'o', 0,
  /* 14804 */ 'N', 'O', 'R', 'o', 0,
  /* 14809 */ 'X', 'O', 'R', 'o', 0,
  /* 14814 */ 'B', 'C', 'D', 'S', 'R', 'o', 0,
  /* 14821 */ 'F', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14828 */ 'F', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14836 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14845 */ 'B', 'C', 'D', 'S', 'o', 0,
  /* 14851 */ 'F', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14858 */ 'F', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14866 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14875 */ 'F', 'C', 'F', 'I', 'D', 'S', 'o', 0,
  /* 14883 */ 'F', 'R', 'E', 'S', 'o', 0,
  /* 14889 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'o', 0,
  /* 14899 */ 'M', 'F', 'F', 'S', 'o', 0,
  /* 14905 */ 'F', 'N', 'E', 'G', 'S', 'o', 0,
  /* 14912 */ 'A', 'N', 'D', 'I', 'S', 'o', 0,
  /* 14919 */ 'F', 'S', 'E', 'L', 'S', 'o', 0,
  /* 14926 */ 'F', 'M', 'U', 'L', 'S', 'o', 0,
  /* 14933 */ 'F', 'R', 'I', 'M', 'S', 'o', 0,
  /* 14940 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 'o', 0,
  /* 14949 */ 'F', 'R', 'I', 'N', 'S', 'o', 0,
  /* 14956 */ 'F', 'R', 'I', 'P', 'S', 'o', 0,
  /* 14963 */ 'F', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14970 */ 'F', 'N', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14978 */ 'F', 'S', 'Q', 'R', 'T', 'S', 'o', 0,
  /* 14986 */ 'B', 'C', 'D', 'U', 'S', 'o', 0,
  /* 14993 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', 'o', 0,
  /* 15002 */ 'F', 'D', 'I', 'V', 'S', 'o', 0,
  /* 15009 */ 'F', 'R', 'I', 'Z', 'S', 'o', 0,
  /* 15016 */ 'F', 'S', 'Q', 'R', 'T', 'o', 0,
  /* 15023 */ 'M', 'U', 'L', 'H', 'D', 'U', 'o', 0,
  /* 15031 */ 'F', 'C', 'F', 'I', 'D', 'U', 'o', 0,
  /* 15039 */ 'F', 'C', 'T', 'I', 'D', 'U', 'o', 0,
  /* 15047 */ 'D', 'I', 'V', 'D', 'U', 'o', 0,
  /* 15054 */ 'D', 'I', 'V', 'D', 'E', 'U', 'o', 0,
  /* 15062 */ 'D', 'I', 'V', 'W', 'E', 'U', 'o', 0,
  /* 15070 */ 'M', 'U', 'L', 'H', 'W', 'U', 'o', 0,
  /* 15078 */ 'F', 'C', 'T', 'I', 'W', 'U', 'o', 0,
  /* 15086 */ 'D', 'I', 'V', 'W', 'U', 'o', 0,
  /* 15093 */ 'F', 'D', 'I', 'V', 'o', 0,
  /* 15099 */ 'E', 'Q', 'V', 'o', 0,
  /* 15104 */ 'S', 'R', 'A', 'W', 'o', 0,
  /* 15110 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 'o', 0,
  /* 15119 */ 'M', 'U', 'L', 'H', 'W', 'o', 0,
  /* 15126 */ 'F', 'C', 'T', 'I', 'W', 'o', 0,
  /* 15133 */ 'M', 'U', 'L', 'L', 'W', 'o', 0,
  /* 15140 */ 'S', 'L', 'W', 'o', 0,
  /* 15145 */ 'S', 'R', 'W', 'o', 0,
  /* 15150 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 'o', 0,
  /* 15160 */ 'E', 'X', 'T', 'S', 'W', 'o', 0,
  /* 15167 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 'o', 0,
  /* 15177 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 'o', 0,
  /* 15187 */ 'D', 'I', 'V', 'W', 'o', 0,
  /* 15193 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 'o', 0,
  /* 15203 */ 'C', 'N', 'T', 'L', 'Z', 'W', 'o', 0,
  /* 15211 */ 'C', 'N', 'T', 'T', 'Z', 'W', 'o', 0,
  /* 15219 */ 'F', 'C', 'T', 'I', 'D', 'Z', 'o', 0,
  /* 15227 */ 'B', 'C', 'D', 'C', 'F', 'Z', 'o', 0,
  /* 15235 */ 'B', 'C', 'D', 'C', 'T', 'Z', 'o', 0,
  /* 15243 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 'o', 0,
  /* 15252 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 'o', 0,
  /* 15261 */ 'F', 'C', 'T', 'I', 'W', 'Z', 'o', 0,
  /* 15269 */ 'B', 'D', 'Z', 'L', 'A', 'p', 0,
  /* 15276 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'p', 0,
  /* 15284 */ 'B', 'D', 'Z', 'A', 'p', 0,
  /* 15290 */ 'B', 'D', 'N', 'Z', 'A', 'p', 0,
  /* 15297 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 15305 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 15314 */ 'B', 'D', 'Z', 'L', 'p', 0,
  /* 15320 */ 'B', 'D', 'N', 'Z', 'L', 'p', 0,
  /* 15327 */ 'B', 'D', 'Z', 'L', 'R', 'p', 0,
  /* 15334 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'p', 0,
  /* 15342 */ 'B', 'D', 'Z', 'p', 0,
  /* 15347 */ 'B', 'D', 'N', 'Z', 'p', 0,
  /* 15353 */ 'M', 'T', 'C', 'T', 'R', '8', 'l', 'o', 'o', 'p', 0,
  /* 15364 */ 'M', 'T', 'C', 'T', 'R', 'l', 'o', 'o', 'p', 0,
  /* 15374 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 15388 */ 'V', 'S', 'P', 'L', 'T', 'B', 's', 0,
  /* 15396 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 's', 0,
  /* 15406 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 's', 0,
  /* 15416 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 's', 0,
  /* 15426 */ 'Q', 'V', 'F', 'N', 'E', 'G', 's', 0,
  /* 15434 */ 'V', 'S', 'P', 'L', 'T', 'H', 's', 0,
  /* 15442 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 's', 0,
  /* 15452 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 's', 0,
  /* 15462 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 's', 0,
  /* 15473 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 's', 0,
  /* 15485 */ 'Q', 'V', 'F', 'R', 'I', 'M', 's', 0,
  /* 15493 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 's', 0,
  /* 15502 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 's', 0,
  /* 15512 */ 'Q', 'V', 'F', 'R', 'I', 'N', 's', 0,
  /* 15520 */ 'Q', 'V', 'F', 'R', 'I', 'P', 's', 0,
  /* 15528 */ 'Q', 'V', 'F', 'R', 'S', 'P', 's', 0,
  /* 15536 */ 'Q', 'V', 'F', 'M', 'R', 's', 0,
  /* 15543 */ 'Q', 'V', 'F', 'A', 'B', 'S', 's', 0,
  /* 15551 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 's', 0,
  /* 15560 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 's', 0,
  /* 15569 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 15579 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 15590 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 's', 0,
  /* 15599 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 15609 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 15620 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 's', 0,
  /* 15632 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 's', 0,
  /* 15644 */ 'Q', 'V', 'F', 'R', 'E', 'S', 's', 0,
  /* 15652 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 's', 0,
  /* 15664 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 's', 0,
  /* 15673 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 's', 0,
  /* 15685 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 's', 0,
  /* 15697 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 's', 0,
  /* 15707 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 's', 0,
  /* 15717 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 's', 0,
  /* 15726 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 's', 0,
  /* 15735 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 's', 0,
  /* 15745 */ 'Q', 'V', 'L', 'F', 'S', 'X', 's', 0,
  /* 15753 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 's', 0,
  /* 15762 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 's', 0,
  /* 15772 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 's', 0,
  /* 15780 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 's', 0,
  /* 15789 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 's', 0,
  /* 15801 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 's', 0,
  /* 15812 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 's', 0,
  /* 15823 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 's', 0,
  /* 15834 */ 'B', 'C', 'L', 'a', 'l', 'w', 'a', 'y', 's', 0,
  /* 15844 */ 'g', 'B', 'C', 'A', 'a', 't', 0,
  /* 15851 */ 'g', 'B', 'C', 'L', 'A', 'a', 't', 0,
  /* 15859 */ 'g', 'B', 'C', 'a', 't', 0,
  /* 15865 */ 'g', 'B', 'C', 'L', 'a', 't', 0,
  /* 15872 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 'i', 'n', 't', 0,
  /* 15884 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 15894 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 15904 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 'v', 0,
  /* 15913 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 'v', 0,
  /* 15922 */ 'L', 'A', 'x', 0,
  /* 15926 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'x', 0,
  /* 15936 */ 'D', 'C', 'B', 'F', 'x', 0,
  /* 15942 */ 'D', 'C', 'B', 'T', 'x', 0,
  /* 15948 */ 'D', 'C', 'B', 'T', 'S', 'T', 'x', 0,
  /* 15956 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 'x', 0,
  /* 15965 */ 'X', 'X', 'L', 'X', 'O', 'R', 'z', 0,
  /* 15973 */ 'X', 'X', 'L', 'X', 'O', 'R', 'd', 'p', 'z', 0,
  /* 15983 */ 'X', 'X', 'L', 'X', 'O', 'R', 's', 'p', 'z', 0,
  /* 15993 */ 'F', 'A', 'D', 'D', 'r', 't', 'z', 0,
};

extern const unsigned PPCInstrNameIndices[] = {
    5386U, 6439U, 6662U, 5855U, 5846U, 5966U, 4823U, 4838U, 
    4682U, 4852U, 9872U, 4554U, 4401U, 13095U, 4475U, 10665U, 
    4121U, 6910U, 5947U, 10594U, 4168U, 10583U, 4495U, 7926U, 
    7913U, 8992U, 10347U, 10486U, 5906U, 5926U, 3929U, 3317U, 
    6067U, 11052U, 11065U, 6259U, 6266U, 4110U, 9212U, 9206U, 
    12344U, 4564U, 10299U, 9597U, 10680U, 4403U, 9614U, 10605U, 
    9291U, 10718U, 3827U, 4520U, 4148U, 10318U, 3470U, 9926U, 
    10845U, 3504U, 10572U, 10560U, 10655U, 4866U, 10838U, 10854U, 
    5900U, 9024U, 9017U, 7884U, 7877U, 10309U, 4414U, 4393U, 
    6728U, 6720U, 6791U, 6783U, 4941U, 4933U, 3861U, 3293U, 
    6052U, 11045U, 6252U, 11802U, 4810U, 10830U, 3494U, 5558U, 
    5595U, 7772U, 7781U, 7678U, 5798U, 8852U, 10531U, 10510U, 
    9156U, 930U, 9771U, 13711U, 1348U, 9779U, 13257U, 13753U, 
    3379U, 1299U, 13725U, 13998U, 4417U, 1367U, 13766U, 14253U, 
    5256U, 1489U, 3427U, 1318U, 14024U, 9741U, 1927U, 2539U, 
    55U, 2523U, 2497U, 2510U, 2486U, 6190U, 349U, 6156U, 
    309U, 8921U, 363U, 6167U, 322U, 8936U, 380U, 6147U, 
    4482U, 1380U, 13781U, 14273U, 4659U, 1405U, 13809U, 14319U, 
    6703U, 8695U, 4072U, 1354U, 13760U, 3387U, 1305U, 13732U, 
    14004U, 14912U, 2254U, 14433U, 2247U, 10456U, 1961U, 10471U, 
    1977U, 14146U, 1119U, 209U, 693U, 1660U, 1001U, 91U, 
    575U, 1548U, 1042U, 132U, 616U, 1587U, 1199U, 289U, 
    773U, 1746U, 1083U, 173U, 657U, 1626U, 1021U, 111U, 
    595U, 1567U, 1159U, 249U, 733U, 1698U, 981U, 71U, 
    555U, 1516U, 1178U, 268U, 752U, 1726U, 1062U, 152U, 
    636U, 1606U, 1139U, 229U, 713U, 1679U, 1103U, 193U, 
    677U, 1645U, 6698U, 2987U, 2376U, 3372U, 3375U, 2399U, 
    9272U, 1905U, 6032U, 1790U, 5828U, 2751U, 9041U, 5996U, 
    9266U, 1898U, 13642U, 6025U, 1782U, 13633U, 13666U, 13680U, 
    14596U, 14766U, 15227U, 14604U, 14625U, 14775U, 15235U, 14614U, 
    14814U, 14845U, 14038U, 14986U, 14048U, 5824U, 9036U, 5990U, 
    13659U, 13674U, 15834U, 13654U, 9260U, 1892U, 6018U, 1775U, 
    13436U, 13650U, 13183U, 2200U, 2975U, 13515U, 15290U, 6134U, 
    2763U, 13501U, 15276U, 9063U, 1844U, 6010U, 13530U, 15305U, 
    13559U, 15334U, 13545U, 15320U, 13572U, 15347U, 13109U, 2190U, 
    2970U, 13509U, 15284U, 6129U, 2757U, 13494U, 15269U, 9057U, 
    1837U, 6003U, 13522U, 15297U, 13552U, 15327U, 13539U, 15314U, 
    13567U, 15342U, 5820U, 1765U, 7900U, 9809U, 9794U, 13266U, 
    2741U, 1256U, 7891U, 9031U, 1820U, 5984U, 9802U, 4054U, 
    3488U, 1359U, 3086U, 5273U, 14415U, 5632U, 14502U, 5304U, 
    14439U, 5668U, 14528U, 3074U, 1268U, 4163U, 5298U, 3079U, 
    4023U, 5266U, 11568U, 5618U, 3094U, 1274U, 11809U, 5662U, 
    4365U, 14237U, 12094U, 2055U, 13903U, 15203U, 4378U, 14245U, 
    12107U, 2063U, 13912U, 15211U, 10696U, 13092U, 2176U, 10777U, 
    15956U, 4545U, 1395U, 13798U, 10753U, 14302U, 15926U, 10372U, 
    10393U, 4098U, 3392U, 11084U, 4084U, 9139U, 9151U, 3647U, 
    10410U, 10402U, 9194U, 7669U, 2374U, 4672U, 5894U, 7870U, 
    15936U, 5185U, 10767U, 10289U, 10331U, 9484U, 10791U, 10338U, 
    9491U, 10815U, 15948U, 10804U, 15942U, 13100U, 6123U, 5200U, 
    478U, 874U, 488U, 884U, 4348U, 4422U, 10922U, 15054U, 
    14259U, 10916U, 15047U, 14224U, 12072U, 4645U, 10929U, 15062U, 
    14312U, 11016U, 15086U, 15187U, 9906U, 5959U, 10773U, 793U, 
    10798U, 799U, 10823U, 814U, 10810U, 807U, 3548U, 1333U, 
    10379U, 1946U, 499U, 895U, 517U, 913U, 15374U, 11080U, 
    2035U, 13885U, 15099U, 9317U, 11531U, 11176U, 11298U, 11237U, 
    11359U, 11445U, 4104U, 3399U, 8735U, 9953U, 10968U, 9962U, 
    10977U, 11871U, 12092U, 10113U, 11014U, 11090U, 3183U, 5046U, 
    3935U, 12278U, 4888U, 12384U, 11452U, 12994U, 10218U, 12763U, 
    10241U, 12788U, 10254U, 12802U, 4448U, 12358U, 9858U, 12738U, 
    10949U, 12905U, 10230U, 12776U, 10267U, 12816U, 5364U, 6766U, 
    6756U, 5374U, 2262U, 6497U, 2306U, 6541U, 2340U, 6575U, 
    4695U, 2404U, 11128U, 11603U, 5423U, 2565U, 11188U, 11651U, 
    4761U, 2443U, 11152U, 11627U, 11310U, 11723U, 5458U, 2604U, 
    11249U, 11687U, 11371U, 11759U, 2274U, 6509U, 2318U, 6553U, 
    2352U, 6587U, 4713U, 2424U, 11140U, 11615U, 5441U, 2585U, 
    11225U, 11675U, 4779U, 2463U, 11164U, 11639U, 11347U, 11747U, 
    5485U, 2634U, 11286U, 11711U, 11408U, 11783U, 2770U, 4704U, 
    2414U, 5432U, 2575U, 4770U, 2453U, 5467U, 2614U, 11213U, 
    11663U, 11335U, 11735U, 5476U, 2624U, 11274U, 11699U, 11396U, 
    11771U, 4722U, 2434U, 2286U, 6521U, 5450U, 2595U, 2330U, 
    6565U, 4788U, 2473U, 2296U, 6531U, 5494U, 2644U, 2364U, 
    6599U, 4091U, 4817U, 9145U, 9173U, 3653U, 11574U, 5625U, 
    11458U, 11580U, 5648U, 5354U, 5577U, 9757U, 10941U, 10049U, 
    11002U, 3949U, 12285U, 4894U, 12391U, 11465U, 13001U, 4455U, 
    12366U, 6736U, 12526U, 4651U, 12375U, 6902U, 12535U, 11200U, 
    11322U, 11261U, 11383U, 11487U, 11495U, 9200U, 5282U, 14425U, 
    5655U, 14520U, 5325U, 14463U, 5689U, 14552U, 3185U, 1281U, 
    823U, 13717U, 13940U, 5048U, 1477U, 836U, 13839U, 14371U, 
    11904U, 461U, 862U, 13698U, 15160U, 6744U, 4218U, 14179U, 
    9889U, 14963U, 3856U, 9402U, 14851U, 14070U, 15993U, 3985U, 
    9477U, 14875U, 10891U, 9980U, 14993U, 15031U, 14105U, 4316U, 
    10020U, 4134U, 14151U, 9844U, 14940U, 3999U, 10900U, 13190U, 
    15243U, 15039U, 13115U, 15219U, 14112U, 11541U, 10995U, 13200U, 
    15252U, 15078U, 13210U, 15261U, 15126U, 11047U, 10043U, 15002U, 
    15093U, 3870U, 9410U, 14858U, 14076U, 9095U, 14799U, 3302U, 
    9383U, 14828U, 13963U, 6047U, 9823U, 14926U, 14575U, 4224U, 
    14186U, 9895U, 14970U, 3965U, 14091U, 9649U, 14905U, 3878U, 
    9419U, 14866U, 14083U, 3310U, 9392U, 14836U, 13970U, 4516U, 
    9581U, 14883U, 14288U, 4047U, 14138U, 9838U, 14933U, 4142U, 
    14160U, 9852U, 14949U, 4157U, 14167U, 9866U, 14956U, 4353U, 
    14230U, 10201U, 15009U, 8569U, 14749U, 4537U, 9588U, 14889U, 
    14293U, 4011U, 14119U, 9765U, 14919U, 10705U, 9971U, 14978U, 
    15016U, 3288U, 9375U, 14821U, 13957U, 11059U, 10711U, 8964U, 
    412U, 8951U, 397U, 3991U, 5190U, 3482U, 8743U, 10294U, 
    9787U, 5206U, 5641U, 14512U, 5311U, 14447U, 5675U, 14536U, 
    5878U, 1769U, 3536U, 2742U, 15922U, 12581U, 6084U, 13105U, 
    2185U, 12459U, 11022U, 2017U, 12956U, 2131U, 13052U, 2158U, 
    4008U, 12587U, 6091U, 10207U, 12605U, 12432U, 12515U, 10907U, 
    12882U, 12313U, 6178U, 335U, 13423U, 2386U, 10637U, 5586U, 
    6140U, 3956U, 10871U, 12867U, 12295U, 12191U, 13072U, 9634U, 
    10957U, 12935U, 12716U, 2482U, 1251U, 12593U, 6098U, 10861U, 
    1993U, 12828U, 2103U, 12176U, 2071U, 12618U, 2089U, 13142U, 
    2195U, 12466U, 11027U, 2023U, 12962U, 2138U, 13065U, 2164U, 
    5393U, 1498U, 9747U, 1934U, 11586U, 5696U, 12211U, 12399U, 
    13009U, 6040U, 9251U, 12974U, 6112U, 2776U, 12599U, 6105U, 
    10278U, 12834U, 12206U, 470U, 425U, 12640U, 2096U, 13217U, 
    2206U, 12473U, 11032U, 2029U, 12968U, 2145U, 13087U, 2170U, 
    13429U, 4260U, 12326U, 13044U, 13057U, 12198U, 13079U, 8591U, 
    12566U, 11101U, 12144U, 12114U, 12701U, 12161U, 6073U, 5971U, 
    12129U, 12756U, 12983U, 8837U, 4730U, 9638U, 12671U, 4385U, 
    8875U, 1814U, 9279U, 1913U, 8857U, 9629U, 14899U, 9047U, 
    1825U, 9234U, 4735U, 1426U, 9099U, 9217U, 1874U, 9229U, 
    6648U, 3198U, 1288U, 4212U, 4579U, 15884U, 8887U, 4198U, 
    4029U, 13221U, 4231U, 11825U, 4303U, 11980U, 3528U, 3542U, 
    4749U, 1442U, 9285U, 1920U, 15353U, 15364U, 8869U, 0U, 
    48U, 4755U, 5347U, 14471U, 13293U, 14340U, 9052U, 1831U, 
    9240U, 4191U, 4742U, 1434U, 9105U, 9223U, 1881U, 9246U, 
    6655U, 4588U, 15894U, 8894U, 4205U, 3941U, 2780U, 10056U, 
    13229U, 3977U, 10882U, 15023U, 14098U, 11525U, 10986U, 15070U, 
    15119U, 4017U, 14126U, 5396U, 1495U, 11562U, 15133U, 9081U, 
    9070U, 1852U, 4079U, 1353U, 13759U, 14145U, 6919U, 4806U, 
    1472U, 13833U, 14347U, 7896U, 1219U, 1231U, 9135U, 1864U, 
    13873U, 14804U, 9129U, 1865U, 13874U, 3643U, 1343U, 13747U, 
    14059U, 5554U, 1511U, 9752U, 1940U, 14805U, 4282U, 11933U, 
    10616U, 10625U, 5509U, 13300U, 15452U, 5567U, 13310U, 15462U, 
    9302U, 15543U, 3854U, 9400U, 15590U, 3983U, 9475U, 10889U, 
    9978U, 13275U, 8726U, 13352U, 15801U, 10416U, 13369U, 15812U, 
    10551U, 13379U, 15823U, 6619U, 15502U, 3997U, 10898U, 13188U, 
    13113U, 13284U, 11539U, 10993U, 13198U, 13208U, 5809U, 13321U, 
    15473U, 3868U, 9408U, 15599U, 9093U, 13362U, 15536U, 3300U, 
    9381U, 15569U, 6045U, 9821U, 15664U, 9309U, 15551U, 4803U, 
    15426U, 3876U, 9417U, 15609U, 3308U, 9390U, 15579U, 6418U, 
    15493U, 4514U, 9579U, 15644U, 6356U, 15485U, 6641U, 15512U, 
    7863U, 15520U, 13176U, 15772U, 8567U, 15528U, 4535U, 9586U, 
    15652U, 5871U, 13333U, 13414U, 15780U, 3286U, 9373U, 15560U, 
    6609U, 13341U, 15789U, 3910U, 9454U, 6059U, 9829U, 3885U, 
    9427U, 3919U, 9464U, 3898U, 9441U, 5233U, 12846U, 2870U, 
    12261U, 2798U, 12914U, 2910U, 12684U, 2834U, 15726U, 12865U, 
    2891U, 12293U, 2817U, 13389U, 12189U, 2788U, 13070U, 2960U, 
    12933U, 2931U, 12714U, 2853U, 13406U, 15745U, 12308U, 12729U, 
    15872U, 12317U, 12747U, 12855U, 2880U, 5749U, 2695U, 12269U, 
    2807U, 5711U, 2653U, 12923U, 2920U, 5770U, 2718U, 12692U, 
    2843U, 5730U, 2674U, 15735U, 12873U, 2900U, 5760U, 2707U, 
    12300U, 2825U, 5721U, 2664U, 13397U, 13022U, 2950U, 12941U, 
    2940U, 5781U, 2730U, 15762U, 12721U, 2861U, 5740U, 2685U, 
    15753U, 8901U, 10430U, 4597U, 5222U, 5261U, 2995U, 5343U, 
    3992U, 5227U, 5833U, 14560U, 8863U, 14784U, 3433U, 5839U, 
    441U, 849U, 13687U, 14567U, 8880U, 451U, 14791U, 14031U, 
    5409U, 14479U, 5416U, 1502U, 13847U, 13578U, 14487U, 13604U, 
    6370U, 1799U, 13856U, 13587U, 14581U, 13614U, 6378U, 1807U, 
    13865U, 13596U, 14589U, 13624U, 5318U, 14455U, 5682U, 14544U, 
    3232U, 3769U, 935U, 1449U, 958U, 1535U, 3557U, 3584U, 
    3686U, 3659U, 3611U, 3742U, 3713U, 948U, 1462U, 971U, 
    1716U, 3572U, 3599U, 3701U, 3674U, 3627U, 3757U, 3729U, 
    2553U, 4463U, 4796U, 4428U, 11037U, 4528U, 3512U, 4043U, 
    5277U, 14419U, 14133U, 11582U, 2040U, 13891U, 5636U, 14506U, 
    15140U, 8912U, 10444U, 4626U, 3835U, 5250U, 432U, 14408U, 
    14064U, 11432U, 5604U, 14495U, 15104U, 4194U, 5313U, 14449U, 
    14174U, 11821U, 2045U, 13897U, 5677U, 14538U, 15145U, 3228U, 
    1294U, 12425U, 12237U, 10866U, 1999U, 12840U, 2110U, 12232U, 
    2077U, 4299U, 10212U, 12611U, 12438U, 12243U, 10911U, 12887U, 
    12339U, 3960U, 10876U, 12875U, 12302U, 13024U, 9644U, 10962U, 
    12943U, 12723U, 5086U, 1484U, 12624U, 12445U, 12249U, 10936U, 
    2005U, 12899U, 2117U, 12420U, 2083U, 11590U, 7908U, 5701U, 
    12217U, 12405U, 13015U, 12978U, 6117U, 11960U, 2050U, 10283U, 
    12646U, 12452U, 12255U, 11009U, 2011U, 12950U, 2124U, 13039U, 
    2152U, 4265U, 12332U, 12224U, 15904U, 12412U, 15913U, 13031U, 
    8597U, 12573U, 11105U, 12152U, 12121U, 12168U, 6078U, 5977U, 
    12136U, 12988U, 4677U, 1420U, 13826U, 3415U, 1311U, 13739U, 
    14010U, 4442U, 1373U, 13773U, 14266U, 3439U, 1325U, 4488U, 
    1387U, 13789U, 14280U, 4665U, 1412U, 13817U, 14326U, 14334U, 
    5195U, 3421U, 14017U, 9735U, 3515U, 10689U, 3406U, 5212U, 
    3772U, 5240U, 3050U, 1261U, 2379U, 1243U, 9256U, 1888U, 
    6634U, 5791U, 10361U, 13461U, 2211U, 13472U, 2223U, 13483U, 
    2235U, 4278U, 5332U, 4116U, 2559U, 4469U, 5864U, 12181U, 
    4005U, 5390U, 4508U, 534U, 12678U, 548U, 3808U, 3520U, 
    4639U, 541U, 6923U, 10646U, 6317U, 9247U, 11921U, 5707U, 
    4612U, 8842U, 3239U, 5090U, 11986U, 8790U, 11972U, 8818U, 
    6409U, 7716U, 9340U, 9693U, 10081U, 6219U, 9365U, 6244U, 
    6300U, 9718U, 6392U, 6481U, 10105U, 4105U, 3400U, 3127U, 
    4990U, 11839U, 3255U, 5106U, 12002U, 4053U, 8749U, 12708U, 
    32U, 12893U, 40U, 8984U, 10741U, 3359U, 4359U, 5173U, 
    3001U, 12086U, 7684U, 14677U, 7790U, 14696U, 3277U, 13947U, 
    4323U, 14204U, 5128U, 14378U, 12024U, 15167U, 7731U, 14686U, 
    7799U, 14706U, 3174U, 13930U, 4244U, 14194U, 5037U, 14361U, 
    11895U, 15150U, 3334U, 13978U, 4332U, 14214U, 5148U, 14388U, 
    12056U, 15177U, 3019U, 13921U, 4901U, 14352U, 11479U, 15110U, 
    3350U, 13988U, 5164U, 14398U, 12077U, 15193U, 10187U, 14U, 
    10194U, 23U, 3365U, 4372U, 5179U, 3010U, 12101U, 11091U, 
    7746U, 4271U, 3323U, 5137U, 12033U, 3781U, 15396U, 11110U, 
    15697U, 3790U, 15406U, 11119U, 15707U, 3799U, 15416U, 12488U, 
    12631U, 12497U, 12653U, 12506U, 12662U, 3840U, 3219U, 4290U, 
    5077U, 11941U, 7723U, 7708U, 7808U, 3191U, 4253U, 5054U, 
    11910U, 3343U, 4341U, 5157U, 12065U, 9672U, 9682U, 7765U, 
    3159U, 4237U, 5022U, 11880U, 3262U, 4309U, 5113U, 12009U, 
    6290U, 11472U, 3027U, 4909U, 11510U, 3043U, 4916U, 11547U, 
    11795U, 6202U, 6273U, 9701U, 6227U, 6308U, 9726U, 8772U, 
    8798U, 8827U, 8763U, 3105U, 4968U, 11831U, 3247U, 5098U, 
    11994U, 3166U, 5029U, 11887U, 3269U, 5120U, 12016U, 6489U, 
    4092U, 8975U, 10728U, 3971U, 11504U, 7692U, 9146U, 9174U, 
    3654U, 6426U, 9111U, 9185U, 12552U, 9902U, 9988U, 9910U, 
    10004U, 9918U, 10027U, 6449U, 9996U, 6457U, 10012U, 6465U, 
    10035U, 3066U, 4061U, 4949U, 11595U, 3210U, 4281U, 5068U, 
    11932U, 3846U, 8718U, 11437U, 7740U, 6326U, 6628U, 7833U, 
    13146U, 3056U, 4037U, 5402U, 6363U, 4923U, 11575U, 5502U, 
    6377U, 7755U, 12520U, 5883U, 3816U, 11420U, 6041U, 3061U, 
    4042U, 5518U, 4928U, 6778U, 11072U, 11581U, 3203U, 15388U, 
    5061U, 15434U, 3142U, 5005U, 11854U, 11917U, 9252U, 2989U, 
    3834U, 4882U, 11431U, 3100U, 4200U, 4963U, 6897U, 11096U, 
    11820U, 8782U, 11964U, 8809U, 6400U, 7701U, 9332U, 9664U, 
    10073U, 6211U, 9357U, 6236U, 6282U, 9710U, 6384U, 6473U, 
    10097U, 10064U, 9323U, 9655U, 9348U, 10089U, 12544U, 3134U, 
    4997U, 11846U, 12558U, 3151U, 5014U, 11863U, 9201U, 7U, 
    2981U, 4874U, 9566U, 3113U, 4976U, 10425U, 4436U, 5336U, 
    9181U, 1869U, 13879U, 5553U, 1510U, 9751U, 1939U, 14809U, 
    7516U, 8111U, 7066U, 7994U, 6860U, 8265U, 7478U, 7449U, 
    8082U, 7122U, 7532U, 7142U, 7386U, 8055U, 7590U, 8128U, 
    7350U, 8045U, 7815U, 8064U, 8512U, 6688U, 9500U, 15620U, 
    10121U, 15673U, 9533U, 15632U, 10154U, 15685U, 7395U, 7404U, 
    6799U, 13122U, 13237U, 13132U, 13247U, 8002U, 7413U, 6678U, 
    7082U, 8281U, 8011U, 7102U, 8301U, 7599U, 8137U, 6888U, 
    8642U, 7431U, 8073U, 6992U, 8209U, 7330U, 8474U, 7985U, 
    6850U, 7057U, 7653U, 7241U, 7048U, 7370U, 7232U, 6950U, 
    8167U, 7288U, 8432U, 7948U, 6820U, 7250U, 8037U, 6869U, 
    8394U, 7498U, 8102U, 7198U, 8020U, 6970U, 8187U, 7308U, 
    8452U, 7975U, 6839U, 6928U, 8145U, 7266U, 8410U, 7938U, 
    6809U, 5525U, 3446U, 6332U, 7839U, 13152U, 7162U, 8341U, 
    5539U, 12480U, 8710U, 7176U, 8355U, 7552U, 8119U, 6878U, 
    8614U, 7012U, 7957U, 6830U, 8229U, 7607U, 7561U, 7028U, 
    7965U, 8245U, 7460U, 8093U, 7214U, 8028U, 7524U, 8583U, 
    7074U, 8273U, 7488U, 14655U, 8557U, 14738U, 7132U, 14633U, 
    8321U, 14716U, 7542U, 14666U, 8604U, 14755U, 7152U, 14644U, 
    8331U, 14727U, 7360U, 8494U, 8521U, 9511U, 10132U, 9544U, 
    10165U, 8530U, 7422U, 7824U, 9522U, 10143U, 9555U, 10176U, 
    7092U, 8291U, 7633U, 8667U, 7112U, 8311U, 7643U, 8677U, 
    7625U, 8659U, 7440U, 8539U, 7002U, 8219U, 7340U, 8484U, 
    7661U, 8687U, 7378U, 8504U, 6960U, 8177U, 7298U, 8442U, 
    7258U, 8402U, 7507U, 8574U, 7206U, 8377U, 6981U, 8198U, 
    7319U, 8463U, 6939U, 8156U, 7277U, 8421U, 5532U, 3454U, 
    6340U, 7847U, 13160U, 7169U, 8348U, 5546U, 3462U, 6348U, 
    7855U, 13168U, 7187U, 8366U, 7581U, 8633U, 7020U, 8237U, 
    7616U, 8650U, 7571U, 8623U, 7038U, 8255U, 7469U, 8548U, 
    7223U, 8385U, 4185U, 4957U, 8757U, 11814U, 12044U, 11950U, 
    4069U, 3384U, 11077U, 4076U, 9132U, 9126U, 3640U, 13454U, 
    9178U, 15973U, 15983U, 15965U, 11517U, 11554U, 6432U, 5289U, 
    15442U, 9118U, 5888U, 5610U, 3034U, 11924U, 15717U, 3371U, 
    2394U, 15844U, 9265U, 6024U, 5823U, 2745U, 15851U, 9035U, 
    5989U, 15865U, 15859U, 
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1979);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfo {
  explicit PPCGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~PPCGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc PPCInsts[];
extern const unsigned PPCInstrNameIndices[];
extern const char PPCInstrNameData[];
PPCGenInstrInfo::PPCGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1979);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace PPC {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace PPC {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace PPC {
namespace OpTypes {
enum OperandType {
  abscalltarget = 0,
  abscondbrtarget = 1,
  absdirectbrtarget = 2,
  atimm = 3,
  calltarget = 4,
  condbrtarget = 5,
  crbitm = 6,
  directbrtarget = 7,
  dispRI = 8,
  dispRIX = 9,
  dispRIX16 = 10,
  dispSPE2 = 11,
  dispSPE4 = 12,
  dispSPE8 = 13,
  f32imm = 14,
  f64imm = 15,
  i16imm = 16,
  i1imm = 17,
  i32imm = 18,
  i64imm = 19,
  i8imm = 20,
  imm32SExt16 = 21,
  imm64SExt16 = 22,
  imm64ZExt32 = 23,
  memr = 24,
  memri = 25,
  memrix = 26,
  memrix16 = 27,
  memrr = 28,
  pred = 29,
  ptr_rc_idx = 30,
  ptr_rc_nor0 = 31,
  s16imm = 32,
  s16imm64 = 33,
  s17imm = 34,
  s17imm64 = 35,
  s5imm = 36,
  spe2dis = 37,
  spe4dis = 38,
  spe8dis = 39,
  tlscall = 40,
  tlscall32 = 41,
  tlsgd = 42,
  tlsgd32 = 43,
  tlsreg = 44,
  tlsreg32 = 45,
  tocentry = 46,
  tocentry32 = 47,
  type0 = 48,
  type1 = 49,
  type2 = 50,
  type3 = 51,
  type4 = 52,
  type5 = 53,
  u10imm = 54,
  u12imm = 55,
  u16imm = 56,
  u16imm64 = 57,
  u1imm = 58,
  u2imm = 59,
  u3imm = 60,
  u4imm = 61,
  u5imm = 62,
  u6imm = 63,
  u7imm = 64,
  u8imm = 65,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace PPC {

enum IsVSXFMAAlt {
	IsVSXFMAAlt_1
};

enum RC {
	RC_0,
	RC_1
};

// getAltVSXFMAOpcode
LLVM_READONLY
int getAltVSXFMAOpcode(uint16_t Opcode) {
static const uint16_t getAltVSXFMAOpcodeTable[][2] = {
  { PPC::XSMADDADP, PPC::XSMADDMDP },
  { PPC::XSMADDASP, PPC::XSMADDMSP },
  { PPC::XSMSUBADP, PPC::XSMSUBMDP },
  { PPC::XSMSUBASP, PPC::XSMSUBMSP },
  { PPC::XSNMADDADP, PPC::XSNMADDMDP },
  { PPC::XSNMADDASP, PPC::XSNMADDMSP },
  { PPC::XSNMSUBADP, PPC::XSNMSUBMDP },
  { PPC::XSNMSUBASP, PPC::XSNMSUBMSP },
  { PPC::XVMADDADP, PPC::XVMADDMDP },
  { PPC::XVMADDASP, PPC::XVMADDMSP },
  { PPC::XVMSUBADP, PPC::XVMSUBMDP },
  { PPC::XVMSUBASP, PPC::XVMSUBMSP },
  { PPC::XVNMADDADP, PPC::XVNMADDMDP },
  { PPC::XVNMADDASP, PPC::XVNMADDMSP },
  { PPC::XVNMSUBADP, PPC::XVNMSUBMDP },
  { PPC::XVNMSUBASP, PPC::XVNMSUBMSP },
}; // End of getAltVSXFMAOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 16;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getAltVSXFMAOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getAltVSXFMAOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getAltVSXFMAOpcodeTable[mid][1];
}

// getNonRecordFormOpcode
LLVM_READONLY
int getNonRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getNonRecordFormOpcodeTable[][2] = {
  { PPC::ADD4o, PPC::ADD4 },
  { PPC::ADD8o, PPC::ADD8 },
  { PPC::ADDC8o, PPC::ADDC8 },
  { PPC::ADDCo, PPC::ADDC },
  { PPC::ADDE8o, PPC::ADDE8 },
  { PPC::ADDEo, PPC::ADDE },
  { PPC::ADDICo, PPC::ADDIC },
  { PPC::ADDME8o, PPC::ADDME8 },
  { PPC::ADDMEo, PPC::ADDME },
  { PPC::ADDZE8o, PPC::ADDZE8 },
  { PPC::ADDZEo, PPC::ADDZE },
  { PPC::AND8o, PPC::AND8 },
  { PPC::ANDC8o, PPC::ANDC8 },
  { PPC::ANDCo, PPC::ANDC },
  { PPC::ANDo, PPC::AND },
  { PPC::CNTLZDo, PPC::CNTLZD },
  { PPC::CNTLZW8o, PPC::CNTLZW8 },
  { PPC::CNTLZWo, PPC::CNTLZW },
  { PPC::CNTTZDo, PPC::CNTTZD },
  { PPC::CNTTZW8o, PPC::CNTTZW8 },
  { PPC::CNTTZWo, PPC::CNTTZW },
  { PPC::DIVDUo, PPC::DIVDU },
  { PPC::DIVDo, PPC::DIVD },
  { PPC::DIVWUo, PPC::DIVWU },
  { PPC::DIVWo, PPC::DIVW },
  { PPC::EQV8o, PPC::EQV8 },
  { PPC::EQVo, PPC::EQV },
  { PPC::EXTSB8o, PPC::EXTSB8 },
  { PPC::EXTSBo, PPC::EXTSB },
  { PPC::EXTSH8o, PPC::EXTSH8 },
  { PPC::EXTSHo, PPC::EXTSH },
  { PPC::EXTSW_32_64o, PPC::EXTSW_32_64 },
  { PPC::EXTSWo, PPC::EXTSW },
  { PPC::FABSDo, PPC::FABSD },
  { PPC::FABSSo, PPC::FABSS },
  { PPC::FADDSo, PPC::FADDS },
  { PPC::FADDo, PPC::FADD },
  { PPC::FCFIDSo, PPC::FCFIDS },
  { PPC::FCFIDUSo, PPC::FCFIDUS },
  { PPC::FCFIDUo, PPC::FCFIDU },
  { PPC::FCFIDo, PPC::FCFID },
  { PPC::FCPSGNDo, PPC::FCPSGND },
  { PPC::FCPSGNSo, PPC::FCPSGNS },
  { PPC::FCTIDUZo, PPC::FCTIDUZ },
  { PPC::FCTIDUo, PPC::FCTIDU },
  { PPC::FCTIDZo, PPC::FCTIDZ },
  { PPC::FCTIDo, PPC::FCTID },
  { PPC::FCTIWUZo, PPC::FCTIWUZ },
  { PPC::FCTIWUo, PPC::FCTIWU },
  { PPC::FCTIWZo, PPC::FCTIWZ },
  { PPC::FCTIWo, PPC::FCTIW },
  { PPC::FDIVSo, PPC::FDIVS },
  { PPC::FDIVo, PPC::FDIV },
  { PPC::FMADDSo, PPC::FMADDS },
  { PPC::FMADDo, PPC::FMADD },
  { PPC::FMRo, PPC::FMR },
  { PPC::FMSUBSo, PPC::FMSUBS },
  { PPC::FMSUBo, PPC::FMSUB },
  { PPC::FMULSo, PPC::FMULS },
  { PPC::FMULo, PPC::FMUL },
  { PPC::FNABSDo, PPC::FNABSD },
  { PPC::FNABSSo, PPC::FNABSS },
  { PPC::FNEGDo, PPC::FNEGD },
  { PPC::FNEGSo, PPC::FNEGS },
  { PPC::FNMADDSo, PPC::FNMADDS },
  { PPC::FNMADDo, PPC::FNMADD },
  { PPC::FNMSUBSo, PPC::FNMSUBS },
  { PPC::FNMSUBo, PPC::FNMSUB },
  { PPC::FRESo, PPC::FRES },
  { PPC::FREo, PPC::FRE },
  { PPC::FRIMDo, PPC::FRIMD },
  { PPC::FRIMSo, PPC::FRIMS },
  { PPC::FRINDo, PPC::FRIND },
  { PPC::FRINSo, PPC::FRINS },
  { PPC::FRIPDo, PPC::FRIPD },
  { PPC::FRIPSo, PPC::FRIPS },
  { PPC::FRIZDo, PPC::FRIZD },
  { PPC::FRIZSo, PPC::FRIZS },
  { PPC::FRSPo, PPC::FRSP },
  { PPC::FRSQRTESo, PPC::FRSQRTES },
  { PPC::FRSQRTEo, PPC::FRSQRTE },
  { PPC::FSELDo, PPC::FSELD },
  { PPC::FSELSo, PPC::FSELS },
  { PPC::FSQRTSo, PPC::FSQRTS },
  { PPC::FSQRTo, PPC::FSQRT },
  { PPC::FSUBSo, PPC::FSUBS },
  { PPC::FSUBo, PPC::FSUB },
  { PPC::MULHDUo, PPC::MULHDU },
  { PPC::MULHDo, PPC::MULHD },
  { PPC::MULHWUo, PPC::MULHWU },
  { PPC::MULHWo, PPC::MULHW },
  { PPC::MULLDo, PPC::MULLD },
  { PPC::MULLWo, PPC::MULLW },
  { PPC::NAND8o, PPC::NAND8 },
  { PPC::NANDo, PPC::NAND },
  { PPC::NEG8o, PPC::NEG8 },
  { PPC::NEGo, PPC::NEG },
  { PPC::NOR8o, PPC::NOR8 },
  { PPC::NORo, PPC::NOR },
  { PPC::OR8o, PPC::OR8 },
  { PPC::ORC8o, PPC::ORC8 },
  { PPC::ORCo, PPC::ORC },
  { PPC::ORo, PPC::OR },
  { PPC::RLDCLo, PPC::RLDCL },
  { PPC::RLDCRo, PPC::RLDCR },
  { PPC::RLDICL_32o, PPC::RLDICL_32 },
  { PPC::RLDICLo, PPC::RLDICL },
  { PPC::RLDICRo, PPC::RLDICR },
  { PPC::RLDICo, PPC::RLDIC },
  { PPC::RLDIMIo, PPC::RLDIMI },
  { PPC::RLWIMI8o, PPC::RLWIMI8 },
  { PPC::RLWIMIo, PPC::RLWIMI },
  { PPC::RLWINM8o, PPC::RLWINM8 },
  { PPC::RLWINMo, PPC::RLWINM },
  { PPC::RLWNM8o, PPC::RLWNM8 },
  { PPC::RLWNMo, PPC::RLWNM },
  { PPC::SLDo, PPC::SLD },
  { PPC::SLW8o, PPC::SLW8 },
  { PPC::SLWo, PPC::SLW },
  { PPC::SRADIo, PPC::SRADI },
  { PPC::SRADo, PPC::SRAD },
  { PPC::SRAWIo, PPC::SRAWI },
  { PPC::SRAWo, PPC::SRAW },
  { PPC::SRDo, PPC::SRD },
  { PPC::SRW8o, PPC::SRW8 },
  { PPC::SRWo, PPC::SRW },
  { PPC::SUBF8o, PPC::SUBF8 },
  { PPC::SUBFC8o, PPC::SUBFC8 },
  { PPC::SUBFCo, PPC::SUBFC },
  { PPC::SUBFE8o, PPC::SUBFE8 },
  { PPC::SUBFEo, PPC::SUBFE },
  { PPC::SUBFME8o, PPC::SUBFME8 },
  { PPC::SUBFMEo, PPC::SUBFME },
  { PPC::SUBFZE8o, PPC::SUBFZE8 },
  { PPC::SUBFZEo, PPC::SUBFZE },
  { PPC::SUBFo, PPC::SUBF },
  { PPC::XOR8o, PPC::XOR8 },
  { PPC::XORo, PPC::XOR },
}; // End of getNonRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 138;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getNonRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNonRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonRecordFormOpcodeTable[mid][1];
}

// getRecordFormOpcode
LLVM_READONLY
int getRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getRecordFormOpcodeTable[][2] = {
  { PPC::ADD4, PPC::ADD4o },
  { PPC::ADD8, PPC::ADD8o },
  { PPC::ADDC, PPC::ADDCo },
  { PPC::ADDC8, PPC::ADDC8o },
  { PPC::ADDE, PPC::ADDEo },
  { PPC::ADDE8, PPC::ADDE8o },
  { PPC::ADDIC, PPC::ADDICo },
  { PPC::ADDME, PPC::ADDMEo },
  { PPC::ADDME8, PPC::ADDME8o },
  { PPC::ADDZE, PPC::ADDZEo },
  { PPC::ADDZE8, PPC::ADDZE8o },
  { PPC::AND, PPC::ANDo },
  { PPC::AND8, PPC::AND8o },
  { PPC::ANDC, PPC::ANDCo },
  { PPC::ANDC8, PPC::ANDC8o },
  { PPC::CNTLZD, PPC::CNTLZDo },
  { PPC::CNTLZW, PPC::CNTLZWo },
  { PPC::CNTLZW8, PPC::CNTLZW8o },
  { PPC::CNTTZD, PPC::CNTTZDo },
  { PPC::CNTTZW, PPC::CNTTZWo },
  { PPC::CNTTZW8, PPC::CNTTZW8o },
  { PPC::DIVD, PPC::DIVDo },
  { PPC::DIVDU, PPC::DIVDUo },
  { PPC::DIVW, PPC::DIVWo },
  { PPC::DIVWU, PPC::DIVWUo },
  { PPC::EQV, PPC::EQVo },
  { PPC::EQV8, PPC::EQV8o },
  { PPC::EXTSB, PPC::EXTSBo },
  { PPC::EXTSB8, PPC::EXTSB8o },
  { PPC::EXTSH, PPC::EXTSHo },
  { PPC::EXTSH8, PPC::EXTSH8o },
  { PPC::EXTSW, PPC::EXTSWo },
  { PPC::EXTSW_32_64, PPC::EXTSW_32_64o },
  { PPC::FABSD, PPC::FABSDo },
  { PPC::FABSS, PPC::FABSSo },
  { PPC::FADD, PPC::FADDo },
  { PPC::FADDS, PPC::FADDSo },
  { PPC::FCFID, PPC::FCFIDo },
  { PPC::FCFIDS, PPC::FCFIDSo },
  { PPC::FCFIDU, PPC::FCFIDUo },
  { PPC::FCFIDUS, PPC::FCFIDUSo },
  { PPC::FCPSGND, PPC::FCPSGNDo },
  { PPC::FCPSGNS, PPC::FCPSGNSo },
  { PPC::FCTID, PPC::FCTIDo },
  { PPC::FCTIDU, PPC::FCTIDUo },
  { PPC::FCTIDUZ, PPC::FCTIDUZo },
  { PPC::FCTIDZ, PPC::FCTIDZo },
  { PPC::FCTIW, PPC::FCTIWo },
  { PPC::FCTIWU, PPC::FCTIWUo },
  { PPC::FCTIWUZ, PPC::FCTIWUZo },
  { PPC::FCTIWZ, PPC::FCTIWZo },
  { PPC::FDIV, PPC::FDIVo },
  { PPC::FDIVS, PPC::FDIVSo },
  { PPC::FMADD, PPC::FMADDo },
  { PPC::FMADDS, PPC::FMADDSo },
  { PPC::FMR, PPC::FMRo },
  { PPC::FMSUB, PPC::FMSUBo },
  { PPC::FMSUBS, PPC::FMSUBSo },
  { PPC::FMUL, PPC::FMULo },
  { PPC::FMULS, PPC::FMULSo },
  { PPC::FNABSD, PPC::FNABSDo },
  { PPC::FNABSS, PPC::FNABSSo },
  { PPC::FNEGD, PPC::FNEGDo },
  { PPC::FNEGS, PPC::FNEGSo },
  { PPC::FNMADD, PPC::FNMADDo },
  { PPC::FNMADDS, PPC::FNMADDSo },
  { PPC::FNMSUB, PPC::FNMSUBo },
  { PPC::FNMSUBS, PPC::FNMSUBSo },
  { PPC::FRE, PPC::FREo },
  { PPC::FRES, PPC::FRESo },
  { PPC::FRIMD, PPC::FRIMDo },
  { PPC::FRIMS, PPC::FRIMSo },
  { PPC::FRIND, PPC::FRINDo },
  { PPC::FRINS, PPC::FRINSo },
  { PPC::FRIPD, PPC::FRIPDo },
  { PPC::FRIPS, PPC::FRIPSo },
  { PPC::FRIZD, PPC::FRIZDo },
  { PPC::FRIZS, PPC::FRIZSo },
  { PPC::FRSP, PPC::FRSPo },
  { PPC::FRSQRTE, PPC::FRSQRTEo },
  { PPC::FRSQRTES, PPC::FRSQRTESo },
  { PPC::FSELD, PPC::FSELDo },
  { PPC::FSELS, PPC::FSELSo },
  { PPC::FSQRT, PPC::FSQRTo },
  { PPC::FSQRTS, PPC::FSQRTSo },
  { PPC::FSUB, PPC::FSUBo },
  { PPC::FSUBS, PPC::FSUBSo },
  { PPC::MULHD, PPC::MULHDo },
  { PPC::MULHDU, PPC::MULHDUo },
  { PPC::MULHW, PPC::MULHWo },
  { PPC::MULHWU, PPC::MULHWUo },
  { PPC::MULLD, PPC::MULLDo },
  { PPC::MULLW, PPC::MULLWo },
  { PPC::NAND, PPC::NANDo },
  { PPC::NAND8, PPC::NAND8o },
  { PPC::NEG, PPC::NEGo },
  { PPC::NEG8, PPC::NEG8o },
  { PPC::NOR, PPC::NORo },
  { PPC::NOR8, PPC::NOR8o },
  { PPC::OR, PPC::ORo },
  { PPC::OR8, PPC::OR8o },
  { PPC::ORC, PPC::ORCo },
  { PPC::ORC8, PPC::ORC8o },
  { PPC::RLDCL, PPC::RLDCLo },
  { PPC::RLDCR, PPC::RLDCRo },
  { PPC::RLDIC, PPC::RLDICo },
  { PPC::RLDICL, PPC::RLDICLo },
  { PPC::RLDICL_32, PPC::RLDICL_32o },
  { PPC::RLDICR, PPC::RLDICRo },
  { PPC::RLDIMI, PPC::RLDIMIo },
  { PPC::RLWIMI, PPC::RLWIMIo },
  { PPC::RLWIMI8, PPC::RLWIMI8o },
  { PPC::RLWINM, PPC::RLWINMo },
  { PPC::RLWINM8, PPC::RLWINM8o },
  { PPC::RLWNM, PPC::RLWNMo },
  { PPC::RLWNM8, PPC::RLWNM8o },
  { PPC::SLD, PPC::SLDo },
  { PPC::SLW, PPC::SLWo },
  { PPC::SLW8, PPC::SLW8o },
  { PPC::SRAD, PPC::SRADo },
  { PPC::SRADI, PPC::SRADIo },
  { PPC::SRAW, PPC::SRAWo },
  { PPC::SRAWI, PPC::SRAWIo },
  { PPC::SRD, PPC::SRDo },
  { PPC::SRW, PPC::SRWo },
  { PPC::SRW8, PPC::SRW8o },
  { PPC::SUBF, PPC::SUBFo },
  { PPC::SUBF8, PPC::SUBF8o },
  { PPC::SUBFC, PPC::SUBFCo },
  { PPC::SUBFC8, PPC::SUBFC8o },
  { PPC::SUBFE, PPC::SUBFEo },
  { PPC::SUBFE8, PPC::SUBFE8o },
  { PPC::SUBFME, PPC::SUBFMEo },
  { PPC::SUBFME8, PPC::SUBFME8o },
  { PPC::SUBFZE, PPC::SUBFZEo },
  { PPC::SUBFZE8, PPC::SUBFZE8o },
  { PPC::XOR, PPC::XORo },
  { PPC::XOR8, PPC::XOR8o },
}; // End of getRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 138;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRecordFormOpcodeTable[mid][1];
}

} // End PPC namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

