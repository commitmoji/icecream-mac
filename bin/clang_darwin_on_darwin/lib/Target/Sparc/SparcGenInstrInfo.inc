/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SP {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    FENTRY_CALL	= 18,
    PATCHPOINT	= 19,
    LOAD_STACK_GUARD	= 20,
    STATEPOINT	= 21,
    LOCAL_ESCAPE	= 22,
    FAULTING_OP	= 23,
    PATCHABLE_OP	= 24,
    PATCHABLE_FUNCTION_ENTER	= 25,
    PATCHABLE_RET	= 26,
    PATCHABLE_FUNCTION_EXIT	= 27,
    PATCHABLE_TAIL_CALL	= 28,
    G_ADD	= 29,
    G_SUB	= 30,
    G_MUL	= 31,
    G_SDIV	= 32,
    G_UDIV	= 33,
    G_SREM	= 34,
    G_UREM	= 35,
    G_AND	= 36,
    G_OR	= 37,
    G_XOR	= 38,
    G_FRAME_INDEX	= 39,
    G_GLOBAL_VALUE	= 40,
    G_EXTRACT	= 41,
    G_UNMERGE_VALUES	= 42,
    G_INSERT	= 43,
    G_SEQUENCE	= 44,
    G_MERGE_VALUES	= 45,
    G_PTRTOINT	= 46,
    G_INTTOPTR	= 47,
    G_BITCAST	= 48,
    G_LOAD	= 49,
    G_STORE	= 50,
    G_BRCOND	= 51,
    G_BRINDIRECT	= 52,
    G_INTRINSIC	= 53,
    G_INTRINSIC_W_SIDE_EFFECTS	= 54,
    G_ANYEXT	= 55,
    G_TRUNC	= 56,
    G_CONSTANT	= 57,
    G_FCONSTANT	= 58,
    G_VASTART	= 59,
    G_VAARG	= 60,
    G_SEXT	= 61,
    G_ZEXT	= 62,
    G_SHL	= 63,
    G_LSHR	= 64,
    G_ASHR	= 65,
    G_ICMP	= 66,
    G_FCMP	= 67,
    G_SELECT	= 68,
    G_UADDE	= 69,
    G_USUBE	= 70,
    G_SADDO	= 71,
    G_SSUBO	= 72,
    G_UMULO	= 73,
    G_SMULO	= 74,
    G_UMULH	= 75,
    G_SMULH	= 76,
    G_FADD	= 77,
    G_FSUB	= 78,
    G_FMUL	= 79,
    G_FDIV	= 80,
    G_FREM	= 81,
    G_FPOW	= 82,
    G_FNEG	= 83,
    G_FPEXT	= 84,
    G_FPTRUNC	= 85,
    G_FPTOSI	= 86,
    G_FPTOUI	= 87,
    G_SITOFP	= 88,
    G_UITOFP	= 89,
    G_GEP	= 90,
    G_PTR_MASK	= 91,
    G_BR	= 92,
    G_INSERT_VECTOR_ELT	= 93,
    G_EXTRACT_VECTOR_ELT	= 94,
    G_SHUFFLE_VECTOR	= 95,
    ADDCCri	= 96,
    ADDCCrr	= 97,
    ADDCri	= 98,
    ADDCrr	= 99,
    ADDEri	= 100,
    ADDErr	= 101,
    ADDXC	= 102,
    ADDXCCC	= 103,
    ADDXri	= 104,
    ADDXrr	= 105,
    ADDri	= 106,
    ADDrr	= 107,
    ADJCALLSTACKDOWN	= 108,
    ADJCALLSTACKUP	= 109,
    ALIGNADDR	= 110,
    ALIGNADDRL	= 111,
    ANDCCri	= 112,
    ANDCCrr	= 113,
    ANDNCCri	= 114,
    ANDNCCrr	= 115,
    ANDNri	= 116,
    ANDNrr	= 117,
    ANDXNrr	= 118,
    ANDXri	= 119,
    ANDXrr	= 120,
    ANDri	= 121,
    ANDrr	= 122,
    ARRAY16	= 123,
    ARRAY32	= 124,
    ARRAY8	= 125,
    BA	= 126,
    BCOND	= 127,
    BCONDA	= 128,
    BINDri	= 129,
    BINDrr	= 130,
    BMASK	= 131,
    BPFCC	= 132,
    BPFCCA	= 133,
    BPFCCANT	= 134,
    BPFCCNT	= 135,
    BPGEZapn	= 136,
    BPGEZapt	= 137,
    BPGEZnapn	= 138,
    BPGEZnapt	= 139,
    BPGZapn	= 140,
    BPGZapt	= 141,
    BPGZnapn	= 142,
    BPGZnapt	= 143,
    BPICC	= 144,
    BPICCA	= 145,
    BPICCANT	= 146,
    BPICCNT	= 147,
    BPLEZapn	= 148,
    BPLEZapt	= 149,
    BPLEZnapn	= 150,
    BPLEZnapt	= 151,
    BPLZapn	= 152,
    BPLZapt	= 153,
    BPLZnapn	= 154,
    BPLZnapt	= 155,
    BPNZapn	= 156,
    BPNZapt	= 157,
    BPNZnapn	= 158,
    BPNZnapt	= 159,
    BPXCC	= 160,
    BPXCCA	= 161,
    BPXCCANT	= 162,
    BPXCCNT	= 163,
    BPZapn	= 164,
    BPZapt	= 165,
    BPZnapn	= 166,
    BPZnapt	= 167,
    BSHUFFLE	= 168,
    CALL	= 169,
    CALLri	= 170,
    CALLrr	= 171,
    CASAasi10	= 172,
    CASArr	= 173,
    CASXrr	= 174,
    CASrr	= 175,
    CBCOND	= 176,
    CBCONDA	= 177,
    CMASK16	= 178,
    CMASK32	= 179,
    CMASK8	= 180,
    CMPri	= 181,
    CMPrr	= 182,
    EDGE16	= 183,
    EDGE16L	= 184,
    EDGE16LN	= 185,
    EDGE16N	= 186,
    EDGE32	= 187,
    EDGE32L	= 188,
    EDGE32LN	= 189,
    EDGE32N	= 190,
    EDGE8	= 191,
    EDGE8L	= 192,
    EDGE8LN	= 193,
    EDGE8N	= 194,
    EH_SJLJ_LONGJMP32ri	= 195,
    EH_SJLJ_LONGJMP32rr	= 196,
    EH_SJLJ_SETJMP32ri	= 197,
    EH_SJLJ_SETJMP32rr	= 198,
    FABSD	= 199,
    FABSQ	= 200,
    FABSS	= 201,
    FADDD	= 202,
    FADDQ	= 203,
    FADDS	= 204,
    FALIGNADATA	= 205,
    FAND	= 206,
    FANDNOT1	= 207,
    FANDNOT1S	= 208,
    FANDNOT2	= 209,
    FANDNOT2S	= 210,
    FANDS	= 211,
    FBCOND	= 212,
    FBCONDA	= 213,
    FCHKSM16	= 214,
    FCMPD	= 215,
    FCMPEQ16	= 216,
    FCMPEQ32	= 217,
    FCMPGT16	= 218,
    FCMPGT32	= 219,
    FCMPLE16	= 220,
    FCMPLE32	= 221,
    FCMPNE16	= 222,
    FCMPNE32	= 223,
    FCMPQ	= 224,
    FCMPS	= 225,
    FDIVD	= 226,
    FDIVQ	= 227,
    FDIVS	= 228,
    FDMULQ	= 229,
    FDTOI	= 230,
    FDTOQ	= 231,
    FDTOS	= 232,
    FDTOX	= 233,
    FEXPAND	= 234,
    FHADDD	= 235,
    FHADDS	= 236,
    FHSUBD	= 237,
    FHSUBS	= 238,
    FITOD	= 239,
    FITOQ	= 240,
    FITOS	= 241,
    FLCMPD	= 242,
    FLCMPS	= 243,
    FLUSH	= 244,
    FLUSHW	= 245,
    FLUSHri	= 246,
    FLUSHrr	= 247,
    FMEAN16	= 248,
    FMOVD	= 249,
    FMOVD_FCC	= 250,
    FMOVD_ICC	= 251,
    FMOVD_XCC	= 252,
    FMOVQ	= 253,
    FMOVQ_FCC	= 254,
    FMOVQ_ICC	= 255,
    FMOVQ_XCC	= 256,
    FMOVRGEZD	= 257,
    FMOVRGEZQ	= 258,
    FMOVRGEZS	= 259,
    FMOVRGZD	= 260,
    FMOVRGZQ	= 261,
    FMOVRGZS	= 262,
    FMOVRLEZD	= 263,
    FMOVRLEZQ	= 264,
    FMOVRLEZS	= 265,
    FMOVRLZD	= 266,
    FMOVRLZQ	= 267,
    FMOVRLZS	= 268,
    FMOVRNZD	= 269,
    FMOVRNZQ	= 270,
    FMOVRNZS	= 271,
    FMOVRZD	= 272,
    FMOVRZQ	= 273,
    FMOVRZS	= 274,
    FMOVS	= 275,
    FMOVS_FCC	= 276,
    FMOVS_ICC	= 277,
    FMOVS_XCC	= 278,
    FMUL8SUX16	= 279,
    FMUL8ULX16	= 280,
    FMUL8X16	= 281,
    FMUL8X16AL	= 282,
    FMUL8X16AU	= 283,
    FMULD	= 284,
    FMULD8SUX16	= 285,
    FMULD8ULX16	= 286,
    FMULQ	= 287,
    FMULS	= 288,
    FNADDD	= 289,
    FNADDS	= 290,
    FNAND	= 291,
    FNANDS	= 292,
    FNEGD	= 293,
    FNEGQ	= 294,
    FNEGS	= 295,
    FNHADDD	= 296,
    FNHADDS	= 297,
    FNMULD	= 298,
    FNMULS	= 299,
    FNOR	= 300,
    FNORS	= 301,
    FNOT1	= 302,
    FNOT1S	= 303,
    FNOT2	= 304,
    FNOT2S	= 305,
    FNSMULD	= 306,
    FONE	= 307,
    FONES	= 308,
    FOR	= 309,
    FORNOT1	= 310,
    FORNOT1S	= 311,
    FORNOT2	= 312,
    FORNOT2S	= 313,
    FORS	= 314,
    FPACK16	= 315,
    FPACK32	= 316,
    FPACKFIX	= 317,
    FPADD16	= 318,
    FPADD16S	= 319,
    FPADD32	= 320,
    FPADD32S	= 321,
    FPADD64	= 322,
    FPMERGE	= 323,
    FPSUB16	= 324,
    FPSUB16S	= 325,
    FPSUB32	= 326,
    FPSUB32S	= 327,
    FQTOD	= 328,
    FQTOI	= 329,
    FQTOS	= 330,
    FQTOX	= 331,
    FSLAS16	= 332,
    FSLAS32	= 333,
    FSLL16	= 334,
    FSLL32	= 335,
    FSMULD	= 336,
    FSQRTD	= 337,
    FSQRTQ	= 338,
    FSQRTS	= 339,
    FSRA16	= 340,
    FSRA32	= 341,
    FSRC1	= 342,
    FSRC1S	= 343,
    FSRC2	= 344,
    FSRC2S	= 345,
    FSRL16	= 346,
    FSRL32	= 347,
    FSTOD	= 348,
    FSTOI	= 349,
    FSTOQ	= 350,
    FSTOX	= 351,
    FSUBD	= 352,
    FSUBQ	= 353,
    FSUBS	= 354,
    FXNOR	= 355,
    FXNORS	= 356,
    FXOR	= 357,
    FXORS	= 358,
    FXTOD	= 359,
    FXTOQ	= 360,
    FXTOS	= 361,
    FZERO	= 362,
    FZEROS	= 363,
    GETPCX	= 364,
    JMPLri	= 365,
    JMPLrr	= 366,
    LDArr	= 367,
    LDCSRri	= 368,
    LDCSRrr	= 369,
    LDCri	= 370,
    LDCrr	= 371,
    LDDArr	= 372,
    LDDCri	= 373,
    LDDCrr	= 374,
    LDDFArr	= 375,
    LDDFri	= 376,
    LDDFrr	= 377,
    LDDri	= 378,
    LDDrr	= 379,
    LDFArr	= 380,
    LDFSRri	= 381,
    LDFSRrr	= 382,
    LDFri	= 383,
    LDFrr	= 384,
    LDQFArr	= 385,
    LDQFri	= 386,
    LDQFrr	= 387,
    LDSBArr	= 388,
    LDSBri	= 389,
    LDSBrr	= 390,
    LDSHArr	= 391,
    LDSHri	= 392,
    LDSHrr	= 393,
    LDSTUBArr	= 394,
    LDSTUBri	= 395,
    LDSTUBrr	= 396,
    LDSWri	= 397,
    LDSWrr	= 398,
    LDUBArr	= 399,
    LDUBri	= 400,
    LDUBrr	= 401,
    LDUHArr	= 402,
    LDUHri	= 403,
    LDUHrr	= 404,
    LDXFSRri	= 405,
    LDXFSRrr	= 406,
    LDXri	= 407,
    LDXrr	= 408,
    LDri	= 409,
    LDrr	= 410,
    LEAX_ADDri	= 411,
    LEA_ADDri	= 412,
    LZCNT	= 413,
    MEMBARi	= 414,
    MOVDTOX	= 415,
    MOVFCCri	= 416,
    MOVFCCrr	= 417,
    MOVICCri	= 418,
    MOVICCrr	= 419,
    MOVRGEZri	= 420,
    MOVRGEZrr	= 421,
    MOVRGZri	= 422,
    MOVRGZrr	= 423,
    MOVRLEZri	= 424,
    MOVRLEZrr	= 425,
    MOVRLZri	= 426,
    MOVRLZrr	= 427,
    MOVRNZri	= 428,
    MOVRNZrr	= 429,
    MOVRRZri	= 430,
    MOVRRZrr	= 431,
    MOVSTOSW	= 432,
    MOVSTOUW	= 433,
    MOVWTOS	= 434,
    MOVXCCri	= 435,
    MOVXCCrr	= 436,
    MOVXTOD	= 437,
    MULSCCri	= 438,
    MULSCCrr	= 439,
    MULXri	= 440,
    MULXrr	= 441,
    NOP	= 442,
    ORCCri	= 443,
    ORCCrr	= 444,
    ORNCCri	= 445,
    ORNCCrr	= 446,
    ORNri	= 447,
    ORNrr	= 448,
    ORXNrr	= 449,
    ORXri	= 450,
    ORXrr	= 451,
    ORri	= 452,
    ORrr	= 453,
    PDIST	= 454,
    PDISTN	= 455,
    POPCrr	= 456,
    RDASR	= 457,
    RDPR	= 458,
    RDPSR	= 459,
    RDTBR	= 460,
    RDWIM	= 461,
    RESTOREri	= 462,
    RESTORErr	= 463,
    RET	= 464,
    RETL	= 465,
    RETTri	= 466,
    RETTrr	= 467,
    SAVEri	= 468,
    SAVErr	= 469,
    SDIVCCri	= 470,
    SDIVCCrr	= 471,
    SDIVXri	= 472,
    SDIVXrr	= 473,
    SDIVri	= 474,
    SDIVrr	= 475,
    SELECT_CC_DFP_FCC	= 476,
    SELECT_CC_DFP_ICC	= 477,
    SELECT_CC_FP_FCC	= 478,
    SELECT_CC_FP_ICC	= 479,
    SELECT_CC_Int_FCC	= 480,
    SELECT_CC_Int_ICC	= 481,
    SELECT_CC_QFP_FCC	= 482,
    SELECT_CC_QFP_ICC	= 483,
    SET	= 484,
    SETHIXi	= 485,
    SETHIi	= 486,
    SHUTDOWN	= 487,
    SIAM	= 488,
    SLLXri	= 489,
    SLLXrr	= 490,
    SLLri	= 491,
    SLLrr	= 492,
    SMACri	= 493,
    SMACrr	= 494,
    SMULCCri	= 495,
    SMULCCrr	= 496,
    SMULri	= 497,
    SMULrr	= 498,
    SRAXri	= 499,
    SRAXrr	= 500,
    SRAri	= 501,
    SRArr	= 502,
    SRLXri	= 503,
    SRLXrr	= 504,
    SRLri	= 505,
    SRLrr	= 506,
    STArr	= 507,
    STBAR	= 508,
    STBArr	= 509,
    STBri	= 510,
    STBrr	= 511,
    STCSRri	= 512,
    STCSRrr	= 513,
    STCri	= 514,
    STCrr	= 515,
    STDArr	= 516,
    STDCQri	= 517,
    STDCQrr	= 518,
    STDCri	= 519,
    STDCrr	= 520,
    STDFArr	= 521,
    STDFQri	= 522,
    STDFQrr	= 523,
    STDFri	= 524,
    STDFrr	= 525,
    STDri	= 526,
    STDrr	= 527,
    STFArr	= 528,
    STFSRri	= 529,
    STFSRrr	= 530,
    STFri	= 531,
    STFrr	= 532,
    STHArr	= 533,
    STHri	= 534,
    STHrr	= 535,
    STQFArr	= 536,
    STQFri	= 537,
    STQFrr	= 538,
    STXFSRri	= 539,
    STXFSRrr	= 540,
    STXri	= 541,
    STXrr	= 542,
    STri	= 543,
    STrr	= 544,
    SUBCCri	= 545,
    SUBCCrr	= 546,
    SUBCri	= 547,
    SUBCrr	= 548,
    SUBEri	= 549,
    SUBErr	= 550,
    SUBXri	= 551,
    SUBXrr	= 552,
    SUBri	= 553,
    SUBrr	= 554,
    SWAPArr	= 555,
    SWAPri	= 556,
    SWAPrr	= 557,
    TA3	= 558,
    TA5	= 559,
    TADDCCTVri	= 560,
    TADDCCTVrr	= 561,
    TADDCCri	= 562,
    TADDCCrr	= 563,
    TICCri	= 564,
    TICCrr	= 565,
    TLS_ADDXrr	= 566,
    TLS_ADDrr	= 567,
    TLS_CALL	= 568,
    TLS_LDXrr	= 569,
    TLS_LDrr	= 570,
    TRAPri	= 571,
    TRAPrr	= 572,
    TSUBCCTVri	= 573,
    TSUBCCTVrr	= 574,
    TSUBCCri	= 575,
    TSUBCCrr	= 576,
    TXCCri	= 577,
    TXCCrr	= 578,
    UDIVCCri	= 579,
    UDIVCCrr	= 580,
    UDIVXri	= 581,
    UDIVXrr	= 582,
    UDIVri	= 583,
    UDIVrr	= 584,
    UMACri	= 585,
    UMACrr	= 586,
    UMULCCri	= 587,
    UMULCCrr	= 588,
    UMULXHI	= 589,
    UMULri	= 590,
    UMULrr	= 591,
    UNIMP	= 592,
    V9FCMPD	= 593,
    V9FCMPED	= 594,
    V9FCMPEQ	= 595,
    V9FCMPES	= 596,
    V9FCMPQ	= 597,
    V9FCMPS	= 598,
    V9FMOVD_FCC	= 599,
    V9FMOVQ_FCC	= 600,
    V9FMOVS_FCC	= 601,
    V9MOVFCCri	= 602,
    V9MOVFCCrr	= 603,
    WRASRri	= 604,
    WRASRrr	= 605,
    WRPRri	= 606,
    WRPRrr	= 607,
    WRPSRri	= 608,
    WRPSRrr	= 609,
    WRTBRri	= 610,
    WRTBRrr	= 611,
    WRWIMri	= 612,
    WRWIMrr	= 613,
    XMULX	= 614,
    XMULXHI	= 615,
    XNORCCri	= 616,
    XNORCCrr	= 617,
    XNORXrr	= 618,
    XNORri	= 619,
    XNORrr	= 620,
    XORCCri	= 621,
    XORCCrr	= 622,
    XORXri	= 623,
    XORXrr	= 624,
    XORri	= 625,
    XORrr	= 626,
    INSTRUCTION_LIST_END = 627
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_iu_instr	= 1,
    IIC_fpu_normal_instr	= 2,
    IIC_jmp_or_call	= 3,
    IIC_fpu_abs	= 4,
    IIC_fpu_fast_instr	= 5,
    IIC_fpu_divd	= 6,
    IIC_fpu_divs	= 7,
    IIC_fpu_muld	= 8,
    IIC_fpu_muls	= 9,
    IIC_fpu_negs	= 10,
    IIC_fpu_sqrtd	= 11,
    IIC_fpu_sqrts	= 12,
    IIC_fpu_stod	= 13,
    IIC_ldd	= 14,
    IIC_iu_or_fpu_instr	= 15,
    IIC_iu_div	= 16,
    IIC_smac_umac	= 17,
    IIC_iu_smul	= 18,
    IIC_st	= 19,
    IIC_std	= 20,
    IIC_iu_umul	= 21,
    SCHED_LIST_END = 22
  };
} // end Sched namespace
} // end SP namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { SP::ICC, 0 };
static const MCPhysReg ImplicitList2[] = { SP::O6, 0 };
static const MCPhysReg ImplicitList3[] = { SP::WIM, 0 };
static const MCPhysReg ImplicitList4[] = { SP::FCC0, 0 };
static const MCPhysReg ImplicitList5[] = { SP::O7, 0 };
static const MCPhysReg ImplicitList6[] = { SP::CPSR, 0 };
static const MCPhysReg ImplicitList7[] = { SP::FSR, 0 };
static const MCPhysReg ImplicitList8[] = { SP::Y, SP::ICC, 0 };
static const MCPhysReg ImplicitList9[] = { SP::PSR, 0 };
static const MCPhysReg ImplicitList10[] = { SP::TBR, 0 };
static const MCPhysReg ImplicitList11[] = { SP::Y, 0 };
static const MCPhysReg ImplicitList12[] = { SP::Y, SP::ASR18, 0 };
static const MCPhysReg ImplicitList13[] = { SP::CPQ, 0 };
static const MCPhysReg ImplicitList14[] = { SP::FQ, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo37[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo39[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo61[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo62[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo123[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo124[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo125[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc SparcInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #18 = FENTRY_CALL
  { 19,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #19 = PATCHPOINT
  { 20,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #20 = LOAD_STACK_GUARD
  { 21,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #21 = STATEPOINT
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #22 = LOCAL_ESCAPE
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = FAULTING_OP
  { 24,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #24 = PATCHABLE_OP
  { 25,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #25 = PATCHABLE_FUNCTION_ENTER
  { 26,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #26 = PATCHABLE_RET
  { 27,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #27 = PATCHABLE_FUNCTION_EXIT
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = PATCHABLE_TAIL_CALL
  { 29,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #29 = G_ADD
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #30 = G_SUB
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_MUL
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_SDIV
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_UDIV
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_SREM
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_UREM
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_AND
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_OR
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #38 = G_XOR
  { 39,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #39 = G_FRAME_INDEX
  { 40,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #40 = G_GLOBAL_VALUE
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #41 = G_EXTRACT
  { 42,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #42 = G_UNMERGE_VALUES
  { 43,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #43 = G_INSERT
  { 44,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #44 = G_SEQUENCE
  { 45,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = G_MERGE_VALUES
  { 46,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #46 = G_PTRTOINT
  { 47,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #47 = G_INTTOPTR
  { 48,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #48 = G_BITCAST
  { 49,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = G_LOAD
  { 50,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #50 = G_STORE
  { 51,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #51 = G_BRCOND
  { 52,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = G_BRINDIRECT
  { 53,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #53 = G_INTRINSIC
  { 54,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #54 = G_INTRINSIC_W_SIDE_EFFECTS
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #55 = G_ANYEXT
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #56 = G_TRUNC
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #57 = G_CONSTANT
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #58 = G_FCONSTANT
  { 59,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #59 = G_VASTART
  { 60,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #60 = G_VAARG
  { 61,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #61 = G_SEXT
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #62 = G_ZEXT
  { 63,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #63 = G_SHL
  { 64,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #64 = G_LSHR
  { 65,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #65 = G_ASHR
  { 66,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #66 = G_ICMP
  { 67,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #67 = G_FCMP
  { 68,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #68 = G_SELECT
  { 69,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #69 = G_UADDE
  { 70,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #70 = G_USUBE
  { 71,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #71 = G_SADDO
  { 72,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #72 = G_SSUBO
  { 73,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #73 = G_UMULO
  { 74,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #74 = G_SMULO
  { 75,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #75 = G_UMULH
  { 76,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #76 = G_SMULH
  { 77,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #77 = G_FADD
  { 78,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #78 = G_FSUB
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #79 = G_FMUL
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #80 = G_FDIV
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #81 = G_FREM
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #82 = G_FPOW
  { 83,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #83 = G_FNEG
  { 84,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #84 = G_FPEXT
  { 85,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #85 = G_FPTRUNC
  { 86,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #86 = G_FPTOSI
  { 87,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #87 = G_FPTOUI
  { 88,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #88 = G_SITOFP
  { 89,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #89 = G_UITOFP
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #90 = G_GEP
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #91 = G_PTR_MASK
  { 92,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #92 = G_BR
  { 93,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #93 = G_INSERT_VECTOR_ELT
  { 94,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #94 = G_EXTRACT_VECTOR_ELT
  { 95,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #95 = G_SHUFFLE_VECTOR
  { 96,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #96 = ADDCCri
  { 97,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #97 = ADDCCrr
  { 98,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #98 = ADDCri
  { 99,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #99 = ADDCrr
  { 100,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #100 = ADDEri
  { 101,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #101 = ADDErr
  { 102,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #102 = ADDXC
  { 103,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #103 = ADDXCCC
  { 104,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #104 = ADDXri
  { 105,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #105 = ADDXrr
  { 106,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #106 = ADDri
  { 107,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #107 = ADDrr
  { 108,	1,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo3, -1 ,nullptr },  // Inst #108 = ADJCALLSTACKDOWN
  { 109,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #109 = ADJCALLSTACKUP
  { 110,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #110 = ALIGNADDR
  { 111,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #111 = ALIGNADDRL
  { 112,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #112 = ANDCCri
  { 113,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #113 = ANDCCrr
  { 114,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #114 = ANDNCCri
  { 115,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #115 = ANDNCCrr
  { 116,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #116 = ANDNri
  { 117,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #117 = ANDNrr
  { 118,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #118 = ANDXNrr
  { 119,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #119 = ANDXri
  { 120,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #120 = ANDXrr
  { 121,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #121 = ANDri
  { 122,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #122 = ANDrr
  { 123,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #123 = ARRAY16
  { 124,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #124 = ARRAY32
  { 125,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #125 = ARRAY8
  { 126,	1,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #126 = BA
  { 127,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #127 = BCOND
  { 128,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #128 = BCONDA
  { 129,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #129 = BINDri
  { 130,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #130 = BINDrr
  { 131,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #131 = BMASK
  { 132,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #132 = BPFCC
  { 133,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #133 = BPFCCA
  { 134,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #134 = BPFCCANT
  { 135,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #135 = BPFCCNT
  { 136,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #136 = BPGEZapn
  { 137,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #137 = BPGEZapt
  { 138,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #138 = BPGEZnapn
  { 139,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #139 = BPGEZnapt
  { 140,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #140 = BPGZapn
  { 141,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #141 = BPGZapt
  { 142,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #142 = BPGZnapn
  { 143,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #143 = BPGZnapt
  { 144,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #144 = BPICC
  { 145,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #145 = BPICCA
  { 146,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #146 = BPICCANT
  { 147,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #147 = BPICCNT
  { 148,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #148 = BPLEZapn
  { 149,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #149 = BPLEZapt
  { 150,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #150 = BPLEZnapn
  { 151,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #151 = BPLEZnapt
  { 152,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #152 = BPLZapn
  { 153,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #153 = BPLZapt
  { 154,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #154 = BPLZnapn
  { 155,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #155 = BPLZnapt
  { 156,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #156 = BPNZapn
  { 157,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #157 = BPNZapt
  { 158,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #158 = BPNZnapn
  { 159,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #159 = BPNZnapt
  { 160,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #160 = BPXCC
  { 161,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #161 = BPXCCA
  { 162,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #162 = BPXCCANT
  { 163,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #163 = BPXCCNT
  { 164,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #164 = BPZapn
  { 165,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #165 = BPZapt
  { 166,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #166 = BPZnapn
  { 167,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #167 = BPZnapt
  { 168,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #168 = BSHUFFLE
  { 169,	1,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #169 = CALL
  { 170,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #170 = CALLri
  { 171,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #171 = CALLrr
  { 172,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #172 = CASAasi10
  { 173,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #173 = CASArr
  { 174,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #174 = CASXrr
  { 175,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #175 = CASrr
  { 176,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #176 = CBCOND
  { 177,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #177 = CBCONDA
  { 178,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #178 = CMASK16
  { 179,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #179 = CMASK32
  { 180,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #180 = CMASK8
  { 181,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #181 = CMPri
  { 182,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #182 = CMPrr
  { 183,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #183 = EDGE16
  { 184,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #184 = EDGE16L
  { 185,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #185 = EDGE16LN
  { 186,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #186 = EDGE16N
  { 187,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #187 = EDGE32
  { 188,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #188 = EDGE32L
  { 189,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #189 = EDGE32LN
  { 190,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #190 = EDGE32N
  { 191,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #191 = EDGE8
  { 192,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #192 = EDGE8L
  { 193,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #193 = EDGE8LN
  { 194,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #194 = EDGE8N
  { 195,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #195 = EH_SJLJ_LONGJMP32ri
  { 196,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #196 = EH_SJLJ_LONGJMP32rr
  { 197,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo42, -1 ,nullptr },  // Inst #197 = EH_SJLJ_SETJMP32ri
  { 198,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #198 = EH_SJLJ_SETJMP32rr
  { 199,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #199 = FABSD
  { 200,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #200 = FABSQ
  { 201,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #201 = FABSS
  { 202,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #202 = FADDD
  { 203,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #203 = FADDQ
  { 204,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #204 = FADDS
  { 205,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #205 = FALIGNADATA
  { 206,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #206 = FAND
  { 207,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #207 = FANDNOT1
  { 208,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #208 = FANDNOT1S
  { 209,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #209 = FANDNOT2
  { 210,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #210 = FANDNOT2S
  { 211,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #211 = FANDS
  { 212,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #212 = FBCOND
  { 213,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #213 = FBCONDA
  { 214,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #214 = FCHKSM16
  { 215,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo44, -1 ,nullptr },  // Inst #215 = FCMPD
  { 216,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #216 = FCMPEQ16
  { 217,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #217 = FCMPEQ32
  { 218,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #218 = FCMPGT16
  { 219,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #219 = FCMPGT32
  { 220,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #220 = FCMPLE16
  { 221,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #221 = FCMPLE32
  { 222,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #222 = FCMPNE16
  { 223,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #223 = FCMPNE32
  { 224,	2,	0,	4,	0,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo45, -1 ,nullptr },  // Inst #224 = FCMPQ
  { 225,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo46, -1 ,nullptr },  // Inst #225 = FCMPS
  { 226,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #226 = FDIVD
  { 227,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #227 = FDIVQ
  { 228,	3,	1,	4,	7,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #228 = FDIVS
  { 229,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #229 = FDMULQ
  { 230,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #230 = FDTOI
  { 231,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #231 = FDTOQ
  { 232,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #232 = FDTOS
  { 233,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #233 = FDTOX
  { 234,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #234 = FEXPAND
  { 235,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #235 = FHADDD
  { 236,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #236 = FHADDS
  { 237,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #237 = FHSUBD
  { 238,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #238 = FHSUBS
  { 239,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #239 = FITOD
  { 240,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #240 = FITOQ
  { 241,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #241 = FITOS
  { 242,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #242 = FLCMPD
  { 243,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #243 = FLCMPS
  { 244,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #244 = FLUSH
  { 245,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #245 = FLUSHW
  { 246,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #246 = FLUSHri
  { 247,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #247 = FLUSHrr
  { 248,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #248 = FMEAN16
  { 249,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #249 = FMOVD
  { 250,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #250 = FMOVD_FCC
  { 251,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #251 = FMOVD_ICC
  { 252,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #252 = FMOVD_XCC
  { 253,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #253 = FMOVQ
  { 254,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #254 = FMOVQ_FCC
  { 255,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #255 = FMOVQ_ICC
  { 256,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #256 = FMOVQ_XCC
  { 257,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #257 = FMOVRGEZD
  { 258,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #258 = FMOVRGEZQ
  { 259,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #259 = FMOVRGEZS
  { 260,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #260 = FMOVRGZD
  { 261,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #261 = FMOVRGZQ
  { 262,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #262 = FMOVRGZS
  { 263,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #263 = FMOVRLEZD
  { 264,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #264 = FMOVRLEZQ
  { 265,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #265 = FMOVRLEZS
  { 266,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #266 = FMOVRLZD
  { 267,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #267 = FMOVRLZQ
  { 268,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #268 = FMOVRLZS
  { 269,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #269 = FMOVRNZD
  { 270,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #270 = FMOVRNZQ
  { 271,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #271 = FMOVRNZS
  { 272,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #272 = FMOVRZD
  { 273,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #273 = FMOVRZQ
  { 274,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #274 = FMOVRZS
  { 275,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #275 = FMOVS
  { 276,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #276 = FMOVS_FCC
  { 277,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #277 = FMOVS_ICC
  { 278,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #278 = FMOVS_XCC
  { 279,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #279 = FMUL8SUX16
  { 280,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #280 = FMUL8ULX16
  { 281,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #281 = FMUL8X16
  { 282,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #282 = FMUL8X16AL
  { 283,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #283 = FMUL8X16AU
  { 284,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #284 = FMULD
  { 285,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #285 = FMULD8SUX16
  { 286,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #286 = FMULD8ULX16
  { 287,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #287 = FMULQ
  { 288,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #288 = FMULS
  { 289,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #289 = FNADDD
  { 290,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #290 = FNADDS
  { 291,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #291 = FNAND
  { 292,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #292 = FNANDS
  { 293,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #293 = FNEGD
  { 294,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #294 = FNEGQ
  { 295,	2,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #295 = FNEGS
  { 296,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #296 = FNHADDD
  { 297,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #297 = FNHADDS
  { 298,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #298 = FNMULD
  { 299,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #299 = FNMULS
  { 300,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #300 = FNOR
  { 301,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #301 = FNORS
  { 302,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #302 = FNOT1
  { 303,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #303 = FNOT1S
  { 304,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #304 = FNOT2
  { 305,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #305 = FNOT2S
  { 306,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #306 = FNSMULD
  { 307,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #307 = FONE
  { 308,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #308 = FONES
  { 309,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #309 = FOR
  { 310,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #310 = FORNOT1
  { 311,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #311 = FORNOT1S
  { 312,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #312 = FORNOT2
  { 313,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #313 = FORNOT2S
  { 314,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #314 = FORS
  { 315,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #315 = FPACK16
  { 316,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #316 = FPACK32
  { 317,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #317 = FPACKFIX
  { 318,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #318 = FPADD16
  { 319,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #319 = FPADD16S
  { 320,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #320 = FPADD32
  { 321,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #321 = FPADD32S
  { 322,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #322 = FPADD64
  { 323,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #323 = FPMERGE
  { 324,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #324 = FPSUB16
  { 325,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #325 = FPSUB16S
  { 326,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #326 = FPSUB32
  { 327,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #327 = FPSUB32S
  { 328,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #328 = FQTOD
  { 329,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #329 = FQTOI
  { 330,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #330 = FQTOS
  { 331,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #331 = FQTOX
  { 332,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #332 = FSLAS16
  { 333,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #333 = FSLAS32
  { 334,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #334 = FSLL16
  { 335,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #335 = FSLL32
  { 336,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #336 = FSMULD
  { 337,	2,	1,	4,	11,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #337 = FSQRTD
  { 338,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #338 = FSQRTQ
  { 339,	2,	1,	4,	12,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #339 = FSQRTS
  { 340,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #340 = FSRA16
  { 341,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #341 = FSRA32
  { 342,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #342 = FSRC1
  { 343,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #343 = FSRC1S
  { 344,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #344 = FSRC2
  { 345,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #345 = FSRC2S
  { 346,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #346 = FSRL16
  { 347,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #347 = FSRL32
  { 348,	2,	1,	4,	13,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #348 = FSTOD
  { 349,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #349 = FSTOI
  { 350,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #350 = FSTOQ
  { 351,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #351 = FSTOX
  { 352,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #352 = FSUBD
  { 353,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #353 = FSUBQ
  { 354,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #354 = FSUBS
  { 355,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #355 = FXNOR
  { 356,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #356 = FXNORS
  { 357,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #357 = FXOR
  { 358,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #358 = FXORS
  { 359,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #359 = FXTOD
  { 360,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #360 = FXTOQ
  { 361,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #361 = FXTOS
  { 362,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #362 = FZERO
  { 363,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #363 = FZEROS
  { 364,	1,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList5, OperandInfo2, -1 ,nullptr },  // Inst #364 = GETPCX
  { 365,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #365 = JMPLri
  { 366,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #366 = JMPLrr
  { 367,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #367 = LDArr
  { 368,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo31, -1 ,nullptr },  // Inst #368 = LDCSRri
  { 369,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo32, -1 ,nullptr },  // Inst #369 = LDCSRrr
  { 370,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #370 = LDCri
  { 371,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #371 = LDCrr
  { 372,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #372 = LDDArr
  { 373,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #373 = LDDCri
  { 374,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #374 = LDDCrr
  { 375,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #375 = LDDFArr
  { 376,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #376 = LDDFri
  { 377,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #377 = LDDFrr
  { 378,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #378 = LDDri
  { 379,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #379 = LDDrr
  { 380,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #380 = LDFArr
  { 381,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo31, -1 ,nullptr },  // Inst #381 = LDFSRri
  { 382,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #382 = LDFSRrr
  { 383,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #383 = LDFri
  { 384,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #384 = LDFrr
  { 385,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #385 = LDQFArr
  { 386,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #386 = LDQFri
  { 387,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #387 = LDQFrr
  { 388,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #388 = LDSBArr
  { 389,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #389 = LDSBri
  { 390,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #390 = LDSBrr
  { 391,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #391 = LDSHArr
  { 392,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #392 = LDSHri
  { 393,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #393 = LDSHrr
  { 394,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #394 = LDSTUBArr
  { 395,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #395 = LDSTUBri
  { 396,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #396 = LDSTUBrr
  { 397,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #397 = LDSWri
  { 398,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #398 = LDSWrr
  { 399,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #399 = LDUBArr
  { 400,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #400 = LDUBri
  { 401,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #401 = LDUBrr
  { 402,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #402 = LDUHArr
  { 403,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #403 = LDUHri
  { 404,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #404 = LDUHrr
  { 405,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo31, -1 ,nullptr },  // Inst #405 = LDXFSRri
  { 406,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #406 = LDXFSRrr
  { 407,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #407 = LDXri
  { 408,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #408 = LDXrr
  { 409,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #409 = LDri
  { 410,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #410 = LDrr
  { 411,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #411 = LEAX_ADDri
  { 412,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #412 = LEA_ADDri
  { 413,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #413 = LZCNT
  { 414,	1,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #414 = MEMBARi
  { 415,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #415 = MOVDTOX
  { 416,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #416 = MOVFCCri
  { 417,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #417 = MOVFCCrr
  { 418,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #418 = MOVICCri
  { 419,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #419 = MOVICCrr
  { 420,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #420 = MOVRGEZri
  { 421,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #421 = MOVRGEZrr
  { 422,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #422 = MOVRGZri
  { 423,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #423 = MOVRGZrr
  { 424,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #424 = MOVRLEZri
  { 425,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #425 = MOVRLEZrr
  { 426,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #426 = MOVRLZri
  { 427,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #427 = MOVRLZrr
  { 428,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #428 = MOVRNZri
  { 429,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #429 = MOVRNZrr
  { 430,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #430 = MOVRRZri
  { 431,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #431 = MOVRRZrr
  { 432,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #432 = MOVSTOSW
  { 433,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #433 = MOVSTOUW
  { 434,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #434 = MOVWTOS
  { 435,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #435 = MOVXCCri
  { 436,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #436 = MOVXCCrr
  { 437,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #437 = MOVXTOD
  { 438,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo27, -1 ,nullptr },  // Inst #438 = MULSCCri
  { 439,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #439 = MULSCCrr
  { 440,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #440 = MULXri
  { 441,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #441 = MULXrr
  { 442,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #442 = NOP
  { 443,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #443 = ORCCri
  { 444,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #444 = ORCCrr
  { 445,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #445 = ORNCCri
  { 446,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #446 = ORNCCrr
  { 447,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #447 = ORNri
  { 448,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #448 = ORNrr
  { 449,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #449 = ORXNrr
  { 450,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #450 = ORXri
  { 451,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #451 = ORXrr
  { 452,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #452 = ORri
  { 453,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #453 = ORrr
  { 454,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #454 = PDIST
  { 455,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #455 = PDISTN
  { 456,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #456 = POPCrr
  { 457,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #457 = RDASR
  { 458,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #458 = RDPR
  { 459,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #459 = RDPSR
  { 460,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #460 = RDTBR
  { 461,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #461 = RDWIM
  { 462,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #462 = RESTOREri
  { 463,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #463 = RESTORErr
  { 464,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #464 = RET
  { 465,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #465 = RETL
  { 466,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #466 = RETTri
  { 467,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #467 = RETTrr
  { 468,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #468 = SAVEri
  { 469,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #469 = SAVErr
  { 470,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo27, -1 ,nullptr },  // Inst #470 = SDIVCCri
  { 471,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #471 = SDIVCCrr
  { 472,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #472 = SDIVXri
  { 473,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #473 = SDIVXrr
  { 474,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo27, -1 ,nullptr },  // Inst #474 = SDIVri
  { 475,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #475 = SDIVrr
  { 476,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #476 = SELECT_CC_DFP_FCC
  { 477,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #477 = SELECT_CC_DFP_ICC
  { 478,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #478 = SELECT_CC_FP_FCC
  { 479,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #479 = SELECT_CC_FP_ICC
  { 480,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #480 = SELECT_CC_Int_FCC
  { 481,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #481 = SELECT_CC_Int_ICC
  { 482,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #482 = SELECT_CC_QFP_FCC
  { 483,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #483 = SELECT_CC_QFP_ICC
  { 484,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #484 = SET
  { 485,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #485 = SETHIXi
  { 486,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #486 = SETHIi
  { 487,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #487 = SHUTDOWN
  { 488,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #488 = SIAM
  { 489,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #489 = SLLXri
  { 490,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #490 = SLLXrr
  { 491,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #491 = SLLri
  { 492,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #492 = SLLrr
  { 493,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo99, -1 ,nullptr },  // Inst #493 = SMACri
  { 494,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo100, -1 ,nullptr },  // Inst #494 = SMACrr
  { 495,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo27, -1 ,nullptr },  // Inst #495 = SMULCCri
  { 496,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #496 = SMULCCrr
  { 497,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo27, -1 ,nullptr },  // Inst #497 = SMULri
  { 498,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #498 = SMULrr
  { 499,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #499 = SRAXri
  { 500,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #500 = SRAXrr
  { 501,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #501 = SRAri
  { 502,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #502 = SRArr
  { 503,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #503 = SRLXri
  { 504,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #504 = SRLXrr
  { 505,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #505 = SRLri
  { 506,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #506 = SRLrr
  { 507,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #507 = STArr
  { 508,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #508 = STBAR
  { 509,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #509 = STBArr
  { 510,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #510 = STBri
  { 511,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #511 = STBrr
  { 512,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo31, -1 ,nullptr },  // Inst #512 = STCSRri
  { 513,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo32, -1 ,nullptr },  // Inst #513 = STCSRrr
  { 514,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #514 = STCri
  { 515,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #515 = STCrr
  { 516,	4,	0,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #516 = STDArr
  { 517,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo31, -1 ,nullptr },  // Inst #517 = STDCQri
  { 518,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo32, -1 ,nullptr },  // Inst #518 = STDCQrr
  { 519,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #519 = STDCri
  { 520,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #520 = STDCrr
  { 521,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #521 = STDFArr
  { 522,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo31, -1 ,nullptr },  // Inst #522 = STDFQri
  { 523,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo32, -1 ,nullptr },  // Inst #523 = STDFQrr
  { 524,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #524 = STDFri
  { 525,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #525 = STDFrr
  { 526,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #526 = STDri
  { 527,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #527 = STDrr
  { 528,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #528 = STFArr
  { 529,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo31, -1 ,nullptr },  // Inst #529 = STFSRri
  { 530,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #530 = STFSRrr
  { 531,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #531 = STFri
  { 532,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #532 = STFrr
  { 533,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #533 = STHArr
  { 534,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #534 = STHri
  { 535,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #535 = STHrr
  { 536,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #536 = STQFArr
  { 537,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #537 = STQFri
  { 538,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #538 = STQFrr
  { 539,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo31, -1 ,nullptr },  // Inst #539 = STXFSRri
  { 540,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #540 = STXFSRrr
  { 541,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #541 = STXri
  { 542,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #542 = STXrr
  { 543,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #543 = STri
  { 544,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #544 = STrr
  { 545,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #545 = SUBCCri
  { 546,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #546 = SUBCCrr
  { 547,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #547 = SUBCri
  { 548,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #548 = SUBCrr
  { 549,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #549 = SUBEri
  { 550,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #550 = SUBErr
  { 551,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #551 = SUBXri
  { 552,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #552 = SUBXrr
  { 553,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #553 = SUBri
  { 554,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #554 = SUBrr
  { 555,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #555 = SWAPArr
  { 556,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #556 = SWAPri
  { 557,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #557 = SWAPrr
  { 558,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #558 = TA3
  { 559,	0,	0,	4,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #559 = TA5
  { 560,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #560 = TADDCCTVri
  { 561,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #561 = TADDCCTVrr
  { 562,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #562 = TADDCCri
  { 563,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #563 = TADDCCrr
  { 564,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #564 = TICCri
  { 565,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #565 = TICCrr
  { 566,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #566 = TLS_ADDXrr
  { 567,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #567 = TLS_ADDrr
  { 568,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #568 = TLS_CALL
  { 569,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #569 = TLS_LDXrr
  { 570,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #570 = TLS_LDrr
  { 571,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #571 = TRAPri
  { 572,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #572 = TRAPrr
  { 573,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #573 = TSUBCCTVri
  { 574,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #574 = TSUBCCTVrr
  { 575,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #575 = TSUBCCri
  { 576,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #576 = TSUBCCrr
  { 577,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #577 = TXCCri
  { 578,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #578 = TXCCrr
  { 579,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo27, -1 ,nullptr },  // Inst #579 = UDIVCCri
  { 580,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #580 = UDIVCCrr
  { 581,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #581 = UDIVXri
  { 582,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #582 = UDIVXrr
  { 583,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo27, -1 ,nullptr },  // Inst #583 = UDIVri
  { 584,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #584 = UDIVrr
  { 585,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo99, -1 ,nullptr },  // Inst #585 = UMACri
  { 586,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo100, -1 ,nullptr },  // Inst #586 = UMACrr
  { 587,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo27, -1 ,nullptr },  // Inst #587 = UMULCCri
  { 588,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #588 = UMULCCrr
  { 589,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #589 = UMULXHI
  { 590,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo27, -1 ,nullptr },  // Inst #590 = UMULri
  { 591,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #591 = UMULrr
  { 592,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #592 = UNIMP
  { 593,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #593 = V9FCMPD
  { 594,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #594 = V9FCMPED
  { 595,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #595 = V9FCMPEQ
  { 596,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #596 = V9FCMPES
  { 597,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #597 = V9FCMPQ
  { 598,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #598 = V9FCMPS
  { 599,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #599 = V9FMOVD_FCC
  { 600,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #600 = V9FMOVQ_FCC
  { 601,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #601 = V9FMOVS_FCC
  { 602,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #602 = V9MOVFCCri
  { 603,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #603 = V9MOVFCCrr
  { 604,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #604 = WRASRri
  { 605,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #605 = WRASRrr
  { 606,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #606 = WRPRri
  { 607,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #607 = WRPRrr
  { 608,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo40, -1 ,nullptr },  // Inst #608 = WRPSRri
  { 609,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo41, -1 ,nullptr },  // Inst #609 = WRPSRrr
  { 610,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo40, -1 ,nullptr },  // Inst #610 = WRTBRri
  { 611,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo41, -1 ,nullptr },  // Inst #611 = WRTBRrr
  { 612,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo40, -1 ,nullptr },  // Inst #612 = WRWIMri
  { 613,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo41, -1 ,nullptr },  // Inst #613 = WRWIMrr
  { 614,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #614 = XMULX
  { 615,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #615 = XMULXHI
  { 616,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #616 = XNORCCri
  { 617,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #617 = XNORCCrr
  { 618,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #618 = XNORXrr
  { 619,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #619 = XNORri
  { 620,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #620 = XNORrr
  { 621,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #621 = XORCCri
  { 622,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #622 = XORCCrr
  { 623,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #623 = XORXri
  { 624,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #624 = XORXrr
  { 625,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #625 = XORri
  { 626,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #626 = XORrr
};

extern const char SparcInstrNameData[] = {
  /* 0 */ 'C', 'A', 'S', 'A', 'a', 's', 'i', '1', '0', 0,
  /* 10 */ 'F', 'S', 'R', 'C', '1', 0,
  /* 16 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 0,
  /* 25 */ 'F', 'N', 'O', 'T', '1', 0,
  /* 31 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 0,
  /* 39 */ 'F', 'S', 'R', 'A', '3', '2', 0,
  /* 46 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 0,
  /* 54 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 0,
  /* 62 */ 'E', 'D', 'G', 'E', '3', '2', 0,
  /* 69 */ 'F', 'C', 'M', 'P', 'L', 'E', '3', '2', 0,
  /* 78 */ 'F', 'C', 'M', 'P', 'N', 'E', '3', '2', 0,
  /* 87 */ 'F', 'P', 'A', 'C', 'K', '3', '2', 0,
  /* 95 */ 'C', 'M', 'A', 'S', 'K', '3', '2', 0,
  /* 103 */ 'F', 'S', 'L', 'L', '3', '2', 0,
  /* 110 */ 'F', 'S', 'R', 'L', '3', '2', 0,
  /* 117 */ 'F', 'C', 'M', 'P', 'E', 'Q', '3', '2', 0,
  /* 126 */ 'F', 'S', 'L', 'A', 'S', '3', '2', 0,
  /* 134 */ 'F', 'C', 'M', 'P', 'G', 'T', '3', '2', 0,
  /* 143 */ 'A', 'R', 'R', 'A', 'Y', '3', '2', 0,
  /* 151 */ 'F', 'S', 'R', 'C', '2', 0,
  /* 157 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 0,
  /* 166 */ 'F', 'N', 'O', 'T', '2', 0,
  /* 172 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 0,
  /* 180 */ 'T', 'A', '3', 0,
  /* 184 */ 'F', 'P', 'A', 'D', 'D', '6', '4', 0,
  /* 192 */ 'T', 'A', '5', 0,
  /* 196 */ 'F', 'S', 'R', 'A', '1', '6', 0,
  /* 203 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 0,
  /* 211 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 0,
  /* 219 */ 'E', 'D', 'G', 'E', '1', '6', 0,
  /* 226 */ 'F', 'C', 'M', 'P', 'L', 'E', '1', '6', 0,
  /* 235 */ 'F', 'C', 'M', 'P', 'N', 'E', '1', '6', 0,
  /* 244 */ 'F', 'P', 'A', 'C', 'K', '1', '6', 0,
  /* 252 */ 'C', 'M', 'A', 'S', 'K', '1', '6', 0,
  /* 260 */ 'F', 'S', 'L', 'L', '1', '6', 0,
  /* 267 */ 'F', 'S', 'R', 'L', '1', '6', 0,
  /* 274 */ 'F', 'C', 'H', 'K', 'S', 'M', '1', '6', 0,
  /* 283 */ 'F', 'M', 'E', 'A', 'N', '1', '6', 0,
  /* 291 */ 'F', 'C', 'M', 'P', 'E', 'Q', '1', '6', 0,
  /* 300 */ 'F', 'S', 'L', 'A', 'S', '1', '6', 0,
  /* 308 */ 'F', 'C', 'M', 'P', 'G', 'T', '1', '6', 0,
  /* 317 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 0,
  /* 326 */ 'F', 'M', 'U', 'L', 'D', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 338 */ 'F', 'M', 'U', 'L', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 349 */ 'F', 'M', 'U', 'L', 'D', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 361 */ 'F', 'M', 'U', 'L', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 372 */ 'A', 'R', 'R', 'A', 'Y', '1', '6', 0,
  /* 380 */ 'E', 'D', 'G', 'E', '8', 0,
  /* 386 */ 'C', 'M', 'A', 'S', 'K', '8', 0,
  /* 393 */ 'A', 'R', 'R', 'A', 'Y', '8', 0,
  /* 400 */ 'B', 'A', 0,
  /* 403 */ 'B', 'P', 'F', 'C', 'C', 'A', 0,
  /* 410 */ 'B', 'P', 'I', 'C', 'C', 'A', 0,
  /* 417 */ 'B', 'P', 'X', 'C', 'C', 'A', 0,
  /* 424 */ 'C', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 432 */ 'F', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 440 */ 'F', 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'A', 'T', 'A', 0,
  /* 452 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 459 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 465 */ 'A', 'D', 'D', 'X', 'C', 'C', 'C', 0,
  /* 473 */ 'B', 'P', 'F', 'C', 'C', 0,
  /* 479 */ 'V', '9', 'F', 'M', 'O', 'V', 'D', '_', 'F', 'C', 'C', 0,
  /* 491 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 509 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 527 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 544 */ 'V', '9', 'F', 'M', 'O', 'V', 'Q', '_', 'F', 'C', 'C', 0,
  /* 556 */ 'V', '9', 'F', 'M', 'O', 'V', 'S', '_', 'F', 'C', 'C', 0,
  /* 568 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'F', 'C', 'C', 0,
  /* 586 */ 'B', 'P', 'I', 'C', 'C', 0,
  /* 592 */ 'F', 'M', 'O', 'V', 'D', '_', 'I', 'C', 'C', 0,
  /* 602 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 620 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 638 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 655 */ 'F', 'M', 'O', 'V', 'Q', '_', 'I', 'C', 'C', 0,
  /* 665 */ 'F', 'M', 'O', 'V', 'S', '_', 'I', 'C', 'C', 0,
  /* 675 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'I', 'C', 'C', 0,
  /* 693 */ 'B', 'P', 'X', 'C', 'C', 0,
  /* 699 */ 'F', 'M', 'O', 'V', 'D', '_', 'X', 'C', 'C', 0,
  /* 709 */ 'F', 'M', 'O', 'V', 'Q', '_', 'X', 'C', 'C', 0,
  /* 719 */ 'F', 'M', 'O', 'V', 'S', '_', 'X', 'C', 'C', 0,
  /* 729 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 741 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 751 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 759 */ 'A', 'D', 'D', 'X', 'C', 0,
  /* 765 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 772 */ 'F', 'S', 'U', 'B', 'D', 0,
  /* 778 */ 'F', 'H', 'S', 'U', 'B', 'D', 0,
  /* 785 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 792 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 798 */ 'F', 'A', 'D', 'D', 'D', 0,
  /* 804 */ 'F', 'H', 'A', 'D', 'D', 'D', 0,
  /* 811 */ 'F', 'N', 'H', 'A', 'D', 'D', 'D', 0,
  /* 819 */ 'F', 'N', 'A', 'D', 'D', 'D', 0,
  /* 826 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'D', 0,
  /* 835 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 841 */ 'F', 'M', 'U', 'L', 'D', 0,
  /* 847 */ 'F', 'N', 'M', 'U', 'L', 'D', 0,
  /* 854 */ 'F', 'S', 'M', 'U', 'L', 'D', 0,
  /* 861 */ 'F', 'N', 'S', 'M', 'U', 'L', 'D', 0,
  /* 869 */ 'F', 'A', 'N', 'D', 0,
  /* 874 */ 'F', 'N', 'A', 'N', 'D', 0,
  /* 880 */ 'F', 'E', 'X', 'P', 'A', 'N', 'D', 0,
  /* 888 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 894 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 907 */ 'C', 'B', 'C', 'O', 'N', 'D', 0,
  /* 914 */ 'F', 'B', 'C', 'O', 'N', 'D', 0,
  /* 921 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 930 */ 'F', 'I', 'T', 'O', 'D', 0,
  /* 936 */ 'F', 'Q', 'T', 'O', 'D', 0,
  /* 942 */ 'F', 'S', 'T', 'O', 'D', 0,
  /* 948 */ 'F', 'X', 'T', 'O', 'D', 0,
  /* 954 */ 'M', 'O', 'V', 'X', 'T', 'O', 'D', 0,
  /* 962 */ 'V', '9', 'F', 'C', 'M', 'P', 'D', 0,
  /* 970 */ 'F', 'L', 'C', 'M', 'P', 'D', 0,
  /* 977 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 994 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 1000 */ 'F', 'S', 'Q', 'R', 'T', 'D', 0,
  /* 1007 */ 'F', 'D', 'I', 'V', 'D', 0,
  /* 1013 */ 'F', 'M', 'O', 'V', 'D', 0,
  /* 1019 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'D', 0,
  /* 1029 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'D', 0,
  /* 1039 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'D', 0,
  /* 1048 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'D', 0,
  /* 1057 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'D', 0,
  /* 1066 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'D', 0,
  /* 1074 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 1082 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 1095 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 1103 */ 'F', 'P', 'M', 'E', 'R', 'G', 'E', 0,
  /* 1111 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1118 */ 'B', 'S', 'H', 'U', 'F', 'F', 'L', 'E', 0,
  /* 1127 */ 'F', 'O', 'N', 'E', 0,
  /* 1132 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 1145 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 1153 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1163 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1178 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 1191 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 1198 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1213 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1227 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 1241 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 1249 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 1257 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 1265 */ 'F', 'L', 'U', 'S', 'H', 0,
  /* 1271 */ 'P', 'H', 'I', 0,
  /* 1275 */ 'U', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1283 */ 'X', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1291 */ 'F', 'D', 'T', 'O', 'I', 0,
  /* 1297 */ 'F', 'Q', 'T', 'O', 'I', 0,
  /* 1303 */ 'F', 'S', 'T', 'O', 'I', 0,
  /* 1309 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 1318 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 1327 */ 'B', 'M', 'A', 'S', 'K', 0,
  /* 1333 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 1344 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 0,
  /* 1352 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 0,
  /* 1360 */ 'E', 'D', 'G', 'E', '8', 'L', 0,
  /* 1367 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'L', 0,
  /* 1378 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1387 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1396 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 1402 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 1422 */ 'T', 'L', 'S', '_', 'C', 'A', 'L', 'L', 0,
  /* 1431 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 1443 */ 'K', 'I', 'L', 'L', 0,
  /* 1448 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 'L', 0,
  /* 1459 */ 'R', 'E', 'T', 'L', 0,
  /* 1464 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 1471 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 1477 */ 'S', 'I', 'A', 'M', 0,
  /* 1482 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 1489 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 1496 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 1503 */ 'R', 'D', 'W', 'I', 'M', 0,
  /* 1509 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 1519 */ 'E', 'D', 'G', 'E', '3', '2', 'N', 0,
  /* 1527 */ 'E', 'D', 'G', 'E', '1', '6', 'N', 0,
  /* 1535 */ 'E', 'D', 'G', 'E', '8', 'N', 0,
  /* 1542 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 'N', 0,
  /* 1551 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 'N', 0,
  /* 1560 */ 'E', 'D', 'G', 'E', '8', 'L', 'N', 0,
  /* 1568 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 1584 */ 'P', 'D', 'I', 'S', 'T', 'N', 0,
  /* 1591 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 1608 */ 'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', 0,
  /* 1617 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 1625 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 1633 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 1641 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 1649 */ 'F', 'Z', 'E', 'R', 'O', 0,
  /* 1655 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 1664 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 1670 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1679 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1688 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 1695 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 1702 */ 'U', 'N', 'I', 'M', 'P', 0,
  /* 1708 */ 'N', 'O', 'P', 0,
  /* 1712 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 1725 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 1737 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 1752 */ 'F', 'S', 'U', 'B', 'Q', 0,
  /* 1758 */ 'F', 'A', 'D', 'D', 'Q', 0,
  /* 1764 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 1773 */ 'F', 'N', 'E', 'G', 'Q', 0,
  /* 1779 */ 'F', 'D', 'M', 'U', 'L', 'Q', 0,
  /* 1786 */ 'F', 'M', 'U', 'L', 'Q', 0,
  /* 1792 */ 'F', 'D', 'T', 'O', 'Q', 0,
  /* 1798 */ 'F', 'I', 'T', 'O', 'Q', 0,
  /* 1804 */ 'F', 'S', 'T', 'O', 'Q', 0,
  /* 1810 */ 'F', 'X', 'T', 'O', 'Q', 0,
  /* 1816 */ 'V', '9', 'F', 'C', 'M', 'P', 'Q', 0,
  /* 1824 */ 'F', 'A', 'B', 'S', 'Q', 0,
  /* 1830 */ 'F', 'S', 'Q', 'R', 'T', 'Q', 0,
  /* 1837 */ 'F', 'D', 'I', 'V', 'Q', 0,
  /* 1843 */ 'F', 'M', 'O', 'V', 'Q', 0,
  /* 1849 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'Q', 0,
  /* 1859 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'Q', 0,
  /* 1869 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'Q', 0,
  /* 1878 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'Q', 0,
  /* 1887 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'Q', 0,
  /* 1896 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'Q', 0,
  /* 1904 */ 'S', 'T', 'B', 'A', 'R', 0,
  /* 1910 */ 'R', 'D', 'T', 'B', 'R', 0,
  /* 1916 */ 'G', '_', 'B', 'R', 0,
  /* 1921 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 0,
  /* 1931 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 1956 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 1963 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 1970 */ 'F', 'O', 'R', 0,
  /* 1974 */ 'F', 'N', 'O', 'R', 0,
  /* 1979 */ 'F', 'X', 'N', 'O', 'R', 0,
  /* 1985 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 2002 */ 'F', 'X', 'O', 'R', 0,
  /* 2007 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 2013 */ 'G', '_', 'O', 'R', 0,
  /* 2018 */ 'R', 'D', 'P', 'R', 0,
  /* 2023 */ 'R', 'D', 'A', 'S', 'R', 0,
  /* 2029 */ 'R', 'D', 'P', 'S', 'R', 0,
  /* 2035 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 2046 */ 'F', 'S', 'R', 'C', '1', 'S', 0,
  /* 2053 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 'S', 0,
  /* 2063 */ 'F', 'N', 'O', 'T', '1', 'S', 0,
  /* 2070 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 'S', 0,
  /* 2079 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 'S', 0,
  /* 2088 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 'S', 0,
  /* 2097 */ 'F', 'S', 'R', 'C', '2', 'S', 0,
  /* 2104 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 'S', 0,
  /* 2114 */ 'F', 'N', 'O', 'T', '2', 'S', 0,
  /* 2121 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 'S', 0,
  /* 2130 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 'S', 0,
  /* 2139 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 'S', 0,
  /* 2148 */ 'F', 'S', 'U', 'B', 'S', 0,
  /* 2154 */ 'F', 'H', 'S', 'U', 'B', 'S', 0,
  /* 2161 */ 'F', 'A', 'D', 'D', 'S', 0,
  /* 2167 */ 'F', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2174 */ 'F', 'N', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2182 */ 'F', 'N', 'A', 'D', 'D', 'S', 0,
  /* 2189 */ 'F', 'A', 'N', 'D', 'S', 0,
  /* 2195 */ 'F', 'N', 'A', 'N', 'D', 'S', 0,
  /* 2202 */ 'F', 'O', 'N', 'E', 'S', 0,
  /* 2208 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'S', 0,
  /* 2217 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 2234 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 2249 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 2255 */ 'F', 'M', 'U', 'L', 'S', 0,
  /* 2261 */ 'F', 'N', 'M', 'U', 'L', 'S', 0,
  /* 2268 */ 'F', 'Z', 'E', 'R', 'O', 'S', 0,
  /* 2275 */ 'F', 'D', 'T', 'O', 'S', 0,
  /* 2281 */ 'F', 'I', 'T', 'O', 'S', 0,
  /* 2287 */ 'F', 'Q', 'T', 'O', 'S', 0,
  /* 2293 */ 'M', 'O', 'V', 'W', 'T', 'O', 'S', 0,
  /* 2301 */ 'F', 'X', 'T', 'O', 'S', 0,
  /* 2307 */ 'V', '9', 'F', 'C', 'M', 'P', 'S', 0,
  /* 2315 */ 'F', 'L', 'C', 'M', 'P', 'S', 0,
  /* 2322 */ 'F', 'O', 'R', 'S', 0,
  /* 2327 */ 'F', 'N', 'O', 'R', 'S', 0,
  /* 2333 */ 'F', 'X', 'N', 'O', 'R', 'S', 0,
  /* 2340 */ 'F', 'X', 'O', 'R', 'S', 0,
  /* 2346 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 2363 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 2369 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 2396 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 2403 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 2409 */ 'F', 'M', 'O', 'V', 'S', 0,
  /* 2415 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'S', 0,
  /* 2425 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'S', 0,
  /* 2435 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'S', 0,
  /* 2444 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'S', 0,
  /* 2453 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'S', 0,
  /* 2462 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'S', 0,
  /* 2470 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 2480 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 2489 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 2502 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 2516 */ 'S', 'E', 'T', 0,
  /* 2520 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 2544 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 2565 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 2585 */ 'B', 'P', 'F', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2594 */ 'B', 'P', 'I', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2603 */ 'B', 'P', 'X', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2612 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2624 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2635 */ 'B', 'P', 'F', 'C', 'C', 'N', 'T', 0,
  /* 2643 */ 'B', 'P', 'I', 'C', 'C', 'N', 'T', 0,
  /* 2651 */ 'B', 'P', 'X', 'C', 'C', 'N', 'T', 0,
  /* 2659 */ 'L', 'Z', 'C', 'N', 'T', 0,
  /* 2665 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2676 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2687 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 2698 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2708 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2723 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 2732 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 2742 */ 'P', 'D', 'I', 'S', 'T', 0,
  /* 2748 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 2756 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 2763 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 2772 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 2779 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'U', 0,
  /* 2790 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 2797 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 2804 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 2811 */ 'F', 'L', 'U', 'S', 'H', 'W', 0,
  /* 2818 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 2825 */ 'M', 'O', 'V', 'S', 'T', 'O', 'S', 'W', 0,
  /* 2834 */ 'M', 'O', 'V', 'S', 'T', 'O', 'U', 'W', 0,
  /* 2843 */ 'G', 'E', 'T', 'P', 'C', 'X', 0,
  /* 2850 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 2864 */ 'F', 'P', 'A', 'C', 'K', 'F', 'I', 'X', 0,
  /* 2873 */ 'X', 'M', 'U', 'L', 'X', 0,
  /* 2879 */ 'F', 'D', 'T', 'O', 'X', 0,
  /* 2885 */ 'M', 'O', 'V', 'D', 'T', 'O', 'X', 0,
  /* 2893 */ 'F', 'Q', 'T', 'O', 'X', 0,
  /* 2899 */ 'F', 'S', 'T', 'O', 'X', 0,
  /* 2905 */ 'C', 'O', 'P', 'Y', 0,
  /* 2910 */ 'S', 'E', 'T', 'H', 'I', 'i', 0,
  /* 2917 */ 'M', 'E', 'M', 'B', 'A', 'R', 'i', 0,
  /* 2925 */ 'S', 'E', 'T', 'H', 'I', 'X', 'i', 0,
  /* 2933 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 2953 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 2972 */ 'S', 'R', 'A', 'r', 'i', 0,
  /* 2978 */ 'L', 'D', 'S', 'B', 'r', 'i', 0,
  /* 2985 */ 'S', 'T', 'B', 'r', 'i', 0,
  /* 2991 */ 'L', 'D', 'U', 'B', 'r', 'i', 0,
  /* 2998 */ 'S', 'U', 'B', 'r', 'i', 0,
  /* 3004 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'i', 0,
  /* 3013 */ 'S', 'M', 'A', 'C', 'r', 'i', 0,
  /* 3020 */ 'U', 'M', 'A', 'C', 'r', 'i', 0,
  /* 3027 */ 'S', 'U', 'B', 'C', 'r', 'i', 0,
  /* 3034 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'i', 0,
  /* 3043 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'i', 0,
  /* 3052 */ 'A', 'N', 'D', 'C', 'C', 'r', 'i', 0,
  /* 3060 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'i', 0,
  /* 3071 */ 'T', 'I', 'C', 'C', 'r', 'i', 0,
  /* 3078 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'i', 0,
  /* 3087 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 3096 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 3105 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'i', 0,
  /* 3114 */ 'O', 'R', 'N', 'C', 'C', 'r', 'i', 0,
  /* 3122 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 3131 */ 'X', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 3139 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'i', 0,
  /* 3148 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 3157 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 3166 */ 'T', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3173 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3182 */ 'A', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3189 */ 'L', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3196 */ 'L', 'D', 'C', 'r', 'i', 0,
  /* 3202 */ 'S', 'T', 'D', 'C', 'r', 'i', 0,
  /* 3209 */ 'S', 'T', 'C', 'r', 'i', 0,
  /* 3215 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3225 */ 'L', 'E', 'A', 'X', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3236 */ 'L', 'D', 'D', 'r', 'i', 0,
  /* 3242 */ 'L', 'D', 'r', 'i', 0,
  /* 3247 */ 'A', 'N', 'D', 'r', 'i', 0,
  /* 3253 */ 'B', 'I', 'N', 'D', 'r', 'i', 0,
  /* 3260 */ 'S', 'T', 'D', 'r', 'i', 0,
  /* 3266 */ 'S', 'U', 'B', 'E', 'r', 'i', 0,
  /* 3273 */ 'A', 'D', 'D', 'E', 'r', 'i', 0,
  /* 3280 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'i', 0,
  /* 3290 */ 'S', 'A', 'V', 'E', 'r', 'i', 0,
  /* 3297 */ 'L', 'D', 'D', 'F', 'r', 'i', 0,
  /* 3304 */ 'L', 'D', 'F', 'r', 'i', 0,
  /* 3310 */ 'S', 'T', 'D', 'F', 'r', 'i', 0,
  /* 3317 */ 'L', 'D', 'Q', 'F', 'r', 'i', 0,
  /* 3324 */ 'S', 'T', 'Q', 'F', 'r', 'i', 0,
  /* 3331 */ 'S', 'T', 'F', 'r', 'i', 0,
  /* 3337 */ 'L', 'D', 'S', 'H', 'r', 'i', 0,
  /* 3344 */ 'F', 'L', 'U', 'S', 'H', 'r', 'i', 0,
  /* 3352 */ 'S', 'T', 'H', 'r', 'i', 0,
  /* 3358 */ 'L', 'D', 'U', 'H', 'r', 'i', 0,
  /* 3365 */ 'C', 'A', 'L', 'L', 'r', 'i', 0,
  /* 3372 */ 'S', 'L', 'L', 'r', 'i', 0,
  /* 3378 */ 'J', 'M', 'P', 'L', 'r', 'i', 0,
  /* 3385 */ 'S', 'R', 'L', 'r', 'i', 0,
  /* 3391 */ 'S', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3398 */ 'U', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3405 */ 'W', 'R', 'W', 'I', 'M', 'r', 'i', 0,
  /* 3413 */ 'A', 'N', 'D', 'N', 'r', 'i', 0,
  /* 3420 */ 'O', 'R', 'N', 'r', 'i', 0,
  /* 3426 */ 'T', 'R', 'A', 'P', 'r', 'i', 0,
  /* 3433 */ 'S', 'W', 'A', 'P', 'r', 'i', 0,
  /* 3440 */ 'C', 'M', 'P', 'r', 'i', 0,
  /* 3446 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'i', 0,
  /* 3454 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'i', 0,
  /* 3462 */ 'W', 'R', 'T', 'B', 'R', 'r', 'i', 0,
  /* 3470 */ 'X', 'N', 'O', 'R', 'r', 'i', 0,
  /* 3477 */ 'X', 'O', 'R', 'r', 'i', 0,
  /* 3483 */ 'W', 'R', 'P', 'R', 'r', 'i', 0,
  /* 3490 */ 'W', 'R', 'A', 'S', 'R', 'r', 'i', 0,
  /* 3498 */ 'L', 'D', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3506 */ 'S', 'T', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3514 */ 'L', 'D', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3522 */ 'S', 'T', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3530 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3539 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3548 */ 'W', 'R', 'P', 'S', 'R', 'r', 'i', 0,
  /* 3556 */ 'S', 'T', 'r', 'i', 0,
  /* 3561 */ 'R', 'E', 'T', 'T', 'r', 'i', 0,
  /* 3568 */ 'S', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3575 */ 'U', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3582 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3593 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3604 */ 'L', 'D', 'S', 'W', 'r', 'i', 0,
  /* 3611 */ 'S', 'R', 'A', 'X', 'r', 'i', 0,
  /* 3618 */ 'S', 'U', 'B', 'X', 'r', 'i', 0,
  /* 3625 */ 'A', 'D', 'D', 'X', 'r', 'i', 0,
  /* 3632 */ 'L', 'D', 'X', 'r', 'i', 0,
  /* 3638 */ 'A', 'N', 'D', 'X', 'r', 'i', 0,
  /* 3645 */ 'S', 'L', 'L', 'X', 'r', 'i', 0,
  /* 3652 */ 'S', 'R', 'L', 'X', 'r', 'i', 0,
  /* 3659 */ 'M', 'U', 'L', 'X', 'r', 'i', 0,
  /* 3666 */ 'X', 'O', 'R', 'X', 'r', 'i', 0,
  /* 3673 */ 'S', 'T', 'X', 'r', 'i', 0,
  /* 3679 */ 'S', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3687 */ 'U', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3695 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'i', 0,
  /* 3705 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'i', 0,
  /* 3715 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'i', 0,
  /* 3724 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'i', 0,
  /* 3733 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'i', 0,
  /* 3742 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'i', 0,
  /* 3751 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3760 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3769 */ 'B', 'P', 'G', 'Z', 'a', 'p', 'n', 0,
  /* 3777 */ 'B', 'P', 'L', 'Z', 'a', 'p', 'n', 0,
  /* 3785 */ 'B', 'P', 'N', 'Z', 'a', 'p', 'n', 0,
  /* 3793 */ 'B', 'P', 'Z', 'a', 'p', 'n', 0,
  /* 3800 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3810 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3820 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3829 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3838 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3847 */ 'B', 'P', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3855 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3875 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3894 */ 'L', 'D', 'S', 'B', 'A', 'r', 'r', 0,
  /* 3902 */ 'S', 'T', 'B', 'A', 'r', 'r', 0,
  /* 3909 */ 'L', 'D', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3917 */ 'L', 'D', 'S', 'T', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3927 */ 'L', 'D', 'D', 'A', 'r', 'r', 0,
  /* 3934 */ 'L', 'D', 'A', 'r', 'r', 0,
  /* 3940 */ 'S', 'T', 'D', 'A', 'r', 'r', 0,
  /* 3947 */ 'L', 'D', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3955 */ 'L', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3962 */ 'S', 'T', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3970 */ 'L', 'D', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 3978 */ 'S', 'T', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 3986 */ 'S', 'T', 'F', 'A', 'r', 'r', 0,
  /* 3993 */ 'L', 'D', 'S', 'H', 'A', 'r', 'r', 0,
  /* 4001 */ 'S', 'T', 'H', 'A', 'r', 'r', 0,
  /* 4008 */ 'L', 'D', 'U', 'H', 'A', 'r', 'r', 0,
  /* 4016 */ 'S', 'W', 'A', 'P', 'A', 'r', 'r', 0,
  /* 4024 */ 'S', 'R', 'A', 'r', 'r', 0,
  /* 4030 */ 'C', 'A', 'S', 'A', 'r', 'r', 0,
  /* 4037 */ 'S', 'T', 'A', 'r', 'r', 0,
  /* 4043 */ 'L', 'D', 'S', 'B', 'r', 'r', 0,
  /* 4050 */ 'S', 'T', 'B', 'r', 'r', 0,
  /* 4056 */ 'L', 'D', 'U', 'B', 'r', 'r', 0,
  /* 4063 */ 'S', 'U', 'B', 'r', 'r', 0,
  /* 4069 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'r', 0,
  /* 4078 */ 'S', 'M', 'A', 'C', 'r', 'r', 0,
  /* 4085 */ 'U', 'M', 'A', 'C', 'r', 'r', 0,
  /* 4092 */ 'S', 'U', 'B', 'C', 'r', 'r', 0,
  /* 4099 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'r', 0,
  /* 4108 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'r', 0,
  /* 4117 */ 'A', 'N', 'D', 'C', 'C', 'r', 'r', 0,
  /* 4125 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'r', 0,
  /* 4136 */ 'T', 'I', 'C', 'C', 'r', 'r', 0,
  /* 4143 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'r', 0,
  /* 4152 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4161 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4170 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4179 */ 'O', 'R', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4187 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4196 */ 'X', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4204 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'r', 0,
  /* 4213 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4222 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4231 */ 'T', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4238 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4247 */ 'A', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4254 */ 'L', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4261 */ 'L', 'D', 'C', 'r', 'r', 0,
  /* 4267 */ 'S', 'T', 'D', 'C', 'r', 'r', 0,
  /* 4274 */ 'P', 'O', 'P', 'C', 'r', 'r', 0,
  /* 4281 */ 'S', 'T', 'C', 'r', 'r', 0,
  /* 4287 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'r', 'r', 0,
  /* 4297 */ 'L', 'D', 'D', 'r', 'r', 0,
  /* 4303 */ 'T', 'L', 'S', '_', 'L', 'D', 'r', 'r', 0,
  /* 4312 */ 'A', 'N', 'D', 'r', 'r', 0,
  /* 4318 */ 'B', 'I', 'N', 'D', 'r', 'r', 0,
  /* 4325 */ 'S', 'T', 'D', 'r', 'r', 0,
  /* 4331 */ 'S', 'U', 'B', 'E', 'r', 'r', 0,
  /* 4338 */ 'A', 'D', 'D', 'E', 'r', 'r', 0,
  /* 4345 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'r', 0,
  /* 4355 */ 'S', 'A', 'V', 'E', 'r', 'r', 0,
  /* 4362 */ 'L', 'D', 'D', 'F', 'r', 'r', 0,
  /* 4369 */ 'L', 'D', 'F', 'r', 'r', 0,
  /* 4375 */ 'S', 'T', 'D', 'F', 'r', 'r', 0,
  /* 4382 */ 'L', 'D', 'Q', 'F', 'r', 'r', 0,
  /* 4389 */ 'S', 'T', 'Q', 'F', 'r', 'r', 0,
  /* 4396 */ 'S', 'T', 'F', 'r', 'r', 0,
  /* 4402 */ 'L', 'D', 'S', 'H', 'r', 'r', 0,
  /* 4409 */ 'F', 'L', 'U', 'S', 'H', 'r', 'r', 0,
  /* 4417 */ 'S', 'T', 'H', 'r', 'r', 0,
  /* 4423 */ 'L', 'D', 'U', 'H', 'r', 'r', 0,
  /* 4430 */ 'C', 'A', 'L', 'L', 'r', 'r', 0,
  /* 4437 */ 'S', 'L', 'L', 'r', 'r', 0,
  /* 4443 */ 'J', 'M', 'P', 'L', 'r', 'r', 0,
  /* 4450 */ 'S', 'R', 'L', 'r', 'r', 0,
  /* 4456 */ 'S', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4463 */ 'U', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4470 */ 'W', 'R', 'W', 'I', 'M', 'r', 'r', 0,
  /* 4478 */ 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 4485 */ 'O', 'R', 'N', 'r', 'r', 0,
  /* 4491 */ 'A', 'N', 'D', 'X', 'N', 'r', 'r', 0,
  /* 4499 */ 'O', 'R', 'X', 'N', 'r', 'r', 0,
  /* 4506 */ 'T', 'R', 'A', 'P', 'r', 'r', 0,
  /* 4513 */ 'S', 'W', 'A', 'P', 'r', 'r', 0,
  /* 4520 */ 'C', 'M', 'P', 'r', 'r', 0,
  /* 4526 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'r', 0,
  /* 4534 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'r', 0,
  /* 4542 */ 'W', 'R', 'T', 'B', 'R', 'r', 'r', 0,
  /* 4550 */ 'X', 'N', 'O', 'R', 'r', 'r', 0,
  /* 4557 */ 'X', 'O', 'R', 'r', 'r', 0,
  /* 4563 */ 'W', 'R', 'P', 'R', 'r', 'r', 0,
  /* 4570 */ 'W', 'R', 'A', 'S', 'R', 'r', 'r', 0,
  /* 4578 */ 'L', 'D', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4586 */ 'S', 'T', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4594 */ 'L', 'D', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4602 */ 'S', 'T', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4610 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4619 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4628 */ 'W', 'R', 'P', 'S', 'R', 'r', 'r', 0,
  /* 4636 */ 'C', 'A', 'S', 'r', 'r', 0,
  /* 4642 */ 'S', 'T', 'r', 'r', 0,
  /* 4647 */ 'R', 'E', 'T', 'T', 'r', 'r', 0,
  /* 4654 */ 'S', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4661 */ 'U', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4668 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4679 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4690 */ 'L', 'D', 'S', 'W', 'r', 'r', 0,
  /* 4697 */ 'S', 'R', 'A', 'X', 'r', 'r', 0,
  /* 4704 */ 'S', 'U', 'B', 'X', 'r', 'r', 0,
  /* 4711 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'X', 'r', 'r', 0,
  /* 4722 */ 'T', 'L', 'S', '_', 'L', 'D', 'X', 'r', 'r', 0,
  /* 4732 */ 'A', 'N', 'D', 'X', 'r', 'r', 0,
  /* 4739 */ 'S', 'L', 'L', 'X', 'r', 'r', 0,
  /* 4746 */ 'S', 'R', 'L', 'X', 'r', 'r', 0,
  /* 4753 */ 'M', 'U', 'L', 'X', 'r', 'r', 0,
  /* 4760 */ 'X', 'N', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4768 */ 'X', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4775 */ 'C', 'A', 'S', 'X', 'r', 'r', 0,
  /* 4782 */ 'S', 'T', 'X', 'r', 'r', 0,
  /* 4788 */ 'S', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4796 */ 'U', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4804 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'r', 0,
  /* 4814 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'r', 0,
  /* 4824 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'r', 0,
  /* 4833 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'r', 0,
  /* 4842 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'r', 0,
  /* 4851 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'r', 0,
  /* 4860 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4869 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4878 */ 'B', 'P', 'G', 'Z', 'a', 'p', 't', 0,
  /* 4886 */ 'B', 'P', 'L', 'Z', 'a', 'p', 't', 0,
  /* 4894 */ 'B', 'P', 'N', 'Z', 'a', 'p', 't', 0,
  /* 4902 */ 'B', 'P', 'Z', 'a', 'p', 't', 0,
  /* 4909 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4919 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4929 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4938 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4947 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4956 */ 'B', 'P', 'Z', 'n', 'a', 'p', 't', 0,
};

extern const unsigned SparcInstrNameIndices[] = {
    1271U, 1509U, 1568U, 1387U, 1378U, 1443U, 1198U, 1213U, 
    1178U, 1227U, 2346U, 1153U, 1082U, 2905U, 1111U, 2708U, 
    894U, 1655U, 1431U, 2676U, 977U, 2665U, 1132U, 1725U, 
    1712U, 1931U, 2502U, 2520U, 1402U, 792U, 459U, 1471U, 
    2797U, 2804U, 1489U, 1496U, 888U, 2013U, 2007U, 2850U, 
    1163U, 2470U, 2217U, 2723U, 1084U, 2234U, 2687U, 2035U, 
    2732U, 765U, 1145U, 921U, 2489U, 729U, 2369U, 2763U, 
    751U, 2624U, 2612U, 2698U, 1241U, 2756U, 2772U, 1396U, 
    1963U, 1956U, 1695U, 1688U, 2480U, 1095U, 1074U, 1625U, 
    1617U, 1641U, 1633U, 1257U, 1249U, 785U, 452U, 1464U, 
    2790U, 1482U, 2818U, 1191U, 2748U, 741U, 1309U, 1318U, 
    1670U, 1679U, 1664U, 1333U, 1916U, 2565U, 2544U, 1985U, 
    3044U, 4109U, 3182U, 4247U, 3273U, 4338U, 759U, 465U, 
    3625U, 4715U, 3219U, 4291U, 1591U, 1737U, 1921U, 1448U, 
    3052U, 4117U, 3105U, 4170U, 3413U, 4478U, 4491U, 3638U, 
    4732U, 3247U, 4312U, 372U, 143U, 393U, 400U, 908U, 
    425U, 3253U, 4318U, 1327U, 473U, 403U, 2585U, 2635U, 
    3751U, 4860U, 3800U, 4909U, 3769U, 4878U, 3820U, 4929U, 
    586U, 410U, 2594U, 2643U, 3760U, 4869U, 3810U, 4919U, 
    3777U, 4886U, 3829U, 4938U, 3785U, 4894U, 3838U, 4947U, 
    693U, 417U, 2603U, 2651U, 3793U, 4902U, 3847U, 4956U, 
    1118U, 1417U, 3365U, 4430U, 0U, 4030U, 4775U, 4636U, 
    907U, 424U, 252U, 95U, 386U, 3440U, 4520U, 219U, 
    1352U, 1551U, 1527U, 62U, 1344U, 1542U, 1519U, 380U, 
    1360U, 1560U, 1535U, 2933U, 3855U, 2953U, 3875U, 994U, 
    1824U, 2363U, 798U, 1758U, 2161U, 440U, 869U, 16U, 
    2053U, 157U, 2104U, 2189U, 914U, 432U, 274U, 964U, 
    291U, 117U, 308U, 134U, 226U, 69U, 235U, 78U, 
    1818U, 2309U, 1007U, 1837U, 2403U, 1779U, 1291U, 1792U, 
    2275U, 2879U, 880U, 804U, 2167U, 778U, 2154U, 930U, 
    1798U, 2281U, 970U, 2315U, 1265U, 2811U, 3344U, 4409U, 
    283U, 1013U, 481U, 592U, 699U, 1843U, 546U, 655U, 
    709U, 1019U, 1849U, 2415U, 1039U, 1869U, 2435U, 1029U, 
    1859U, 2425U, 1048U, 1878U, 2444U, 1057U, 1887U, 2453U, 
    1066U, 1896U, 2462U, 2409U, 558U, 665U, 719U, 361U, 
    338U, 317U, 1367U, 2779U, 841U, 349U, 326U, 1786U, 
    2255U, 819U, 2182U, 874U, 2195U, 835U, 1773U, 2249U, 
    811U, 2174U, 847U, 2261U, 1974U, 2327U, 25U, 2063U, 
    166U, 2114U, 861U, 1127U, 2202U, 1970U, 31U, 2070U, 
    172U, 2121U, 2322U, 244U, 87U, 2864U, 211U, 2139U, 
    54U, 2088U, 184U, 1103U, 203U, 2130U, 46U, 2079U, 
    936U, 1297U, 2287U, 2893U, 300U, 126U, 260U, 103U, 
    854U, 1000U, 1830U, 2396U, 196U, 39U, 10U, 2046U, 
    151U, 2097U, 267U, 110U, 942U, 1303U, 1804U, 2899U, 
    772U, 1752U, 2148U, 1979U, 2333U, 2002U, 2340U, 948U, 
    1810U, 2301U, 1649U, 2268U, 2843U, 3378U, 4443U, 3934U, 
    3498U, 4578U, 3196U, 4261U, 3927U, 3189U, 4254U, 3947U, 
    3297U, 4362U, 3236U, 4297U, 3955U, 3514U, 4594U, 3304U, 
    4369U, 3970U, 3317U, 4382U, 3894U, 2978U, 4043U, 3993U, 
    3337U, 4402U, 3917U, 3004U, 4069U, 3604U, 4690U, 3909U, 
    2991U, 4056U, 4008U, 3358U, 4423U, 3530U, 4610U, 3632U, 
    4726U, 3242U, 4307U, 3225U, 3215U, 2659U, 2917U, 2885U, 
    3062U, 4127U, 3078U, 4143U, 3695U, 4804U, 3715U, 4824U, 
    3705U, 4814U, 3724U, 4833U, 3733U, 4842U, 3742U, 4851U, 
    2825U, 2834U, 2293U, 3173U, 4238U, 954U, 3139U, 4204U, 
    3659U, 4753U, 1708U, 3124U, 4189U, 3114U, 4179U, 3420U, 
    4485U, 4499U, 3667U, 4762U, 3472U, 4552U, 2742U, 1584U, 
    4274U, 2023U, 2018U, 2029U, 1910U, 1503U, 3280U, 4345U, 
    2512U, 1459U, 3561U, 4647U, 3290U, 4355U, 3148U, 4213U, 
    3679U, 4788U, 3568U, 4654U, 491U, 602U, 527U, 638U, 
    568U, 675U, 509U, 620U, 2516U, 2925U, 2910U, 1608U, 
    1477U, 3645U, 4739U, 3372U, 4437U, 3013U, 4078U, 3087U, 
    4152U, 3391U, 4456U, 3611U, 4697U, 2972U, 4024U, 3652U, 
    4746U, 3385U, 4450U, 4037U, 1904U, 3902U, 2985U, 4050U, 
    3506U, 4586U, 3209U, 4281U, 3940U, 3446U, 4526U, 3202U, 
    4267U, 3962U, 3454U, 4534U, 3310U, 4375U, 3260U, 4325U, 
    3986U, 3522U, 4602U, 3331U, 4396U, 4001U, 3352U, 4417U, 
    3978U, 3324U, 4389U, 3539U, 4619U, 3673U, 4782U, 3556U, 
    4642U, 3035U, 4100U, 3027U, 4092U, 3266U, 4331U, 3618U, 
    4704U, 2998U, 4063U, 4016U, 3433U, 4513U, 180U, 192U, 
    3593U, 4679U, 3043U, 4108U, 3071U, 4136U, 4711U, 4287U, 
    1422U, 4722U, 4303U, 3426U, 4506U, 3582U, 4668U, 3034U, 
    4099U, 3166U, 4231U, 3157U, 4222U, 3687U, 4796U, 3575U, 
    4661U, 3020U, 4085U, 3096U, 4161U, 1275U, 3398U, 4463U, 
    1702U, 962U, 826U, 1764U, 2208U, 1816U, 2307U, 479U, 
    544U, 556U, 3060U, 4125U, 3490U, 4570U, 3483U, 4563U, 
    3548U, 4628U, 3462U, 4542U, 3405U, 4470U, 2873U, 1283U, 
    3122U, 4187U, 4760U, 3470U, 4550U, 3131U, 4196U, 3666U, 
    4768U, 3477U, 4557U, 
};

static inline void InitSparcMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 627);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SparcGenInstrInfo : public TargetInstrInfo {
  explicit SparcGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~SparcGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc SparcInsts[];
extern const unsigned SparcInstrNameIndices[];
extern const char SparcInstrNameData[];
SparcGenInstrInfo::SparcGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 627);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace SP {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace SP {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace SP {
namespace OpTypes {
enum OperandType {
  CCOp = 0,
  MEMri = 1,
  MEMrr = 2,
  TLSSym = 3,
  bprtarget = 4,
  bprtarget16 = 5,
  brtarget = 6,
  calltarget = 7,
  f32imm = 8,
  f64imm = 9,
  getPCX = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  simm13Op = 16,
  type0 = 17,
  type1 = 18,
  type2 = 19,
  type3 = 20,
  type4 = 21,
  type5 = 22,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace SP
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

