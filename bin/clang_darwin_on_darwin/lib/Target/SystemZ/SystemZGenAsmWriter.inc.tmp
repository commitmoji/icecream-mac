/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void SystemZInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const char AsmStrs[] = {
  /* 0 */ 'c', 'u', '2', '1', 9, 0,
  /* 6 */ 'c', 'u', '4', '1', 9, 0,
  /* 12 */ 'c', 'u', '1', '2', 9, 0,
  /* 18 */ 'c', 'u', '4', '2', 9, 0,
  /* 24 */ 'c', 'u', '1', '4', 9, 0,
  /* 30 */ 'c', 'u', '2', '4', 9, 0,
  /* 36 */ 'l', 'a', 'a', 9, 0,
  /* 41 */ 's', 'l', 'd', 'a', 9, 0,
  /* 47 */ 's', 'r', 'd', 'a', 9, 0,
  /* 53 */ 'v', 'f', 'a', 9, 0,
  /* 58 */ 'u', 'n', 'p', 'k', 'a', 9, 0,
  /* 65 */ 's', 'l', 'a', 9, 0,
  /* 70 */ 'v', 'g', 'f', 'm', 'a', 9, 0,
  /* 77 */ 'v', 'f', 'm', 'a', 9, 0,
  /* 83 */ 'p', 'p', 'a', 9, 0,
  /* 88 */ 'l', 'e', 'd', 'b', 'r', 'a', 9, 0,
  /* 96 */ 'c', 'f', 'd', 'b', 'r', 'a', 9, 0,
  /* 104 */ 'c', 'g', 'd', 'b', 'r', 'a', 9, 0,
  /* 112 */ 'f', 'i', 'd', 'b', 'r', 'a', 9, 0,
  /* 120 */ 'c', 'f', 'e', 'b', 'r', 'a', 9, 0,
  /* 128 */ 'c', 'g', 'e', 'b', 'r', 'a', 9, 0,
  /* 136 */ 'f', 'i', 'e', 'b', 'r', 'a', 9, 0,
  /* 144 */ 'c', 'd', 'f', 'b', 'r', 'a', 9, 0,
  /* 152 */ 'c', 'e', 'f', 'b', 'r', 'a', 9, 0,
  /* 160 */ 'c', 'x', 'f', 'b', 'r', 'a', 9, 0,
  /* 168 */ 'c', 'd', 'g', 'b', 'r', 'a', 9, 0,
  /* 176 */ 'c', 'e', 'g', 'b', 'r', 'a', 9, 0,
  /* 184 */ 'c', 'x', 'g', 'b', 'r', 'a', 9, 0,
  /* 192 */ 'l', 'd', 'x', 'b', 'r', 'a', 9, 0,
  /* 200 */ 'l', 'e', 'x', 'b', 'r', 'a', 9, 0,
  /* 208 */ 'c', 'f', 'x', 'b', 'r', 'a', 9, 0,
  /* 216 */ 'c', 'g', 'x', 'b', 'r', 'a', 9, 0,
  /* 224 */ 'f', 'i', 'x', 'b', 'r', 'a', 9, 0,
  /* 232 */ 'v', 'e', 's', 'r', 'a', 9, 0,
  /* 239 */ 'v', 's', 'r', 'a', 9, 0,
  /* 245 */ 'a', 'd', 't', 'r', 'a', 9, 0,
  /* 252 */ 'd', 'd', 't', 'r', 'a', 9, 0,
  /* 259 */ 'c', 'g', 'd', 't', 'r', 'a', 9, 0,
  /* 267 */ 'm', 'd', 't', 'r', 'a', 9, 0,
  /* 274 */ 's', 'd', 't', 'r', 'a', 9, 0,
  /* 281 */ 'c', 'd', 'g', 't', 'r', 'a', 9, 0,
  /* 289 */ 'c', 'x', 'g', 't', 'r', 'a', 9, 0,
  /* 297 */ 'a', 'x', 't', 'r', 'a', 9, 0,
  /* 304 */ 'd', 'x', 't', 'r', 'a', 9, 0,
  /* 311 */ 'c', 'g', 'x', 't', 'r', 'a', 9, 0,
  /* 319 */ 'm', 'x', 't', 'r', 'a', 9, 0,
  /* 326 */ 's', 'x', 't', 'r', 'a', 9, 0,
  /* 333 */ 'v', 'a', 9, 0,
  /* 337 */ 'c', 'p', 'y', 'a', 9, 0,
  /* 343 */ 'v', 'g', 'f', 'm', 'a', 'b', 9, 0,
  /* 351 */ 'v', 'e', 's', 'r', 'a', 'b', 9, 0,
  /* 359 */ 'v', 's', 'r', 'a', 'b', 9, 0,
  /* 366 */ 'v', 'a', 'b', 9, 0,
  /* 371 */ 'l', 'c', 'b', 'b', 9, 0,
  /* 377 */ 'v', 'l', 'b', 'b', 9, 0,
  /* 383 */ 'v', 'a', 'c', 'c', 'b', 9, 0,
  /* 390 */ 'v', 'e', 'c', 'b', 9, 0,
  /* 396 */ 'v', 'l', 'c', 'b', 9, 0,
  /* 402 */ 'v', 's', 't', 'r', 'c', 'b', 9, 0,
  /* 410 */ 'v', 'f', 'a', 'd', 'b', 9, 0,
  /* 417 */ 'w', 'f', 'a', 'd', 'b', 9, 0,
  /* 424 */ 'v', 'f', 'm', 'a', 'd', 'b', 9, 0,
  /* 432 */ 'w', 'f', 'm', 'a', 'd', 'b', 9, 0,
  /* 440 */ 'w', 'f', 'c', 'd', 'b', 9, 0,
  /* 447 */ 'v', 'f', 'l', 'c', 'd', 'b', 9, 0,
  /* 455 */ 'w', 'f', 'l', 'c', 'd', 'b', 9, 0,
  /* 463 */ 't', 'c', 'd', 'b', 9, 0,
  /* 469 */ 'v', 'f', 'd', 'd', 'b', 9, 0,
  /* 476 */ 'w', 'f', 'd', 'd', 'b', 9, 0,
  /* 483 */ 'v', 'f', 'c', 'e', 'd', 'b', 9, 0,
  /* 491 */ 'w', 'f', 'c', 'e', 'd', 'b', 9, 0,
  /* 499 */ 'v', 'f', 'c', 'h', 'e', 'd', 'b', 9, 0,
  /* 508 */ 'w', 'f', 'c', 'h', 'e', 'd', 'b', 9, 0,
  /* 517 */ 'v', 'l', 'e', 'd', 'b', 9, 0,
  /* 524 */ 'w', 'l', 'e', 'd', 'b', 9, 0,
  /* 531 */ 'v', 'c', 'g', 'd', 'b', 9, 0,
  /* 538 */ 'w', 'c', 'g', 'd', 'b', 9, 0,
  /* 545 */ 'v', 'c', 'l', 'g', 'd', 'b', 9, 0,
  /* 553 */ 'w', 'c', 'l', 'g', 'd', 'b', 9, 0,
  /* 561 */ 'v', 'f', 'c', 'h', 'd', 'b', 9, 0,
  /* 569 */ 'w', 'f', 'c', 'h', 'd', 'b', 9, 0,
  /* 577 */ 'v', 'f', 't', 'c', 'i', 'd', 'b', 9, 0,
  /* 586 */ 'w', 'f', 't', 'c', 'i', 'd', 'b', 9, 0,
  /* 595 */ 'v', 'f', 'i', 'd', 'b', 9, 0,
  /* 602 */ 'w', 'f', 'i', 'd', 'b', 9, 0,
  /* 609 */ 'w', 'f', 'k', 'd', 'b', 9, 0,
  /* 616 */ 'v', 's', 'l', 'd', 'b', 9, 0,
  /* 623 */ 'v', 'f', 'm', 'd', 'b', 9, 0,
  /* 630 */ 'w', 'f', 'm', 'd', 'b', 9, 0,
  /* 637 */ 'v', 'f', 'l', 'n', 'd', 'b', 9, 0,
  /* 645 */ 'w', 'f', 'l', 'n', 'd', 'b', 9, 0,
  /* 653 */ 'v', 'f', 'p', 's', 'o', 'd', 'b', 9, 0,
  /* 662 */ 'w', 'f', 'p', 's', 'o', 'd', 'b', 9, 0,
  /* 671 */ 'v', 'f', 'l', 'p', 'd', 'b', 9, 0,
  /* 679 */ 'w', 'f', 'l', 'p', 'd', 'b', 9, 0,
  /* 687 */ 'v', 'f', 's', 'q', 'd', 'b', 9, 0,
  /* 695 */ 'w', 'f', 's', 'q', 'd', 'b', 9, 0,
  /* 703 */ 'v', 'f', 's', 'd', 'b', 9, 0,
  /* 710 */ 'w', 'f', 's', 'd', 'b', 9, 0,
  /* 717 */ 'v', 'f', 'm', 's', 'd', 'b', 9, 0,
  /* 725 */ 'w', 'f', 'm', 's', 'd', 'b', 9, 0,
  /* 733 */ 'l', 'x', 'd', 'b', 9, 0,
  /* 739 */ 'm', 'x', 'd', 'b', 9, 0,
  /* 745 */ 'v', 'f', 'a', 'e', 'b', 9, 0,
  /* 752 */ 'v', 'm', 'a', 'e', 'b', 9, 0,
  /* 759 */ 't', 'c', 'e', 'b', 9, 0,
  /* 765 */ 'v', 'l', 'd', 'e', 'b', 9, 0,
  /* 772 */ 'w', 'l', 'd', 'e', 'b', 9, 0,
  /* 779 */ 'm', 'd', 'e', 'b', 9, 0,
  /* 785 */ 'v', 'f', 'e', 'e', 'b', 9, 0,
  /* 792 */ 'm', 'e', 'e', 'b', 9, 0,
  /* 798 */ 'k', 'e', 'b', 9, 0,
  /* 803 */ 'v', 'm', 'a', 'l', 'e', 'b', 9, 0,
  /* 811 */ 'v', 'm', 'l', 'e', 'b', 9, 0,
  /* 818 */ 'v', 'l', 'e', 'b', 9, 0,
  /* 824 */ 'v', 'm', 'e', 'b', 9, 0,
  /* 830 */ 'v', 'f', 'e', 'n', 'e', 'b', 9, 0,
  /* 838 */ 's', 'q', 'e', 'b', 9, 0,
  /* 844 */ 'm', 's', 'e', 'b', 9, 0,
  /* 850 */ 'v', 's', 't', 'e', 'b', 9, 0,
  /* 857 */ 'l', 'x', 'e', 'b', 9, 0,
  /* 863 */ 'v', 'c', 'd', 'g', 'b', 9, 0,
  /* 870 */ 'w', 'c', 'd', 'g', 'b', 9, 0,
  /* 877 */ 'v', 's', 'e', 'g', 'b', 9, 0,
  /* 884 */ 'v', 'c', 'd', 'l', 'g', 'b', 9, 0,
  /* 892 */ 'w', 'c', 'd', 'l', 'g', 'b', 9, 0,
  /* 900 */ 'v', 'a', 'v', 'g', 'b', 9, 0,
  /* 907 */ 'v', 'l', 'v', 'g', 'b', 9, 0,
  /* 914 */ 'v', 'm', 'a', 'h', 'b', 9, 0,
  /* 921 */ 'v', 'c', 'h', 'b', 9, 0,
  /* 927 */ 'v', 'm', 'a', 'l', 'h', 'b', 9, 0,
  /* 935 */ 'v', 'm', 'l', 'h', 'b', 9, 0,
  /* 942 */ 'v', 'u', 'p', 'l', 'h', 'b', 9, 0,
  /* 950 */ 'v', 'm', 'h', 'b', 9, 0,
  /* 956 */ 'v', 'u', 'p', 'h', 'b', 9, 0,
  /* 963 */ 'v', 'm', 'r', 'h', 'b', 9, 0,
  /* 970 */ 'v', 's', 'c', 'b', 'i', 'b', 9, 0,
  /* 978 */ 'c', 'i', 'b', 9, 0,
  /* 983 */ 'v', 'l', 'e', 'i', 'b', 9, 0,
  /* 990 */ 'c', 'g', 'i', 'b', 9, 0,
  /* 996 */ 'c', 'l', 'g', 'i', 'b', 9, 0,
  /* 1003 */ 'c', 'l', 'i', 'b', 9, 0,
  /* 1009 */ 'v', 'r', 'e', 'p', 'i', 'b', 9, 0,
  /* 1017 */ 'v', 'm', 'a', 'l', 'b', 9, 0,
  /* 1024 */ 'v', 'e', 'c', 'l', 'b', 9, 0,
  /* 1031 */ 'v', 'a', 'v', 'g', 'l', 'b', 9, 0,
  /* 1039 */ 'v', 'c', 'h', 'l', 'b', 9, 0,
  /* 1046 */ 'v', 'u', 'p', 'l', 'l', 'b', 9, 0,
  /* 1054 */ 'v', 'e', 'r', 'l', 'l', 'b', 9, 0,
  /* 1062 */ 'v', 'm', 'l', 'b', 9, 0,
  /* 1068 */ 'v', 'm', 'n', 'l', 'b', 9, 0,
  /* 1075 */ 'v', 'u', 'p', 'l', 'b', 9, 0,
  /* 1082 */ 'v', 'm', 'r', 'l', 'b', 9, 0,
  /* 1089 */ 'v', 'e', 's', 'r', 'l', 'b', 9, 0,
  /* 1097 */ 'v', 's', 'r', 'l', 'b', 9, 0,
  /* 1104 */ 'v', 'e', 's', 'l', 'b', 9, 0,
  /* 1111 */ 'v', 's', 'l', 'b', 9, 0,
  /* 1117 */ 'v', 'm', 'x', 'l', 'b', 9, 0,
  /* 1124 */ 'v', 'g', 'f', 'm', 'b', 9, 0,
  /* 1131 */ 'v', 'g', 'm', 'b', 9, 0,
  /* 1137 */ 'v', 'e', 'r', 'i', 'm', 'b', 9, 0,
  /* 1145 */ 's', 'r', 'n', 'm', 'b', 9, 0,
  /* 1152 */ 'v', 's', 'u', 'm', 'b', 9, 0,
  /* 1159 */ 'v', 'm', 'n', 'b', 9, 0,
  /* 1165 */ 'v', 'm', 'a', 'o', 'b', 9, 0,
  /* 1172 */ 'v', 'm', 'a', 'l', 'o', 'b', 9, 0,
  /* 1180 */ 'v', 'm', 'l', 'o', 'b', 9, 0,
  /* 1187 */ 'v', 'm', 'o', 'b', 9, 0,
  /* 1193 */ 'v', 'l', 'r', 'e', 'p', 'b', 9, 0,
  /* 1201 */ 'v', 'r', 'e', 'p', 'b', 9, 0,
  /* 1208 */ 'v', 'l', 'p', 'b', 9, 0,
  /* 1214 */ 'v', 'c', 'e', 'q', 'b', 9, 0,
  /* 1221 */ 'c', 'r', 'b', 9, 0,
  /* 1226 */ 'c', 'g', 'r', 'b', 9, 0,
  /* 1232 */ 'c', 'l', 'g', 'r', 'b', 9, 0,
  /* 1239 */ 'c', 'l', 'r', 'b', 9, 0,
  /* 1245 */ 'v', 'i', 's', 't', 'r', 'b', 9, 0,
  /* 1253 */ 'v', 's', 'b', 9, 0,
  /* 1258 */ 'v', 'e', 's', 'r', 'a', 'v', 'b', 9, 0,
  /* 1267 */ 'c', 'v', 'b', 9, 0,
  /* 1272 */ 'v', 'l', 'g', 'v', 'b', 9, 0,
  /* 1279 */ 'v', 'e', 'r', 'l', 'l', 'v', 'b', 9, 0,
  /* 1288 */ 'v', 'e', 's', 'r', 'l', 'v', 'b', 9, 0,
  /* 1297 */ 'v', 'e', 's', 'l', 'v', 'b', 9, 0,
  /* 1305 */ 't', 'c', 'x', 'b', 9, 0,
  /* 1311 */ 'v', 'm', 'x', 'b', 9, 0,
  /* 1317 */ 'v', 's', 't', 'r', 'c', 'z', 'b', 9, 0,
  /* 1326 */ 'v', 'f', 'a', 'e', 'z', 'b', 9, 0,
  /* 1334 */ 'v', 'f', 'e', 'e', 'z', 'b', 9, 0,
  /* 1342 */ 'v', 'l', 'l', 'e', 'z', 'b', 9, 0,
  /* 1350 */ 'v', 'f', 'e', 'n', 'e', 'z', 'b', 9, 0,
  /* 1359 */ 'v', 'c', 'l', 'z', 'b', 9, 0,
  /* 1366 */ 'v', 'c', 't', 'z', 'b', 9, 0,
  /* 1373 */ 'k', 'm', 'a', 'c', 9, 0,
  /* 1379 */ 'v', 'a', 'c', 9, 0,
  /* 1384 */ 'b', 'c', 9, 0,
  /* 1388 */ 'v', 'a', 'c', 'c', 9, 0,
  /* 1394 */ 'v', 'a', 'c', 'c', 'c', 9, 0,
  /* 1401 */ 'v', 'e', 'c', 9, 0,
  /* 1406 */ 'c', 'f', 'c', 9, 0,
  /* 1411 */ 'w', 'f', 'c', 9, 0,
  /* 1416 */ 'l', 'l', 'g', 'c', 9, 0,
  /* 1422 */ 'i', 'c', 9, 0,
  /* 1426 */ 'a', 'l', 'c', 9, 0,
  /* 1431 */ 'c', 'l', 'c', 9, 0,
  /* 1436 */ 'l', 'l', 'c', 9, 0,
  /* 1441 */ 'v', 'l', 'c', 9, 0,
  /* 1446 */ 'k', 'm', 'c', 9, 0,
  /* 1451 */ 't', 'b', 'e', 'g', 'i', 'n', 'c', 9, 0,
  /* 1460 */ 'v', 'n', 'c', 9, 0,
  /* 1465 */ 'l', 'o', 'c', 9, 0,
  /* 1470 */ 's', 't', 'o', 'c', 9, 0,
  /* 1476 */ 'e', 'f', 'p', 'c', 9, 0,
  /* 1482 */ 'l', 'f', 'p', 'c', 9, 0,
  /* 1488 */ 's', 'f', 'p', 'c', 9, 0,
  /* 1494 */ 's', 't', 'f', 'p', 'c', 9, 0,
  /* 1501 */ 'b', 'r', 'c', 9, 0,
  /* 1506 */ 'v', 's', 't', 'r', 'c', 9, 0,
  /* 1513 */ 'c', 'm', 'p', 's', 'c', 9, 0,
  /* 1520 */ 's', 't', 'c', 9, 0,
  /* 1525 */ 'm', 'v', 'c', 9, 0,
  /* 1530 */ 's', 'v', 'c', 9, 0,
  /* 1535 */ 'x', 'c', 9, 0,
  /* 1539 */ 'm', 'a', 'd', 9, 0,
  /* 1544 */ 'c', 'd', 9, 0,
  /* 1548 */ 'd', 'd', 9, 0,
  /* 1552 */ 'v', 'l', 'e', 'd', 9, 0,
  /* 1558 */ 'p', 'f', 'd', 9, 0,
  /* 1563 */ 'v', 'f', 'd', 9, 0,
  /* 1568 */ 'v', 'c', 'g', 'd', 9, 0,
  /* 1574 */ 'v', 'c', 'l', 'g', 'd', 9, 0,
  /* 1581 */ 'l', 'd', 9, 0,
  /* 1585 */ 'k', 'i', 'm', 'd', 9, 0,
  /* 1591 */ 'k', 'l', 'm', 'd', 9, 0,
  /* 1597 */ 'e', 't', 'n', 'd', 9, 0,
  /* 1603 */ 'l', 'p', 'd', 9, 0,
  /* 1608 */ 's', 'q', 'd', 9, 0,
  /* 1613 */ 'm', 's', 'd', 9, 0,
  /* 1618 */ 's', 't', 'd', 9, 0,
  /* 1623 */ 'c', 'v', 'd', 9, 0,
  /* 1628 */ 'l', 'x', 'd', 9, 0,
  /* 1633 */ 'm', 'x', 'd', 9, 0,
  /* 1638 */ 'v', 'f', 'a', 'e', 9, 0,
  /* 1644 */ 'l', 'a', 'e', 9, 0,
  /* 1649 */ 'v', 'm', 'a', 'e', 9, 0,
  /* 1655 */ 'c', 'i', 'b', 'e', 9, 0,
  /* 1661 */ 'c', 'g', 'i', 'b', 'e', 9, 0,
  /* 1668 */ 'c', 'l', 'g', 'i', 'b', 'e', 9, 0,
  /* 1676 */ 'c', 'l', 'i', 'b', 'e', 9, 0,
  /* 1683 */ 'c', 'r', 'b', 'e', 9, 0,
  /* 1689 */ 'c', 'g', 'r', 'b', 'e', 9, 0,
  /* 1696 */ 'c', 'l', 'g', 'r', 'b', 'e', 9, 0,
  /* 1704 */ 'c', 'l', 'r', 'b', 'e', 9, 0,
  /* 1711 */ 'v', 'f', 'c', 'e', 9, 0,
  /* 1717 */ 'l', 'o', 'c', 'e', 9, 0,
  /* 1723 */ 's', 't', 'o', 'c', 'e', 9, 0,
  /* 1730 */ 'v', 'l', 'd', 'e', 9, 0,
  /* 1736 */ 'm', 'd', 'e', 9, 0,
  /* 1741 */ 'v', 'f', 'e', 'e', 9, 0,
  /* 1747 */ 'm', 'e', 'e', 9, 0,
  /* 1752 */ 'l', 'o', 'c', 'g', 'e', 9, 0,
  /* 1759 */ 's', 't', 'o', 'c', 'g', 'e', 9, 0,
  /* 1767 */ 'j', 'g', 'e', 9, 0,
  /* 1772 */ 'c', 'i', 'b', 'h', 'e', 9, 0,
  /* 1779 */ 'c', 'g', 'i', 'b', 'h', 'e', 9, 0,
  /* 1787 */ 'c', 'l', 'g', 'i', 'b', 'h', 'e', 9, 0,
  /* 1796 */ 'c', 'l', 'i', 'b', 'h', 'e', 9, 0,
  /* 1804 */ 'c', 'r', 'b', 'h', 'e', 9, 0,
  /* 1811 */ 'c', 'g', 'r', 'b', 'h', 'e', 9, 0,
  /* 1819 */ 'c', 'l', 'g', 'r', 'b', 'h', 'e', 9, 0,
  /* 1828 */ 'c', 'l', 'r', 'b', 'h', 'e', 9, 0,
  /* 1836 */ 'v', 'f', 'c', 'h', 'e', 9, 0,
  /* 1843 */ 'l', 'o', 'c', 'h', 'e', 9, 0,
  /* 1850 */ 's', 't', 'o', 'c', 'h', 'e', 9, 0,
  /* 1858 */ 'l', 'o', 'c', 'f', 'h', 'e', 9, 0,
  /* 1866 */ 's', 't', 'o', 'c', 'f', 'h', 'e', 9, 0,
  /* 1875 */ 'l', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 1883 */ 's', 't', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 1892 */ 'j', 'g', 'h', 'e', 9, 0,
  /* 1898 */ 'l', 'o', 'c', 'f', 'h', 'h', 'e', 9, 0,
  /* 1907 */ 's', 't', 'o', 'c', 'f', 'h', 'h', 'e', 9, 0,
  /* 1917 */ 'l', 'o', 'c', 'h', 'i', 'h', 'e', 9, 0,
  /* 1926 */ 'l', 'o', 'c', 'g', 'h', 'i', 'h', 'e', 9, 0,
  /* 1936 */ 'l', 'o', 'c', 'h', 'h', 'i', 'h', 'e', 9, 0,
  /* 1946 */ 'c', 'i', 'j', 'h', 'e', 9, 0,
  /* 1953 */ 'c', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 1961 */ 'c', 'l', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 1970 */ 'c', 'l', 'i', 'j', 'h', 'e', 9, 0,
  /* 1978 */ 'c', 'r', 'j', 'h', 'e', 9, 0,
  /* 1985 */ 'c', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 1993 */ 'c', 'l', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 2002 */ 'c', 'l', 'r', 'j', 'h', 'e', 9, 0,
  /* 2010 */ 'c', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 2018 */ 'c', 'g', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 2027 */ 'c', 'l', 'g', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 2037 */ 'c', 'l', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 2046 */ 'c', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 2054 */ 'c', 'g', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 2063 */ 'c', 'l', 'g', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 2073 */ 'c', 'l', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 2082 */ 'l', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 2090 */ 's', 't', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 2099 */ 'l', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 2108 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 2118 */ 'j', 'g', 'n', 'h', 'e', 9, 0,
  /* 2125 */ 'l', 'o', 'c', 'f', 'h', 'n', 'h', 'e', 9, 0,
  /* 2135 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'h', 'e', 9, 0,
  /* 2146 */ 'l', 'o', 'c', 'h', 'i', 'n', 'h', 'e', 9, 0,
  /* 2156 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'h', 'e', 9, 0,
  /* 2167 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'h', 'e', 9, 0,
  /* 2178 */ 'c', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 2186 */ 'c', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 2195 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 2205 */ 'c', 'l', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 2214 */ 'c', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 2222 */ 'c', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 2231 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 2241 */ 'c', 'l', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 2250 */ 'l', 'o', 'c', 'r', 'n', 'h', 'e', 9, 0,
  /* 2259 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 'e', 9, 0,
  /* 2269 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'h', 'e', 9, 0,
  /* 2280 */ 'c', 'l', 'g', 't', 'n', 'h', 'e', 9, 0,
  /* 2289 */ 'c', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 2297 */ 'c', 'l', 'f', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 2307 */ 'c', 'g', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 2316 */ 'c', 'l', 'g', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 2326 */ 'c', 'l', 't', 'n', 'h', 'e', 9, 0,
  /* 2334 */ 'c', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 2342 */ 'c', 'g', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 2351 */ 'c', 'l', 'g', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 2361 */ 'c', 'l', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 2370 */ 'l', 'o', 'c', 'r', 'h', 'e', 9, 0,
  /* 2378 */ 'l', 'o', 'c', 'g', 'r', 'h', 'e', 9, 0,
  /* 2387 */ 'l', 'o', 'c', 'f', 'h', 'r', 'h', 'e', 9, 0,
  /* 2397 */ 'c', 'l', 'g', 't', 'h', 'e', 9, 0,
  /* 2405 */ 'c', 'i', 't', 'h', 'e', 9, 0,
  /* 2412 */ 'c', 'l', 'f', 'i', 't', 'h', 'e', 9, 0,
  /* 2421 */ 'c', 'g', 'i', 't', 'h', 'e', 9, 0,
  /* 2429 */ 'c', 'l', 'g', 'i', 't', 'h', 'e', 9, 0,
  /* 2438 */ 'c', 'l', 't', 'h', 'e', 9, 0,
  /* 2445 */ 'c', 'r', 't', 'h', 'e', 9, 0,
  /* 2452 */ 'c', 'g', 'r', 't', 'h', 'e', 9, 0,
  /* 2460 */ 'c', 'l', 'g', 'r', 't', 'h', 'e', 9, 0,
  /* 2469 */ 'c', 'l', 'r', 't', 'h', 'e', 9, 0,
  /* 2477 */ 'l', 'o', 'c', 'h', 'i', 'e', 9, 0,
  /* 2485 */ 'l', 'o', 'c', 'g', 'h', 'i', 'e', 9, 0,
  /* 2494 */ 'l', 'o', 'c', 'h', 'h', 'i', 'e', 9, 0,
  /* 2503 */ 'c', 'i', 'j', 'e', 9, 0,
  /* 2509 */ 'c', 'g', 'i', 'j', 'e', 9, 0,
  /* 2516 */ 'c', 'l', 'g', 'i', 'j', 'e', 9, 0,
  /* 2524 */ 'c', 'l', 'i', 'j', 'e', 9, 0,
  /* 2531 */ 'c', 'r', 'j', 'e', 9, 0,
  /* 2537 */ 'c', 'g', 'r', 'j', 'e', 9, 0,
  /* 2544 */ 'c', 'l', 'g', 'r', 'j', 'e', 9, 0,
  /* 2552 */ 'c', 'l', 'r', 'j', 'e', 9, 0,
  /* 2559 */ 's', 't', 'c', 'k', 'e', 9, 0,
  /* 2566 */ 'v', 'm', 'a', 'l', 'e', 9, 0,
  /* 2573 */ 'c', 'i', 'b', 'l', 'e', 9, 0,
  /* 2580 */ 'c', 'g', 'i', 'b', 'l', 'e', 9, 0,
  /* 2588 */ 'c', 'l', 'g', 'i', 'b', 'l', 'e', 9, 0,
  /* 2597 */ 'c', 'l', 'i', 'b', 'l', 'e', 9, 0,
  /* 2605 */ 'c', 'r', 'b', 'l', 'e', 9, 0,
  /* 2612 */ 'c', 'g', 'r', 'b', 'l', 'e', 9, 0,
  /* 2620 */ 'c', 'l', 'g', 'r', 'b', 'l', 'e', 9, 0,
  /* 2629 */ 'c', 'l', 'r', 'b', 'l', 'e', 9, 0,
  /* 2637 */ 'c', 'l', 'c', 'l', 'e', 9, 0,
  /* 2644 */ 'l', 'o', 'c', 'l', 'e', 9, 0,
  /* 2651 */ 's', 't', 'o', 'c', 'l', 'e', 9, 0,
  /* 2659 */ 'm', 'v', 'c', 'l', 'e', 9, 0,
  /* 2666 */ 's', 't', 'f', 'l', 'e', 9, 0,
  /* 2673 */ 'l', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 2681 */ 's', 't', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 2690 */ 'j', 'g', 'l', 'e', 9, 0,
  /* 2696 */ 'l', 'o', 'c', 'f', 'h', 'l', 'e', 9, 0,
  /* 2705 */ 's', 't', 'o', 'c', 'f', 'h', 'l', 'e', 9, 0,
  /* 2715 */ 'l', 'o', 'c', 'h', 'i', 'l', 'e', 9, 0,
  /* 2724 */ 'l', 'o', 'c', 'g', 'h', 'i', 'l', 'e', 9, 0,
  /* 2734 */ 'l', 'o', 'c', 'h', 'h', 'i', 'l', 'e', 9, 0,
  /* 2744 */ 'c', 'i', 'j', 'l', 'e', 9, 0,
  /* 2751 */ 'c', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 2759 */ 'c', 'l', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 2768 */ 'c', 'l', 'i', 'j', 'l', 'e', 9, 0,
  /* 2776 */ 'c', 'r', 'j', 'l', 'e', 9, 0,
  /* 2783 */ 'c', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 2791 */ 'c', 'l', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 2800 */ 'c', 'l', 'r', 'j', 'l', 'e', 9, 0,
  /* 2808 */ 'v', 'm', 'l', 'e', 9, 0,
  /* 2814 */ 'c', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2822 */ 'c', 'g', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2831 */ 'c', 'l', 'g', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2841 */ 'c', 'l', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2850 */ 'c', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2858 */ 'c', 'g', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2867 */ 'c', 'l', 'g', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2877 */ 'c', 'l', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2886 */ 'l', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 2894 */ 's', 't', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 2903 */ 'l', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 2912 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 2922 */ 'j', 'g', 'n', 'l', 'e', 9, 0,
  /* 2929 */ 'l', 'o', 'c', 'f', 'h', 'n', 'l', 'e', 9, 0,
  /* 2939 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'l', 'e', 9, 0,
  /* 2950 */ 'l', 'o', 'c', 'h', 'i', 'n', 'l', 'e', 9, 0,
  /* 2960 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'l', 'e', 9, 0,
  /* 2971 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'l', 'e', 9, 0,
  /* 2982 */ 'c', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 2990 */ 'c', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 2999 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 3009 */ 'c', 'l', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 3018 */ 'c', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 3026 */ 'c', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 3035 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 3045 */ 'c', 'l', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 3054 */ 'l', 'o', 'c', 'r', 'n', 'l', 'e', 9, 0,
  /* 3063 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'e', 9, 0,
  /* 3073 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'l', 'e', 9, 0,
  /* 3084 */ 'c', 'l', 'g', 't', 'n', 'l', 'e', 9, 0,
  /* 3093 */ 'c', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 3101 */ 'c', 'l', 'f', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 3111 */ 'c', 'g', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 3120 */ 'c', 'l', 'g', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 3130 */ 'c', 'l', 't', 'n', 'l', 'e', 9, 0,
  /* 3138 */ 'c', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 3146 */ 'c', 'g', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 3155 */ 'c', 'l', 'g', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 3165 */ 'c', 'l', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 3174 */ 'l', 'o', 'c', 'r', 'l', 'e', 9, 0,
  /* 3182 */ 'l', 'o', 'c', 'g', 'r', 'l', 'e', 9, 0,
  /* 3191 */ 'l', 'o', 'c', 'f', 'h', 'r', 'l', 'e', 9, 0,
  /* 3201 */ 'c', 'l', 'g', 't', 'l', 'e', 9, 0,
  /* 3209 */ 'c', 'i', 't', 'l', 'e', 9, 0,
  /* 3216 */ 'c', 'l', 'f', 'i', 't', 'l', 'e', 9, 0,
  /* 3225 */ 'c', 'g', 'i', 't', 'l', 'e', 9, 0,
  /* 3233 */ 'c', 'l', 'g', 'i', 't', 'l', 'e', 9, 0,
  /* 3242 */ 'c', 'l', 't', 'l', 'e', 9, 0,
  /* 3249 */ 'c', 'r', 't', 'l', 'e', 9, 0,
  /* 3256 */ 'c', 'g', 'r', 't', 'l', 'e', 9, 0,
  /* 3264 */ 'c', 'l', 'g', 'r', 't', 'l', 'e', 9, 0,
  /* 3273 */ 'c', 'l', 'r', 't', 'l', 'e', 9, 0,
  /* 3281 */ 'b', 'x', 'l', 'e', 9, 0,
  /* 3287 */ 'b', 'r', 'x', 'l', 'e', 9, 0,
  /* 3294 */ 'v', 'm', 'e', 9, 0,
  /* 3299 */ 'c', 'i', 'b', 'n', 'e', 9, 0,
  /* 3306 */ 'c', 'g', 'i', 'b', 'n', 'e', 9, 0,
  /* 3314 */ 'c', 'l', 'g', 'i', 'b', 'n', 'e', 9, 0,
  /* 3323 */ 'c', 'l', 'i', 'b', 'n', 'e', 9, 0,
  /* 3331 */ 'c', 'r', 'b', 'n', 'e', 9, 0,
  /* 3338 */ 'c', 'g', 'r', 'b', 'n', 'e', 9, 0,
  /* 3346 */ 'c', 'l', 'g', 'r', 'b', 'n', 'e', 9, 0,
  /* 3355 */ 'c', 'l', 'r', 'b', 'n', 'e', 9, 0,
  /* 3363 */ 'l', 'o', 'c', 'n', 'e', 9, 0,
  /* 3370 */ 's', 't', 'o', 'c', 'n', 'e', 9, 0,
  /* 3378 */ 'v', 'f', 'e', 'n', 'e', 9, 0,
  /* 3385 */ 'l', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 3393 */ 's', 't', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 3402 */ 'j', 'g', 'n', 'e', 9, 0,
  /* 3408 */ 'l', 'o', 'c', 'f', 'h', 'n', 'e', 9, 0,
  /* 3417 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'e', 9, 0,
  /* 3427 */ 'l', 'o', 'c', 'h', 'i', 'n', 'e', 9, 0,
  /* 3436 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'e', 9, 0,
  /* 3446 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'e', 9, 0,
  /* 3456 */ 'c', 'i', 'j', 'n', 'e', 9, 0,
  /* 3463 */ 'c', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 3471 */ 'c', 'l', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 3480 */ 'c', 'l', 'i', 'j', 'n', 'e', 9, 0,
  /* 3488 */ 'c', 'r', 'j', 'n', 'e', 9, 0,
  /* 3495 */ 'c', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 3503 */ 'c', 'l', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 3512 */ 'c', 'l', 'r', 'j', 'n', 'e', 9, 0,
  /* 3520 */ 'v', 'o', 'n', 'e', 9, 0,
  /* 3526 */ 'l', 'o', 'c', 'r', 'n', 'e', 9, 0,
  /* 3534 */ 'l', 'o', 'c', 'g', 'r', 'n', 'e', 9, 0,
  /* 3543 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'e', 9, 0,
  /* 3553 */ 'c', 'l', 'g', 't', 'n', 'e', 9, 0,
  /* 3561 */ 'c', 'i', 't', 'n', 'e', 9, 0,
  /* 3568 */ 'c', 'l', 'f', 'i', 't', 'n', 'e', 9, 0,
  /* 3577 */ 'c', 'g', 'i', 't', 'n', 'e', 9, 0,
  /* 3585 */ 'c', 'l', 'g', 'i', 't', 'n', 'e', 9, 0,
  /* 3594 */ 'c', 'l', 't', 'n', 'e', 9, 0,
  /* 3601 */ 'c', 'r', 't', 'n', 'e', 9, 0,
  /* 3608 */ 'c', 'g', 'r', 't', 'n', 'e', 9, 0,
  /* 3616 */ 'c', 'l', 'g', 'r', 't', 'n', 'e', 9, 0,
  /* 3625 */ 'c', 'l', 'r', 't', 'n', 'e', 9, 0,
  /* 3633 */ 's', 'q', 'e', 9, 0,
  /* 3638 */ 'l', 'o', 'c', 'r', 'e', 9, 0,
  /* 3645 */ 'l', 'o', 'c', 'g', 'r', 'e', 9, 0,
  /* 3653 */ 'l', 'o', 'c', 'f', 'h', 'r', 'e', 9, 0,
  /* 3662 */ 't', 'r', 't', 'r', 'e', 9, 0,
  /* 3669 */ 'm', 's', 'e', 9, 0,
  /* 3674 */ 'c', 'u', 's', 'e', 9, 0,
  /* 3680 */ 'c', 'l', 'g', 't', 'e', 9, 0,
  /* 3687 */ 'c', 'i', 't', 'e', 9, 0,
  /* 3693 */ 'c', 'l', 'f', 'i', 't', 'e', 9, 0,
  /* 3701 */ 'c', 'g', 'i', 't', 'e', 9, 0,
  /* 3708 */ 'c', 'l', 'g', 'i', 't', 'e', 9, 0,
  /* 3716 */ 'c', 'l', 't', 'e', 9, 0,
  /* 3722 */ 'c', 'r', 't', 'e', 9, 0,
  /* 3728 */ 'c', 'g', 'r', 't', 'e', 9, 0,
  /* 3735 */ 'c', 'l', 'g', 'r', 't', 'e', 9, 0,
  /* 3743 */ 'c', 'l', 'r', 't', 'e', 9, 0,
  /* 3750 */ 't', 'r', 't', 'e', 9, 0,
  /* 3756 */ 's', 't', 'e', 9, 0,
  /* 3761 */ 'l', 'x', 'e', 9, 0,
  /* 3766 */ 'v', 'g', 'f', 'm', 'a', 'f', 9, 0,
  /* 3774 */ 'v', 'e', 's', 'r', 'a', 'f', 9, 0,
  /* 3782 */ 'v', 'a', 'f', 9, 0,
  /* 3787 */ 'v', 'a', 'c', 'c', 'f', 9, 0,
  /* 3794 */ 'v', 'e', 'c', 'f', 9, 0,
  /* 3800 */ 'v', 'l', 'c', 'f', 9, 0,
  /* 3806 */ 'v', 's', 't', 'r', 'c', 'f', 9, 0,
  /* 3814 */ 'v', 'f', 'a', 'e', 'f', 9, 0,
  /* 3821 */ 'v', 'm', 'a', 'e', 'f', 9, 0,
  /* 3828 */ 'v', 's', 'c', 'e', 'f', 9, 0,
  /* 3835 */ 'v', 'f', 'e', 'e', 'f', 9, 0,
  /* 3842 */ 'v', 'g', 'e', 'f', 9, 0,
  /* 3848 */ 'v', 'm', 'a', 'l', 'e', 'f', 9, 0,
  /* 3856 */ 'v', 'm', 'l', 'e', 'f', 9, 0,
  /* 3863 */ 'v', 'l', 'e', 'f', 9, 0,
  /* 3869 */ 'v', 'm', 'e', 'f', 9, 0,
  /* 3875 */ 'v', 'f', 'e', 'n', 'e', 'f', 9, 0,
  /* 3883 */ 'v', 's', 't', 'e', 'f', 9, 0,
  /* 3890 */ 'a', 'g', 'f', 9, 0,
  /* 3895 */ 'c', 'g', 'f', 9, 0,
  /* 3900 */ 'v', 's', 'e', 'g', 'f', 9, 0,
  /* 3907 */ 'a', 'l', 'g', 'f', 9, 0,
  /* 3913 */ 'c', 'l', 'g', 'f', 9, 0,
  /* 3919 */ 'l', 'l', 'g', 'f', 9, 0,
  /* 3925 */ 's', 'l', 'g', 'f', 9, 0,
  /* 3931 */ 'v', 's', 'u', 'm', 'g', 'f', 9, 0,
  /* 3939 */ 'l', 'l', 'z', 'r', 'g', 'f', 9, 0,
  /* 3947 */ 'd', 's', 'g', 'f', 9, 0,
  /* 3953 */ 'm', 's', 'g', 'f', 9, 0,
  /* 3959 */ 'l', 't', 'g', 'f', 9, 0,
  /* 3965 */ 'v', 'a', 'v', 'g', 'f', 9, 0,
  /* 3972 */ 'v', 'l', 'v', 'g', 'f', 9, 0,
  /* 3979 */ 'v', 'm', 'a', 'h', 'f', 9, 0,
  /* 3986 */ 'v', 'c', 'h', 'f', 9, 0,
  /* 3992 */ 'i', 'i', 'h', 'f', 9, 0,
  /* 3998 */ 'l', 'l', 'i', 'h', 'f', 9, 0,
  /* 4005 */ 'n', 'i', 'h', 'f', 9, 0,
  /* 4011 */ 'o', 'i', 'h', 'f', 9, 0,
  /* 4017 */ 'x', 'i', 'h', 'f', 9, 0,
  /* 4023 */ 'v', 'm', 'a', 'l', 'h', 'f', 9, 0,
  /* 4031 */ 'c', 'l', 'h', 'f', 9, 0,
  /* 4037 */ 'v', 'm', 'l', 'h', 'f', 9, 0,
  /* 4044 */ 'v', 'u', 'p', 'l', 'h', 'f', 9, 0,
  /* 4052 */ 'v', 'm', 'h', 'f', 9, 0,
  /* 4058 */ 'v', 'u', 'p', 'h', 'f', 9, 0,
  /* 4065 */ 'v', 'm', 'r', 'h', 'f', 9, 0,
  /* 4072 */ 'v', 's', 'c', 'b', 'i', 'f', 9, 0,
  /* 4080 */ 'v', 'l', 'e', 'i', 'f', 9, 0,
  /* 4087 */ 'v', 'r', 'e', 'p', 'i', 'f', 9, 0,
  /* 4095 */ 's', 't', 'c', 'k', 'f', 9, 0,
  /* 4102 */ 'v', 'p', 'k', 'f', 9, 0,
  /* 4108 */ 'v', 'm', 'a', 'l', 'f', 9, 0,
  /* 4115 */ 'v', 'e', 'c', 'l', 'f', 9, 0,
  /* 4122 */ 'v', 'a', 'v', 'g', 'l', 'f', 9, 0,
  /* 4130 */ 'v', 'c', 'h', 'l', 'f', 9, 0,
  /* 4137 */ 'i', 'i', 'l', 'f', 9, 0,
  /* 4143 */ 'l', 'l', 'i', 'l', 'f', 9, 0,
  /* 4150 */ 'n', 'i', 'l', 'f', 9, 0,
  /* 4156 */ 'o', 'i', 'l', 'f', 9, 0,
  /* 4162 */ 'x', 'i', 'l', 'f', 9, 0,
  /* 4168 */ 'v', 'u', 'p', 'l', 'l', 'f', 9, 0,
  /* 4176 */ 'v', 'e', 'r', 'l', 'l', 'f', 9, 0,
  /* 4184 */ 'v', 'm', 'l', 'f', 9, 0,
  /* 4190 */ 'v', 'm', 'n', 'l', 'f', 9, 0,
  /* 4197 */ 'v', 'u', 'p', 'l', 'f', 9, 0,
  /* 4204 */ 'v', 'm', 'r', 'l', 'f', 9, 0,
  /* 4211 */ 'v', 'e', 's', 'r', 'l', 'f', 9, 0,
  /* 4219 */ 'v', 'e', 's', 'l', 'f', 9, 0,
  /* 4226 */ 'v', 'm', 'x', 'l', 'f', 9, 0,
  /* 4233 */ 'v', 'g', 'f', 'm', 'f', 9, 0,
  /* 4240 */ 'v', 'g', 'm', 'f', 9, 0,
  /* 4246 */ 'v', 'e', 'r', 'i', 'm', 'f', 9, 0,
  /* 4254 */ 'k', 'm', 'f', 9, 0,
  /* 4259 */ 'v', 'm', 'n', 'f', 9, 0,
  /* 4265 */ 'v', 'm', 'a', 'o', 'f', 9, 0,
  /* 4272 */ 'v', 'm', 'a', 'l', 'o', 'f', 9, 0,
  /* 4280 */ 'v', 'm', 'l', 'o', 'f', 9, 0,
  /* 4287 */ 'v', 'm', 'o', 'f', 9, 0,
  /* 4293 */ 'v', 'l', 'r', 'e', 'p', 'f', 9, 0,
  /* 4301 */ 'v', 'r', 'e', 'p', 'f', 9, 0,
  /* 4308 */ 'v', 'l', 'p', 'f', 9, 0,
  /* 4314 */ 'v', 'c', 'e', 'q', 'f', 9, 0,
  /* 4321 */ 'v', 's', 'u', 'm', 'q', 'f', 9, 0,
  /* 4329 */ 'v', 'i', 's', 't', 'r', 'f', 9, 0,
  /* 4337 */ 'l', 'z', 'r', 'f', 9, 0,
  /* 4343 */ 'v', 'p', 'k', 's', 'f', 9, 0,
  /* 4350 */ 'v', 'p', 'k', 'l', 's', 'f', 9, 0,
  /* 4358 */ 'v', 's', 'f', 9, 0,
  /* 4363 */ 'c', 'u', 'u', 't', 'f', 9, 0,
  /* 4370 */ 'v', 'e', 's', 'r', 'a', 'v', 'f', 9, 0,
  /* 4379 */ 'v', 'l', 'g', 'v', 'f', 9, 0,
  /* 4386 */ 'v', 'e', 'r', 'l', 'l', 'v', 'f', 9, 0,
  /* 4395 */ 'v', 'e', 's', 'r', 'l', 'v', 'f', 9, 0,
  /* 4404 */ 'v', 'e', 's', 'l', 'v', 'f', 9, 0,
  /* 4412 */ 'v', 'm', 'x', 'f', 9, 0,
  /* 4418 */ 'v', 's', 't', 'r', 'c', 'z', 'f', 9, 0,
  /* 4427 */ 'v', 'f', 'a', 'e', 'z', 'f', 9, 0,
  /* 4435 */ 'v', 'f', 'e', 'e', 'z', 'f', 9, 0,
  /* 4443 */ 'v', 'l', 'l', 'e', 'z', 'f', 9, 0,
  /* 4451 */ 'v', 'f', 'e', 'n', 'e', 'z', 'f', 9, 0,
  /* 4460 */ 'v', 'c', 'l', 'z', 'f', 9, 0,
  /* 4467 */ 'v', 'c', 't', 'z', 'f', 9, 0,
  /* 4474 */ 'l', 'a', 'a', 'g', 9, 0,
  /* 4480 */ 'e', 'c', 'a', 'g', 9, 0,
  /* 4486 */ 's', 'l', 'a', 'g', 9, 0,
  /* 4492 */ 'v', 'g', 'f', 'm', 'a', 'g', 9, 0,
  /* 4500 */ 'v', 'e', 's', 'r', 'a', 'g', 9, 0,
  /* 4508 */ 's', 't', 'r', 'a', 'g', 9, 0,
  /* 4515 */ 'v', 'a', 'g', 9, 0,
  /* 4520 */ 's', 'l', 'b', 'g', 9, 0,
  /* 4526 */ 'r', 'i', 's', 'b', 'g', 9, 0,
  /* 4533 */ 'r', 'n', 's', 'b', 'g', 9, 0,
  /* 4540 */ 'r', 'o', 's', 'b', 'g', 9, 0,
  /* 4547 */ 'r', 'x', 's', 'b', 'g', 9, 0,
  /* 4554 */ 'c', 'v', 'b', 'g', 9, 0,
  /* 4560 */ 'v', 'a', 'c', 'c', 'g', 9, 0,
  /* 4567 */ 'v', 'e', 'c', 'g', 9, 0,
  /* 4573 */ 'a', 'l', 'c', 'g', 9, 0,
  /* 4579 */ 'v', 'l', 'c', 'g', 9, 0,
  /* 4585 */ 'l', 'o', 'c', 'g', 9, 0,
  /* 4591 */ 's', 't', 'o', 'c', 'g', 9, 0,
  /* 4598 */ 'v', 'c', 'd', 'g', 9, 0,
  /* 4604 */ 'l', 'p', 'd', 'g', 9, 0,
  /* 4610 */ 'c', 'v', 'd', 'g', 9, 0,
  /* 4616 */ 'v', 's', 'c', 'e', 'g', 9, 0,
  /* 4623 */ 'v', 'g', 'e', 'g', 9, 0,
  /* 4629 */ 'v', 'l', 'e', 'g', 9, 0,
  /* 4635 */ 'b', 'x', 'l', 'e', 'g', 9, 0,
  /* 4642 */ 'v', 's', 'e', 'g', 9, 0,
  /* 4648 */ 'v', 's', 't', 'e', 'g', 9, 0,
  /* 4655 */ 'v', 'a', 'v', 'g', 'g', 9, 0,
  /* 4662 */ 'v', 'l', 'v', 'g', 'g', 9, 0,
  /* 4669 */ 'r', 'i', 's', 'b', 'h', 'g', 9, 0,
  /* 4677 */ 'v', 'c', 'h', 'g', 9, 0,
  /* 4683 */ 'v', 'm', 'r', 'h', 'g', 9, 0,
  /* 4690 */ 'b', 'x', 'h', 'g', 9, 0,
  /* 4696 */ 'b', 'r', 'x', 'h', 'g', 9, 0,
  /* 4703 */ 'v', 's', 'c', 'b', 'i', 'g', 9, 0,
  /* 4711 */ 'v', 'l', 'e', 'i', 'g', 9, 0,
  /* 4718 */ 'v', 'r', 'e', 'p', 'i', 'g', 9, 0,
  /* 4726 */ 'j', 'g', 9, 0,
  /* 4730 */ 'v', 'p', 'k', 'g', 9, 0,
  /* 4736 */ 'l', 'a', 'a', 'l', 'g', 9, 0,
  /* 4743 */ 'r', 'i', 's', 'b', 'l', 'g', 9, 0,
  /* 4751 */ 'v', 'e', 'c', 'l', 'g', 9, 0,
  /* 4758 */ 'v', 'c', 'd', 'l', 'g', 9, 0,
  /* 4765 */ 'v', 'a', 'v', 'g', 'l', 'g', 9, 0,
  /* 4773 */ 'v', 'c', 'h', 'l', 'g', 9, 0,
  /* 4780 */ 'v', 'e', 'r', 'l', 'l', 'g', 9, 0,
  /* 4788 */ 's', 'l', 'l', 'g', 9, 0,
  /* 4794 */ 'm', 'l', 'g', 9, 0,
  /* 4799 */ 'v', 'm', 'n', 'l', 'g', 9, 0,
  /* 4806 */ 'v', 'm', 'r', 'l', 'g', 9, 0,
  /* 4813 */ 'v', 'e', 's', 'r', 'l', 'g', 9, 0,
  /* 4821 */ 'v', 'e', 's', 'l', 'g', 9, 0,
  /* 4828 */ 'v', 'm', 'x', 'l', 'g', 9, 0,
  /* 4835 */ 'b', 'r', 'x', 'l', 'g', 9, 0,
  /* 4842 */ 'v', 'g', 'f', 'm', 'g', 9, 0,
  /* 4849 */ 'v', 'g', 'm', 'g', 9, 0,
  /* 4855 */ 'v', 'e', 'r', 'i', 'm', 'g', 9, 0,
  /* 4863 */ 'l', 'm', 'g', 9, 0,
  /* 4868 */ 's', 't', 'm', 'g', 9, 0,
  /* 4874 */ 'v', 's', 'u', 'm', 'g', 9, 0,
  /* 4881 */ 'l', 'a', 'n', 'g', 9, 0,
  /* 4887 */ 'v', 'm', 'n', 'g', 9, 0,
  /* 4893 */ 'l', 'a', 'o', 'g', 9, 0,
  /* 4899 */ 'v', 'l', 'r', 'e', 'p', 'g', 9, 0,
  /* 4907 */ 'v', 'r', 'e', 'p', 'g', 9, 0,
  /* 4914 */ 'v', 'l', 'p', 'g', 9, 0,
  /* 4920 */ 'v', 'c', 'e', 'q', 'g', 9, 0,
  /* 4927 */ 'v', 's', 'u', 'm', 'q', 'g', 9, 0,
  /* 4935 */ 'l', 'z', 'r', 'g', 9, 0,
  /* 4941 */ 'c', 's', 'g', 9, 0,
  /* 4946 */ 'c', 'd', 's', 'g', 9, 0,
  /* 4952 */ 'v', 'p', 'k', 's', 'g', 9, 0,
  /* 4959 */ 'v', 'p', 'k', 'l', 's', 'g', 9, 0,
  /* 4967 */ 'm', 's', 'g', 9, 0,
  /* 4972 */ 'v', 's', 'g', 9, 0,
  /* 4977 */ 'b', 'c', 't', 'g', 9, 0,
  /* 4983 */ 'e', 'c', 't', 'g', 9, 0,
  /* 4989 */ 'b', 'r', 'c', 't', 'g', 9, 0,
  /* 4996 */ 'l', 't', 'g', 9, 0,
  /* 5001 */ 'n', 't', 's', 't', 'g', 9, 0,
  /* 5008 */ 'v', 'e', 's', 'r', 'a', 'v', 'g', 9, 0,
  /* 5017 */ 'v', 'a', 'v', 'g', 9, 0,
  /* 5023 */ 'v', 'l', 'g', 'v', 'g', 9, 0,
  /* 5030 */ 'v', 'e', 'r', 'l', 'l', 'v', 'g', 9, 0,
  /* 5039 */ 'v', 'e', 's', 'r', 'l', 'v', 'g', 9, 0,
  /* 5048 */ 'v', 'e', 's', 'l', 'v', 'g', 9, 0,
  /* 5056 */ 'v', 'l', 'v', 'g', 9, 0,
  /* 5062 */ 'l', 'r', 'v', 'g', 9, 0,
  /* 5068 */ 's', 't', 'r', 'v', 'g', 9, 0,
  /* 5075 */ 'l', 'a', 'x', 'g', 9, 0,
  /* 5081 */ 'v', 'm', 'x', 'g', 9, 0,
  /* 5087 */ 'v', 'l', 'l', 'e', 'z', 'g', 9, 0,
  /* 5095 */ 'v', 'c', 'l', 'z', 'g', 9, 0,
  /* 5102 */ 'v', 'c', 't', 'z', 'g', 9, 0,
  /* 5109 */ 'v', 'g', 'f', 'm', 'a', 'h', 9, 0,
  /* 5117 */ 'v', 'm', 'a', 'h', 9, 0,
  /* 5123 */ 'v', 'e', 's', 'r', 'a', 'h', 9, 0,
  /* 5131 */ 'v', 'a', 'h', 9, 0,
  /* 5136 */ 'c', 'i', 'b', 'h', 9, 0,
  /* 5142 */ 'c', 'g', 'i', 'b', 'h', 9, 0,
  /* 5149 */ 'c', 'l', 'g', 'i', 'b', 'h', 9, 0,
  /* 5157 */ 'c', 'l', 'i', 'b', 'h', 9, 0,
  /* 5164 */ 'l', 'b', 'h', 9, 0,
  /* 5169 */ 'c', 'r', 'b', 'h', 9, 0,
  /* 5175 */ 'c', 'g', 'r', 'b', 'h', 9, 0,
  /* 5182 */ 'c', 'l', 'g', 'r', 'b', 'h', 9, 0,
  /* 5190 */ 'c', 'l', 'r', 'b', 'h', 9, 0,
  /* 5197 */ 'v', 'a', 'c', 'c', 'h', 9, 0,
  /* 5204 */ 'v', 'e', 'c', 'h', 9, 0,
  /* 5210 */ 'v', 'f', 'c', 'h', 9, 0,
  /* 5216 */ 'l', 'l', 'c', 'h', 9, 0,
  /* 5222 */ 'v', 'l', 'c', 'h', 9, 0,
  /* 5228 */ 'l', 'o', 'c', 'h', 9, 0,
  /* 5234 */ 's', 't', 'o', 'c', 'h', 9, 0,
  /* 5241 */ 'v', 's', 't', 'r', 'c', 'h', 9, 0,
  /* 5249 */ 's', 't', 'c', 'h', 9, 0,
  /* 5255 */ 'v', 'c', 'h', 9, 0,
  /* 5260 */ 'v', 'f', 'a', 'e', 'h', 9, 0,
  /* 5267 */ 'v', 'm', 'a', 'e', 'h', 9, 0,
  /* 5274 */ 'v', 'f', 'e', 'e', 'h', 9, 0,
  /* 5281 */ 'v', 'm', 'a', 'l', 'e', 'h', 9, 0,
  /* 5289 */ 'v', 'm', 'l', 'e', 'h', 9, 0,
  /* 5296 */ 'v', 'l', 'e', 'h', 9, 0,
  /* 5302 */ 'v', 'm', 'e', 'h', 9, 0,
  /* 5308 */ 'v', 'f', 'e', 'n', 'e', 'h', 9, 0,
  /* 5316 */ 'v', 's', 't', 'e', 'h', 9, 0,
  /* 5323 */ 'l', 'o', 'c', 'f', 'h', 9, 0,
  /* 5330 */ 's', 't', 'o', 'c', 'f', 'h', 9, 0,
  /* 5338 */ 'l', 'f', 'h', 9, 0,
  /* 5343 */ 's', 't', 'f', 'h', 9, 0,
  /* 5349 */ 'l', 'o', 'c', 'g', 'h', 9, 0,
  /* 5356 */ 's', 't', 'o', 'c', 'g', 'h', 9, 0,
  /* 5364 */ 'v', 's', 'e', 'g', 'h', 9, 0,
  /* 5371 */ 'j', 'g', 'h', 9, 0,
  /* 5376 */ 'l', 'l', 'g', 'h', 9, 0,
  /* 5382 */ 'v', 's', 'u', 'm', 'g', 'h', 9, 0,
  /* 5390 */ 'v', 'a', 'v', 'g', 'h', 9, 0,
  /* 5397 */ 'v', 'l', 'v', 'g', 'h', 9, 0,
  /* 5404 */ 'v', 'm', 'a', 'h', 'h', 9, 0,
  /* 5411 */ 'v', 'c', 'h', 'h', 9, 0,
  /* 5417 */ 'l', 'o', 'c', 'f', 'h', 'h', 9, 0,
  /* 5425 */ 's', 't', 'o', 'c', 'f', 'h', 'h', 9, 0,
  /* 5434 */ 'i', 'i', 'h', 'h', 9, 0,
  /* 5440 */ 'l', 'l', 'i', 'h', 'h', 9, 0,
  /* 5447 */ 'n', 'i', 'h', 'h', 9, 0,
  /* 5453 */ 'o', 'i', 'h', 'h', 9, 0,
  /* 5459 */ 'v', 'm', 'a', 'l', 'h', 'h', 9, 0,
  /* 5467 */ 'l', 'l', 'h', 'h', 9, 0,
  /* 5473 */ 'v', 'm', 'l', 'h', 'h', 9, 0,
  /* 5480 */ 'v', 'u', 'p', 'l', 'h', 'h', 9, 0,
  /* 5488 */ 't', 'm', 'h', 'h', 9, 0,
  /* 5494 */ 'v', 'm', 'h', 'h', 9, 0,
  /* 5500 */ 'v', 'u', 'p', 'h', 'h', 9, 0,
  /* 5507 */ 'v', 'm', 'r', 'h', 'h', 9, 0,
  /* 5514 */ 's', 't', 'h', 'h', 9, 0,
  /* 5520 */ 'a', 'i', 'h', 9, 0,
  /* 5525 */ 'v', 's', 'c', 'b', 'i', 'h', 9, 0,
  /* 5533 */ 'c', 'i', 'h', 9, 0,
  /* 5538 */ 'v', 'l', 'e', 'i', 'h', 9, 0,
  /* 5545 */ 'l', 'o', 'c', 'h', 'i', 'h', 9, 0,
  /* 5553 */ 'l', 'o', 'c', 'g', 'h', 'i', 'h', 9, 0,
  /* 5562 */ 'l', 'o', 'c', 'h', 'h', 'i', 'h', 9, 0,
  /* 5571 */ 'c', 'l', 'i', 'h', 9, 0,
  /* 5577 */ 'v', 'r', 'e', 'p', 'i', 'h', 9, 0,
  /* 5585 */ 'c', 'i', 'j', 'h', 9, 0,
  /* 5591 */ 'c', 'g', 'i', 'j', 'h', 9, 0,
  /* 5598 */ 'c', 'l', 'g', 'i', 'j', 'h', 9, 0,
  /* 5606 */ 'c', 'l', 'i', 'j', 'h', 9, 0,
  /* 5613 */ 'c', 'r', 'j', 'h', 9, 0,
  /* 5619 */ 'c', 'g', 'r', 'j', 'h', 9, 0,
  /* 5626 */ 'c', 'l', 'g', 'r', 'j', 'h', 9, 0,
  /* 5634 */ 'c', 'l', 'r', 'j', 'h', 9, 0,
  /* 5641 */ 'v', 'p', 'k', 'h', 9, 0,
  /* 5647 */ 'v', 'm', 'a', 'l', 'h', 9, 0,
  /* 5654 */ 'c', 'i', 'b', 'l', 'h', 9, 0,
  /* 5661 */ 'c', 'g', 'i', 'b', 'l', 'h', 9, 0,
  /* 5669 */ 'c', 'l', 'g', 'i', 'b', 'l', 'h', 9, 0,
  /* 5678 */ 'c', 'l', 'i', 'b', 'l', 'h', 9, 0,
  /* 5686 */ 'c', 'r', 'b', 'l', 'h', 9, 0,
  /* 5693 */ 'c', 'g', 'r', 'b', 'l', 'h', 9, 0,
  /* 5701 */ 'c', 'l', 'g', 'r', 'b', 'l', 'h', 9, 0,
  /* 5710 */ 'c', 'l', 'r', 'b', 'l', 'h', 9, 0,
  /* 5718 */ 'v', 'e', 'c', 'l', 'h', 9, 0,
  /* 5725 */ 'l', 'o', 'c', 'l', 'h', 9, 0,
  /* 5732 */ 's', 't', 'o', 'c', 'l', 'h', 9, 0,
  /* 5740 */ 'l', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 5748 */ 's', 't', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 5757 */ 'j', 'g', 'l', 'h', 9, 0,
  /* 5763 */ 'v', 'a', 'v', 'g', 'l', 'h', 9, 0,
  /* 5771 */ 'v', 'c', 'h', 'l', 'h', 9, 0,
  /* 5778 */ 'l', 'o', 'c', 'f', 'h', 'l', 'h', 9, 0,
  /* 5787 */ 's', 't', 'o', 'c', 'f', 'h', 'l', 'h', 9, 0,
  /* 5797 */ 'l', 'o', 'c', 'h', 'i', 'l', 'h', 9, 0,
  /* 5806 */ 'l', 'o', 'c', 'g', 'h', 'i', 'l', 'h', 9, 0,
  /* 5816 */ 'l', 'o', 'c', 'h', 'h', 'i', 'l', 'h', 9, 0,
  /* 5826 */ 'i', 'i', 'l', 'h', 9, 0,
  /* 5832 */ 'l', 'l', 'i', 'l', 'h', 9, 0,
  /* 5839 */ 'n', 'i', 'l', 'h', 9, 0,
  /* 5845 */ 'o', 'i', 'l', 'h', 9, 0,
  /* 5851 */ 'c', 'i', 'j', 'l', 'h', 9, 0,
  /* 5858 */ 'c', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 5866 */ 'c', 'l', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 5875 */ 'c', 'l', 'i', 'j', 'l', 'h', 9, 0,
  /* 5883 */ 'c', 'r', 'j', 'l', 'h', 9, 0,
  /* 5890 */ 'c', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 5898 */ 'c', 'l', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 5907 */ 'c', 'l', 'r', 'j', 'l', 'h', 9, 0,
  /* 5915 */ 'v', 'u', 'p', 'l', 'l', 'h', 9, 0,
  /* 5923 */ 'v', 'e', 'r', 'l', 'l', 'h', 9, 0,
  /* 5931 */ 't', 'm', 'l', 'h', 9, 0,
  /* 5937 */ 'v', 'm', 'l', 'h', 9, 0,
  /* 5943 */ 'c', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 5951 */ 'c', 'g', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 5960 */ 'c', 'l', 'g', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 5970 */ 'c', 'l', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 5979 */ 'c', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 5987 */ 'c', 'g', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 5996 */ 'c', 'l', 'g', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 6006 */ 'c', 'l', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 6015 */ 'l', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 6023 */ 's', 't', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 6032 */ 'l', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 6041 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 6051 */ 'j', 'g', 'n', 'l', 'h', 9, 0,
  /* 6058 */ 'l', 'o', 'c', 'f', 'h', 'n', 'l', 'h', 9, 0,
  /* 6068 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'l', 'h', 9, 0,
  /* 6079 */ 'l', 'o', 'c', 'h', 'i', 'n', 'l', 'h', 9, 0,
  /* 6089 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'l', 'h', 9, 0,
  /* 6100 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'l', 'h', 9, 0,
  /* 6111 */ 'c', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 6119 */ 'c', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 6128 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 6138 */ 'c', 'l', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 6147 */ 'c', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 6155 */ 'c', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 6164 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 6174 */ 'c', 'l', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 6183 */ 'v', 'm', 'n', 'l', 'h', 9, 0,
  /* 6190 */ 'l', 'o', 'c', 'r', 'n', 'l', 'h', 9, 0,
  /* 6199 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'h', 9, 0,
  /* 6209 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'l', 'h', 9, 0,
  /* 6220 */ 'c', 'l', 'g', 't', 'n', 'l', 'h', 9, 0,
  /* 6229 */ 'c', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 6237 */ 'c', 'l', 'f', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 6247 */ 'c', 'g', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 6256 */ 'c', 'l', 'g', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 6266 */ 'c', 'l', 't', 'n', 'l', 'h', 9, 0,
  /* 6274 */ 'c', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 6282 */ 'c', 'g', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 6291 */ 'c', 'l', 'g', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 6301 */ 'c', 'l', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 6310 */ 'v', 'u', 'p', 'l', 'h', 9, 0,
  /* 6317 */ 'l', 'o', 'c', 'r', 'l', 'h', 9, 0,
  /* 6325 */ 'l', 'o', 'c', 'g', 'r', 'l', 'h', 9, 0,
  /* 6334 */ 'l', 'o', 'c', 'f', 'h', 'r', 'l', 'h', 9, 0,
  /* 6344 */ 'v', 'm', 'r', 'l', 'h', 9, 0,
  /* 6351 */ 'v', 'e', 's', 'r', 'l', 'h', 9, 0,
  /* 6359 */ 'v', 'e', 's', 'l', 'h', 9, 0,
  /* 6366 */ 'c', 'l', 'g', 't', 'l', 'h', 9, 0,
  /* 6374 */ 'c', 'i', 't', 'l', 'h', 9, 0,
  /* 6381 */ 'c', 'l', 'f', 'i', 't', 'l', 'h', 9, 0,
  /* 6390 */ 'c', 'g', 'i', 't', 'l', 'h', 9, 0,
  /* 6398 */ 'c', 'l', 'g', 'i', 't', 'l', 'h', 9, 0,
  /* 6407 */ 'c', 'l', 't', 'l', 'h', 9, 0,
  /* 6414 */ 'c', 'r', 't', 'l', 'h', 9, 0,
  /* 6421 */ 'c', 'g', 'r', 't', 'l', 'h', 9, 0,
  /* 6429 */ 'c', 'l', 'g', 'r', 't', 'l', 'h', 9, 0,
  /* 6438 */ 'c', 'l', 'r', 't', 'l', 'h', 9, 0,
  /* 6446 */ 'v', 'm', 'x', 'l', 'h', 9, 0,
  /* 6453 */ 'i', 'c', 'm', 'h', 9, 0,
  /* 6459 */ 's', 't', 'c', 'm', 'h', 9, 0,
  /* 6466 */ 'v', 'g', 'f', 'm', 'h', 9, 0,
  /* 6473 */ 'v', 'g', 'm', 'h', 9, 0,
  /* 6479 */ 'v', 'e', 'r', 'i', 'm', 'h', 9, 0,
  /* 6487 */ 'c', 'l', 'm', 'h', 9, 0,
  /* 6493 */ 's', 't', 'm', 'h', 9, 0,
  /* 6499 */ 'v', 's', 'u', 'm', 'h', 9, 0,
  /* 6506 */ 'v', 'm', 'h', 9, 0,
  /* 6511 */ 'c', 'i', 'b', 'n', 'h', 9, 0,
  /* 6518 */ 'c', 'g', 'i', 'b', 'n', 'h', 9, 0,
  /* 6526 */ 'c', 'l', 'g', 'i', 'b', 'n', 'h', 9, 0,
  /* 6535 */ 'c', 'l', 'i', 'b', 'n', 'h', 9, 0,
  /* 6543 */ 'c', 'r', 'b', 'n', 'h', 9, 0,
  /* 6550 */ 'c', 'g', 'r', 'b', 'n', 'h', 9, 0,
  /* 6558 */ 'c', 'l', 'g', 'r', 'b', 'n', 'h', 9, 0,
  /* 6567 */ 'c', 'l', 'r', 'b', 'n', 'h', 9, 0,
  /* 6575 */ 'l', 'o', 'c', 'n', 'h', 9, 0,
  /* 6582 */ 's', 't', 'o', 'c', 'n', 'h', 9, 0,
  /* 6590 */ 'l', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 6598 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 6607 */ 'j', 'g', 'n', 'h', 9, 0,
  /* 6613 */ 'l', 'o', 'c', 'f', 'h', 'n', 'h', 9, 0,
  /* 6622 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'h', 9, 0,
  /* 6632 */ 'l', 'o', 'c', 'h', 'i', 'n', 'h', 9, 0,
  /* 6641 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'h', 9, 0,
  /* 6651 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'h', 9, 0,
  /* 6661 */ 'c', 'i', 'j', 'n', 'h', 9, 0,
  /* 6668 */ 'c', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 6676 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 6685 */ 'c', 'l', 'i', 'j', 'n', 'h', 9, 0,
  /* 6693 */ 'c', 'r', 'j', 'n', 'h', 9, 0,
  /* 6700 */ 'c', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 6708 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 6717 */ 'c', 'l', 'r', 'j', 'n', 'h', 9, 0,
  /* 6725 */ 'v', 'm', 'n', 'h', 9, 0,
  /* 6731 */ 'l', 'o', 'c', 'r', 'n', 'h', 9, 0,
  /* 6739 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 9, 0,
  /* 6748 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'h', 9, 0,
  /* 6758 */ 'c', 'l', 'g', 't', 'n', 'h', 9, 0,
  /* 6766 */ 'c', 'i', 't', 'n', 'h', 9, 0,
  /* 6773 */ 'c', 'l', 'f', 'i', 't', 'n', 'h', 9, 0,
  /* 6782 */ 'c', 'g', 'i', 't', 'n', 'h', 9, 0,
  /* 6790 */ 'c', 'l', 'g', 'i', 't', 'n', 'h', 9, 0,
  /* 6799 */ 'c', 'l', 't', 'n', 'h', 9, 0,
  /* 6806 */ 'c', 'r', 't', 'n', 'h', 9, 0,
  /* 6813 */ 'c', 'g', 'r', 't', 'n', 'h', 9, 0,
  /* 6821 */ 'c', 'l', 'g', 'r', 't', 'n', 'h', 9, 0,
  /* 6830 */ 'c', 'l', 'r', 't', 'n', 'h', 9, 0,
  /* 6838 */ 'v', 'm', 'a', 'o', 'h', 9, 0,
  /* 6845 */ 'v', 'm', 'a', 'l', 'o', 'h', 9, 0,
  /* 6853 */ 'v', 'm', 'l', 'o', 'h', 9, 0,
  /* 6860 */ 'v', 'm', 'o', 'h', 9, 0,
  /* 6866 */ 'v', 'l', 'r', 'e', 'p', 'h', 9, 0,
  /* 6874 */ 'v', 'r', 'e', 'p', 'h', 9, 0,
  /* 6881 */ 'v', 'l', 'p', 'h', 9, 0,
  /* 6887 */ 'v', 'u', 'p', 'h', 9, 0,
  /* 6893 */ 'v', 'c', 'e', 'q', 'h', 9, 0,
  /* 6900 */ 'l', 'o', 'c', 'r', 'h', 9, 0,
  /* 6907 */ 'l', 'o', 'c', 'g', 'r', 'h', 9, 0,
  /* 6915 */ 'l', 'o', 'c', 'f', 'h', 'r', 'h', 9, 0,
  /* 6924 */ 'v', 'm', 'r', 'h', 9, 0,
  /* 6930 */ 'v', 'i', 's', 't', 'r', 'h', 9, 0,
  /* 6938 */ 'v', 'p', 'k', 's', 'h', 9, 0,
  /* 6945 */ 'v', 'p', 'k', 'l', 's', 'h', 9, 0,
  /* 6953 */ 'v', 's', 'h', 9, 0,
  /* 6958 */ 'b', 'r', 'c', 't', 'h', 9, 0,
  /* 6965 */ 'c', 'l', 'g', 't', 'h', 9, 0,
  /* 6972 */ 'c', 'i', 't', 'h', 9, 0,
  /* 6978 */ 'c', 'l', 'f', 'i', 't', 'h', 9, 0,
  /* 6986 */ 'c', 'g', 'i', 't', 'h', 9, 0,
  /* 6993 */ 'c', 'l', 'g', 'i', 't', 'h', 9, 0,
  /* 7001 */ 'c', 'l', 't', 'h', 9, 0,
  /* 7007 */ 'c', 'r', 't', 'h', 9, 0,
  /* 7013 */ 'c', 'g', 'r', 't', 'h', 9, 0,
  /* 7020 */ 'c', 'l', 'g', 'r', 't', 'h', 9, 0,
  /* 7028 */ 'c', 'l', 'r', 't', 'h', 9, 0,
  /* 7035 */ 's', 't', 'h', 9, 0,
  /* 7040 */ 'v', 'e', 's', 'r', 'a', 'v', 'h', 9, 0,
  /* 7049 */ 'v', 'l', 'g', 'v', 'h', 9, 0,
  /* 7056 */ 'v', 'e', 'r', 'l', 'l', 'v', 'h', 9, 0,
  /* 7065 */ 'v', 'e', 's', 'r', 'l', 'v', 'h', 9, 0,
  /* 7074 */ 'v', 'e', 's', 'l', 'v', 'h', 9, 0,
  /* 7082 */ 'l', 'r', 'v', 'h', 9, 0,
  /* 7088 */ 's', 't', 'r', 'v', 'h', 9, 0,
  /* 7095 */ 'b', 'x', 'h', 9, 0,
  /* 7100 */ 'v', 'm', 'x', 'h', 9, 0,
  /* 7106 */ 'b', 'r', 'x', 'h', 9, 0,
  /* 7112 */ 'm', 'a', 'y', 'h', 9, 0,
  /* 7118 */ 'm', 'y', 'h', 9, 0,
  /* 7123 */ 'v', 's', 't', 'r', 'c', 'z', 'h', 9, 0,
  /* 7132 */ 'v', 'f', 'a', 'e', 'z', 'h', 9, 0,
  /* 7140 */ 'v', 'f', 'e', 'e', 'z', 'h', 9, 0,
  /* 7148 */ 'v', 'l', 'l', 'e', 'z', 'h', 9, 0,
  /* 7156 */ 'v', 'f', 'e', 'n', 'e', 'z', 'h', 9, 0,
  /* 7165 */ 'v', 'c', 'l', 'z', 'h', 9, 0,
  /* 7172 */ 'v', 'c', 't', 'z', 'h', 9, 0,
  /* 7179 */ 'n', 'i', 'a', 'i', 9, 0,
  /* 7185 */ 'v', 's', 'b', 'c', 'b', 'i', 9, 0,
  /* 7193 */ 'v', 's', 'c', 'b', 'i', 9, 0,
  /* 7200 */ 'v', 's', 'b', 'i', 9, 0,
  /* 7206 */ 'v', 'f', 't', 'c', 'i', 9, 0,
  /* 7213 */ 'v', 'p', 'd', 'i', 9, 0,
  /* 7219 */ 'a', 'f', 'i', 9, 0,
  /* 7224 */ 'c', 'f', 'i', 9, 0,
  /* 7229 */ 'a', 'g', 'f', 'i', 9, 0,
  /* 7235 */ 'c', 'g', 'f', 'i', 9, 0,
  /* 7241 */ 'a', 'l', 'g', 'f', 'i', 9, 0,
  /* 7248 */ 'c', 'l', 'g', 'f', 'i', 9, 0,
  /* 7255 */ 's', 'l', 'g', 'f', 'i', 9, 0,
  /* 7262 */ 'm', 's', 'g', 'f', 'i', 9, 0,
  /* 7269 */ 'a', 'l', 'f', 'i', 9, 0,
  /* 7275 */ 'c', 'l', 'f', 'i', 9, 0,
  /* 7281 */ 's', 'l', 'f', 'i', 9, 0,
  /* 7287 */ 'm', 's', 'f', 'i', 9, 0,
  /* 7293 */ 'v', 'f', 'i', 9, 0,
  /* 7298 */ 'a', 'h', 'i', 9, 0,
  /* 7303 */ 'l', 'o', 'c', 'h', 'i', 9, 0,
  /* 7310 */ 'a', 'g', 'h', 'i', 9, 0,
  /* 7316 */ 'l', 'o', 'c', 'g', 'h', 'i', 9, 0,
  /* 7324 */ 'l', 'g', 'h', 'i', 9, 0,
  /* 7330 */ 'm', 'g', 'h', 'i', 9, 0,
  /* 7336 */ 'm', 'v', 'g', 'h', 'i', 9, 0,
  /* 7343 */ 'l', 'o', 'c', 'h', 'h', 'i', 9, 0,
  /* 7351 */ 'm', 'v', 'h', 'h', 'i', 9, 0,
  /* 7358 */ 'l', 'h', 'i', 9, 0,
  /* 7363 */ 'm', 'h', 'i', 9, 0,
  /* 7368 */ 'm', 'v', 'h', 'i', 9, 0,
  /* 7374 */ 'c', 'l', 'i', 9, 0,
  /* 7379 */ 'n', 'i', 9, 0,
  /* 7383 */ 'o', 'i', 9, 0,
  /* 7387 */ 'v', 'r', 'e', 'p', 'i', 9, 0,
  /* 7394 */ 'a', 's', 'i', 9, 0,
  /* 7399 */ 'a', 'g', 's', 'i', 9, 0,
  /* 7405 */ 'a', 'l', 'g', 's', 'i', 9, 0,
  /* 7412 */ 'c', 'h', 's', 'i', 9, 0,
  /* 7418 */ 'c', 'l', 'f', 'h', 's', 'i', 9, 0,
  /* 7426 */ 'c', 'g', 'h', 's', 'i', 9, 0,
  /* 7433 */ 'c', 'l', 'g', 'h', 's', 'i', 9, 0,
  /* 7441 */ 'c', 'h', 'h', 's', 'i', 9, 0,
  /* 7448 */ 'c', 'l', 'h', 'h', 's', 'i', 9, 0,
  /* 7456 */ 'a', 'l', 's', 'i', 9, 0,
  /* 7462 */ 'm', 'v', 'i', 9, 0,
  /* 7467 */ 'x', 'i', 9, 0,
  /* 7471 */ 'c', 'i', 'j', 9, 0,
  /* 7476 */ 'c', 'g', 'i', 'j', 9, 0,
  /* 7482 */ 'c', 'l', 'g', 'i', 'j', 9, 0,
  /* 7489 */ 'c', 'l', 'i', 'j', 9, 0,
  /* 7495 */ 'c', 'r', 'j', 9, 0,
  /* 7500 */ 'c', 'g', 'r', 'j', 9, 0,
  /* 7506 */ 'c', 'l', 'g', 'r', 'j', 9, 0,
  /* 7513 */ 'c', 'l', 'r', 'j', 9, 0,
  /* 7519 */ 's', 'l', 'a', 'k', 9, 0,
  /* 7525 */ 's', 'r', 'a', 'k', 9, 0,
  /* 7531 */ 'p', 'a', 'c', 'k', 9, 0,
  /* 7537 */ 's', 't', 'c', 'k', 9, 0,
  /* 7543 */ 'm', 'v', 'c', 'k', 9, 0,
  /* 7549 */ 'w', 'f', 'k', 9, 0,
  /* 7554 */ 'a', 'h', 'i', 'k', 9, 0,
  /* 7560 */ 'a', 'g', 'h', 'i', 'k', 9, 0,
  /* 7567 */ 'a', 'l', 'g', 'h', 's', 'i', 'k', 9, 0,
  /* 7576 */ 'a', 'l', 'h', 's', 'i', 'k', 9, 0,
  /* 7584 */ 's', 'l', 'l', 'k', 9, 0,
  /* 7590 */ 's', 'r', 'l', 'k', 9, 0,
  /* 7596 */ 'e', 'd', 'm', 'k', 9, 0,
  /* 7602 */ 'u', 'n', 'p', 'k', 9, 0,
  /* 7608 */ 'v', 'p', 'k', 9, 0,
  /* 7613 */ 'a', 'r', 'k', 9, 0,
  /* 7618 */ 'a', 'g', 'r', 'k', 9, 0,
  /* 7624 */ 'a', 'l', 'g', 'r', 'k', 9, 0,
  /* 7631 */ 's', 'l', 'g', 'r', 'k', 9, 0,
  /* 7638 */ 'n', 'g', 'r', 'k', 9, 0,
  /* 7644 */ 'o', 'g', 'r', 'k', 9, 0,
  /* 7650 */ 's', 'g', 'r', 'k', 9, 0,
  /* 7656 */ 'x', 'g', 'r', 'k', 9, 0,
  /* 7662 */ 'a', 'l', 'r', 'k', 9, 0,
  /* 7668 */ 's', 'l', 'r', 'k', 9, 0,
  /* 7674 */ 'n', 'r', 'k', 9, 0,
  /* 7679 */ 'o', 'r', 'k', 9, 0,
  /* 7684 */ 's', 'r', 'k', 9, 0,
  /* 7689 */ 'x', 'r', 'k', 9, 0,
  /* 7694 */ 'l', 'a', 'a', 'l', 9, 0,
  /* 7700 */ 'b', 'a', 'l', 9, 0,
  /* 7705 */ 'v', 'm', 'a', 'l', 9, 0,
  /* 7711 */ 'c', 'i', 'b', 'l', 9, 0,
  /* 7717 */ 'c', 'g', 'i', 'b', 'l', 9, 0,
  /* 7724 */ 'c', 'l', 'g', 'i', 'b', 'l', 9, 0,
  /* 7732 */ 'c', 'l', 'i', 'b', 'l', 9, 0,
  /* 7739 */ 'c', 'r', 'b', 'l', 9, 0,
  /* 7745 */ 'c', 'g', 'r', 'b', 'l', 9, 0,
  /* 7752 */ 'c', 'l', 'g', 'r', 'b', 'l', 9, 0,
  /* 7760 */ 'c', 'l', 'r', 'b', 'l', 9, 0,
  /* 7767 */ 'v', 'e', 'c', 'l', 9, 0,
  /* 7773 */ 'c', 'l', 'c', 'l', 9, 0,
  /* 7779 */ 'l', 'o', 'c', 'l', 9, 0,
  /* 7785 */ 's', 't', 'o', 'c', 'l', 9, 0,
  /* 7792 */ 'b', 'r', 'c', 'l', 9, 0,
  /* 7798 */ 'm', 'v', 'c', 'l', 9, 0,
  /* 7804 */ 's', 'l', 'd', 'l', 9, 0,
  /* 7810 */ 's', 'r', 'd', 'l', 9, 0,
  /* 7816 */ 'v', 's', 'e', 'l', 9, 0,
  /* 7822 */ 'l', 'o', 'c', 'g', 'l', 9, 0,
  /* 7829 */ 's', 't', 'o', 'c', 'g', 'l', 9, 0,
  /* 7837 */ 'j', 'g', 'l', 9, 0,
  /* 7842 */ 'v', 'a', 'v', 'g', 'l', 9, 0,
  /* 7849 */ 'v', 'c', 'h', 'l', 9, 0,
  /* 7855 */ 'l', 'o', 'c', 'f', 'h', 'l', 9, 0,
  /* 7863 */ 's', 't', 'o', 'c', 'f', 'h', 'l', 9, 0,
  /* 7872 */ 'i', 'i', 'h', 'l', 9, 0,
  /* 7878 */ 'l', 'l', 'i', 'h', 'l', 9, 0,
  /* 7885 */ 'n', 'i', 'h', 'l', 9, 0,
  /* 7891 */ 'o', 'i', 'h', 'l', 9, 0,
  /* 7897 */ 't', 'm', 'h', 'l', 9, 0,
  /* 7903 */ 'l', 'o', 'c', 'h', 'i', 'l', 9, 0,
  /* 7911 */ 'l', 'o', 'c', 'g', 'h', 'i', 'l', 9, 0,
  /* 7920 */ 'l', 'o', 'c', 'h', 'h', 'i', 'l', 9, 0,
  /* 7929 */ 'c', 'i', 'j', 'l', 9, 0,
  /* 7935 */ 'c', 'g', 'i', 'j', 'l', 9, 0,
  /* 7942 */ 'c', 'l', 'g', 'i', 'j', 'l', 9, 0,
  /* 7950 */ 'c', 'l', 'i', 'j', 'l', 9, 0,
  /* 7957 */ 'c', 'r', 'j', 'l', 9, 0,
  /* 7963 */ 'c', 'g', 'r', 'j', 'l', 9, 0,
  /* 7970 */ 'c', 'l', 'g', 'r', 'j', 'l', 9, 0,
  /* 7978 */ 'c', 'l', 'r', 'j', 'l', 9, 0,
  /* 7985 */ 'i', 'i', 'l', 'l', 9, 0,
  /* 7991 */ 'l', 'l', 'i', 'l', 'l', 9, 0,
  /* 7998 */ 'n', 'i', 'l', 'l', 9, 0,
  /* 8004 */ 'o', 'i', 'l', 'l', 9, 0,
  /* 8010 */ 't', 'm', 'l', 'l', 9, 0,
  /* 8016 */ 'v', 'u', 'p', 'l', 'l', 9, 0,
  /* 8023 */ 'v', 'e', 'r', 'l', 'l', 9, 0,
  /* 8030 */ 's', 'l', 'l', 9, 0,
  /* 8035 */ 'v', 'l', 'l', 9, 0,
  /* 8040 */ 'v', 'm', 'l', 9, 0,
  /* 8045 */ 'c', 'i', 'b', 'n', 'l', 9, 0,
  /* 8052 */ 'c', 'g', 'i', 'b', 'n', 'l', 9, 0,
  /* 8060 */ 'c', 'l', 'g', 'i', 'b', 'n', 'l', 9, 0,
  /* 8069 */ 'c', 'l', 'i', 'b', 'n', 'l', 9, 0,
  /* 8077 */ 'c', 'r', 'b', 'n', 'l', 9, 0,
  /* 8084 */ 'c', 'g', 'r', 'b', 'n', 'l', 9, 0,
  /* 8092 */ 'c', 'l', 'g', 'r', 'b', 'n', 'l', 9, 0,
  /* 8101 */ 'c', 'l', 'r', 'b', 'n', 'l', 9, 0,
  /* 8109 */ 'l', 'o', 'c', 'n', 'l', 9, 0,
  /* 8116 */ 's', 't', 'o', 'c', 'n', 'l', 9, 0,
  /* 8124 */ 'l', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 8132 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 8141 */ 'j', 'g', 'n', 'l', 9, 0,
  /* 8147 */ 'l', 'o', 'c', 'f', 'h', 'n', 'l', 9, 0,
  /* 8156 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'l', 9, 0,
  /* 8166 */ 'l', 'o', 'c', 'h', 'i', 'n', 'l', 9, 0,
  /* 8175 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'l', 9, 0,
  /* 8185 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'l', 9, 0,
  /* 8195 */ 'c', 'i', 'j', 'n', 'l', 9, 0,
  /* 8202 */ 'c', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 8210 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 8219 */ 'c', 'l', 'i', 'j', 'n', 'l', 9, 0,
  /* 8227 */ 'c', 'r', 'j', 'n', 'l', 9, 0,
  /* 8234 */ 'c', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 8242 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 8251 */ 'c', 'l', 'r', 'j', 'n', 'l', 9, 0,
  /* 8259 */ 'v', 'm', 'n', 'l', 9, 0,
  /* 8265 */ 'l', 'o', 'c', 'r', 'n', 'l', 9, 0,
  /* 8273 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 9, 0,
  /* 8282 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'l', 9, 0,
  /* 8292 */ 'c', 'l', 'g', 't', 'n', 'l', 9, 0,
  /* 8300 */ 'c', 'i', 't', 'n', 'l', 9, 0,
  /* 8307 */ 'c', 'l', 'f', 'i', 't', 'n', 'l', 9, 0,
  /* 8316 */ 'c', 'g', 'i', 't', 'n', 'l', 9, 0,
  /* 8324 */ 'c', 'l', 'g', 'i', 't', 'n', 'l', 9, 0,
  /* 8333 */ 'c', 'l', 't', 'n', 'l', 9, 0,
  /* 8340 */ 'c', 'r', 't', 'n', 'l', 9, 0,
  /* 8347 */ 'c', 'g', 'r', 't', 'n', 'l', 9, 0,
  /* 8355 */ 'c', 'l', 'g', 'r', 't', 'n', 'l', 9, 0,
  /* 8364 */ 'c', 'l', 'r', 't', 'n', 'l', 9, 0,
  /* 8372 */ 'v', 'u', 'p', 'l', 9, 0,
  /* 8378 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 8384 */ 'l', 'o', 'c', 'r', 'l', 9, 0,
  /* 8391 */ 'p', 'f', 'd', 'r', 'l', 9, 0,
  /* 8398 */ 'c', 'g', 'f', 'r', 'l', 9, 0,
  /* 8405 */ 'c', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 8413 */ 'l', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 8421 */ 'l', 'o', 'c', 'g', 'r', 'l', 9, 0,
  /* 8429 */ 'c', 'l', 'g', 'r', 'l', 9, 0,
  /* 8436 */ 's', 't', 'g', 'r', 'l', 9, 0,
  /* 8443 */ 'c', 'h', 'r', 'l', 9, 0,
  /* 8449 */ 'l', 'o', 'c', 'f', 'h', 'r', 'l', 9, 0,
  /* 8458 */ 'c', 'g', 'h', 'r', 'l', 9, 0,
  /* 8465 */ 'c', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 8473 */ 'l', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 8481 */ 'c', 'l', 'h', 'r', 'l', 9, 0,
  /* 8488 */ 'l', 'l', 'h', 'r', 'l', 9, 0,
  /* 8495 */ 's', 't', 'h', 'r', 'l', 9, 0,
  /* 8502 */ 'c', 'l', 'r', 'l', 9, 0,
  /* 8508 */ 'v', 'm', 'r', 'l', 9, 0,
  /* 8514 */ 'v', 'e', 's', 'r', 'l', 9, 0,
  /* 8521 */ 'v', 's', 'r', 'l', 9, 0,
  /* 8527 */ 's', 't', 'r', 'l', 9, 0,
  /* 8533 */ 'e', 'x', 'r', 'l', 9, 0,
  /* 8539 */ 'b', 'r', 'a', 's', 'l', 9, 0,
  /* 8546 */ 'v', 'e', 's', 'l', 9, 0,
  /* 8552 */ 'v', 's', 'l', 9, 0,
  /* 8557 */ 'c', 'l', 'g', 't', 'l', 9, 0,
  /* 8564 */ 'c', 'i', 't', 'l', 9, 0,
  /* 8570 */ 'c', 'l', 'f', 'i', 't', 'l', 9, 0,
  /* 8578 */ 'c', 'g', 'i', 't', 'l', 9, 0,
  /* 8585 */ 'c', 'l', 'g', 'i', 't', 'l', 9, 0,
  /* 8593 */ 'c', 'l', 't', 'l', 9, 0,
  /* 8599 */ 'c', 'r', 't', 'l', 9, 0,
  /* 8605 */ 'c', 'g', 'r', 't', 'l', 9, 0,
  /* 8612 */ 'c', 'l', 'g', 'r', 't', 'l', 9, 0,
  /* 8620 */ 'c', 'l', 'r', 't', 'l', 9, 0,
  /* 8627 */ 'v', 's', 't', 'l', 9, 0,
  /* 8633 */ 'v', 'l', 9, 0,
  /* 8637 */ 'v', 'm', 'x', 'l', 9, 0,
  /* 8643 */ 'm', 'a', 'y', 'l', 9, 0,
  /* 8649 */ 'm', 'y', 'l', 9, 0,
  /* 8654 */ 'l', 'a', 'm', 9, 0,
  /* 8659 */ 's', 't', 'a', 'm', 9, 0,
  /* 8665 */ 'v', 'g', 'b', 'm', 9, 0,
  /* 8671 */ 'i', 'c', 'm', 9, 0,
  /* 8676 */ 'l', 'o', 'c', 'm', 9, 0,
  /* 8682 */ 's', 't', 'o', 'c', 'm', 9, 0,
  /* 8689 */ 's', 't', 'c', 'm', 9, 0,
  /* 8695 */ 'v', 'g', 'f', 'm', 9, 0,
  /* 8701 */ 'v', 'f', 'm', 9, 0,
  /* 8706 */ 'l', 'o', 'c', 'g', 'm', 9, 0,
  /* 8713 */ 's', 't', 'o', 'c', 'g', 'm', 9, 0,
  /* 8721 */ 'j', 'g', 'm', 9, 0,
  /* 8726 */ 'v', 'g', 'm', 9, 0,
  /* 8731 */ 'l', 'o', 'c', 'f', 'h', 'm', 9, 0,
  /* 8739 */ 's', 't', 'o', 'c', 'f', 'h', 'm', 9, 0,
  /* 8748 */ 'l', 'o', 'c', 'h', 'i', 'm', 9, 0,
  /* 8756 */ 'l', 'o', 'c', 'g', 'h', 'i', 'm', 9, 0,
  /* 8765 */ 'l', 'o', 'c', 'h', 'h', 'i', 'm', 9, 0,
  /* 8774 */ 'v', 'e', 'r', 'i', 'm', 9, 0,
  /* 8781 */ 'j', 'm', 9, 0,
  /* 8785 */ 'k', 'm', 9, 0,
  /* 8789 */ 'c', 'l', 'm', 9, 0,
  /* 8794 */ 'v', 'l', 'm', 9, 0,
  /* 8799 */ 'b', 'n', 'm', 9, 0,
  /* 8804 */ 'l', 'o', 'c', 'n', 'm', 9, 0,
  /* 8811 */ 's', 't', 'o', 'c', 'n', 'm', 9, 0,
  /* 8819 */ 'l', 'o', 'c', 'g', 'n', 'm', 9, 0,
  /* 8827 */ 's', 't', 'o', 'c', 'g', 'n', 'm', 9, 0,
  /* 8836 */ 'j', 'g', 'n', 'm', 9, 0,
  /* 8842 */ 'l', 'o', 'c', 'f', 'h', 'n', 'm', 9, 0,
  /* 8851 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'm', 9, 0,
  /* 8861 */ 'l', 'o', 'c', 'h', 'i', 'n', 'm', 9, 0,
  /* 8870 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'm', 9, 0,
  /* 8880 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'm', 9, 0,
  /* 8890 */ 'j', 'n', 'm', 9, 0,
  /* 8895 */ 'l', 'o', 'c', 'r', 'n', 'm', 9, 0,
  /* 8903 */ 'l', 'o', 'c', 'g', 'r', 'n', 'm', 9, 0,
  /* 8912 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'm', 9, 0,
  /* 8922 */ 's', 'r', 'n', 'm', 9, 0,
  /* 8928 */ 'i', 'p', 'm', 9, 0,
  /* 8933 */ 's', 'p', 'm', 9, 0,
  /* 8938 */ 'l', 'o', 'c', 'r', 'm', 9, 0,
  /* 8945 */ 'v', 'p', 'e', 'r', 'm', 9, 0,
  /* 8952 */ 'l', 'o', 'c', 'g', 'r', 'm', 9, 0,
  /* 8960 */ 'l', 'o', 'c', 'f', 'h', 'r', 'm', 9, 0,
  /* 8969 */ 'b', 's', 'm', 9, 0,
  /* 8974 */ 'v', 'c', 'k', 's', 'm', 9, 0,
  /* 8981 */ 'b', 'a', 's', 's', 'm', 9, 0,
  /* 8988 */ 'v', 's', 't', 'm', 9, 0,
  /* 8994 */ 'v', 't', 'm', 9, 0,
  /* 8999 */ 'v', 's', 'u', 'm', 9, 0,
  /* 9005 */ 'l', 'a', 'n', 9, 0,
  /* 9010 */ 'r', 'i', 's', 'b', 'g', 'n', 9, 0,
  /* 9018 */ 'm', 'v', 'c', 'i', 'n', 9, 0,
  /* 9025 */ 't', 'b', 'e', 'g', 'i', 'n', 9, 0,
  /* 9033 */ 'v', 'm', 'n', 9, 0,
  /* 9038 */ 'm', 'v', 'n', 9, 0,
  /* 9043 */ 'l', 'a', 'o', 9, 0,
  /* 9048 */ 'v', 'm', 'a', 'o', 9, 0,
  /* 9054 */ 'b', 'o', 9, 0,
  /* 9058 */ 'l', 'o', 'c', 'o', 9, 0,
  /* 9064 */ 's', 't', 'o', 'c', 'o', 9, 0,
  /* 9071 */ 'l', 'o', 'c', 'g', 'o', 9, 0,
  /* 9078 */ 's', 't', 'o', 'c', 'g', 'o', 9, 0,
  /* 9086 */ 'j', 'g', 'o', 9, 0,
  /* 9091 */ 'l', 'o', 'c', 'f', 'h', 'o', 9, 0,
  /* 9099 */ 's', 't', 'o', 'c', 'f', 'h', 'o', 9, 0,
  /* 9108 */ 'l', 'o', 'c', 'h', 'i', 'o', 9, 0,
  /* 9116 */ 'l', 'o', 'c', 'g', 'h', 'i', 'o', 9, 0,
  /* 9125 */ 'l', 'o', 'c', 'h', 'h', 'i', 'o', 9, 0,
  /* 9134 */ 'j', 'o', 9, 0,
  /* 9138 */ 'v', 'm', 'a', 'l', 'o', 9, 0,
  /* 9145 */ 'v', 'm', 'l', 'o', 9, 0,
  /* 9151 */ 'p', 'l', 'o', 9, 0,
  /* 9156 */ 'k', 'm', 'o', 9, 0,
  /* 9161 */ 'v', 'm', 'o', 9, 0,
  /* 9166 */ 'b', 'n', 'o', 9, 0,
  /* 9171 */ 'l', 'o', 'c', 'n', 'o', 9, 0,
  /* 9178 */ 's', 't', 'o', 'c', 'n', 'o', 9, 0,
  /* 9186 */ 'l', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 9194 */ 's', 't', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 9203 */ 'j', 'g', 'n', 'o', 9, 0,
  /* 9209 */ 'l', 'o', 'c', 'f', 'h', 'n', 'o', 9, 0,
  /* 9218 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'o', 9, 0,
  /* 9228 */ 'l', 'o', 'c', 'h', 'i', 'n', 'o', 9, 0,
  /* 9237 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'o', 9, 0,
  /* 9247 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'o', 9, 0,
  /* 9257 */ 'j', 'n', 'o', 9, 0,
  /* 9262 */ 'p', 'p', 'n', 'o', 9, 0,
  /* 9268 */ 'l', 'o', 'c', 'r', 'n', 'o', 9, 0,
  /* 9276 */ 'l', 'o', 'c', 'g', 'r', 'n', 'o', 9, 0,
  /* 9285 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'o', 9, 0,
  /* 9295 */ 'v', 'n', 'o', 9, 0,
  /* 9300 */ 't', 'r', 'o', 'o', 9, 0,
  /* 9306 */ 'l', 'o', 'c', 'r', 'o', 9, 0,
  /* 9313 */ 'v', 'z', 'e', 'r', 'o', 9, 0,
  /* 9320 */ 'l', 'o', 'c', 'g', 'r', 'o', 9, 0,
  /* 9328 */ 'l', 'o', 'c', 'f', 'h', 'r', 'o', 9, 0,
  /* 9337 */ 'v', 'f', 'p', 's', 'o', 9, 0,
  /* 9344 */ 't', 'r', 't', 'o', 9, 0,
  /* 9350 */ 'm', 'v', 'o', 9, 0,
  /* 9355 */ 'z', 'a', 'p', 9, 0,
  /* 9360 */ 'b', 'p', 9, 0,
  /* 9364 */ 'l', 'o', 'c', 'p', 9, 0,
  /* 9370 */ 's', 't', 'o', 'c', 'p', 9, 0,
  /* 9377 */ 'd', 'p', 9, 0,
  /* 9381 */ 'v', 'l', 'r', 'e', 'p', 9, 0,
  /* 9388 */ 'v', 'r', 'e', 'p', 9, 0,
  /* 9394 */ 'l', 'o', 'c', 'g', 'p', 9, 0,
  /* 9401 */ 's', 't', 'o', 'c', 'g', 'p', 9, 0,
  /* 9409 */ 'j', 'g', 'p', 9, 0,
  /* 9414 */ 'v', 'l', 'v', 'g', 'p', 9, 0,
  /* 9421 */ 'l', 'o', 'c', 'f', 'h', 'p', 9, 0,
  /* 9429 */ 's', 't', 'o', 'c', 'f', 'h', 'p', 9, 0,
  /* 9438 */ 'l', 'o', 'c', 'h', 'i', 'p', 9, 0,
  /* 9446 */ 'l', 'o', 'c', 'g', 'h', 'i', 'p', 9, 0,
  /* 9455 */ 'l', 'o', 'c', 'h', 'h', 'i', 'p', 9, 0,
  /* 9464 */ 'j', 'p', 9, 0,
  /* 9468 */ 'v', 'l', 'p', 9, 0,
  /* 9473 */ 'm', 'p', 9, 0,
  /* 9477 */ 'b', 'n', 'p', 9, 0,
  /* 9482 */ 'l', 'o', 'c', 'n', 'p', 9, 0,
  /* 9489 */ 's', 't', 'o', 'c', 'n', 'p', 9, 0,
  /* 9497 */ 'l', 'o', 'c', 'g', 'n', 'p', 9, 0,
  /* 9505 */ 's', 't', 'o', 'c', 'g', 'n', 'p', 9, 0,
  /* 9514 */ 'j', 'g', 'n', 'p', 9, 0,
  /* 9520 */ 'l', 'o', 'c', 'f', 'h', 'n', 'p', 9, 0,
  /* 9529 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'p', 9, 0,
  /* 9539 */ 'l', 'o', 'c', 'h', 'i', 'n', 'p', 9, 0,
  /* 9548 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'p', 9, 0,
  /* 9558 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'p', 9, 0,
  /* 9568 */ 'j', 'n', 'p', 9, 0,
  /* 9573 */ 'l', 'o', 'c', 'r', 'n', 'p', 9, 0,
  /* 9581 */ 'l', 'o', 'c', 'g', 'r', 'n', 'p', 9, 0,
  /* 9590 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'p', 9, 0,
  /* 9600 */ 'b', 'p', 'p', 9, 0,
  /* 9605 */ 'l', 'o', 'c', 'r', 'p', 9, 0,
  /* 9612 */ 'l', 'o', 'c', 'g', 'r', 'p', 9, 0,
  /* 9620 */ 'l', 'o', 'c', 'f', 'h', 'r', 'p', 9, 0,
  /* 9629 */ 'b', 'p', 'r', 'p', 9, 0,
  /* 9635 */ 's', 'r', 'p', 9, 0,
  /* 9640 */ 's', 'p', 9, 0,
  /* 9644 */ 't', 'p', 9, 0,
  /* 9648 */ 'v', 'a', 'q', 9, 0,
  /* 9653 */ 'v', 'a', 'c', 'q', 9, 0,
  /* 9659 */ 'v', 'a', 'c', 'c', 'q', 9, 0,
  /* 9666 */ 'v', 'a', 'c', 'c', 'c', 'q', 9, 0,
  /* 9674 */ 'v', 'c', 'e', 'q', 9, 0,
  /* 9680 */ 'v', 's', 'b', 'c', 'b', 'i', 'q', 9, 0,
  /* 9689 */ 'v', 's', 'c', 'b', 'i', 'q', 9, 0,
  /* 9697 */ 'v', 's', 'b', 'i', 'q', 9, 0,
  /* 9704 */ 'v', 's', 'u', 'm', 'q', 9, 0,
  /* 9711 */ 'l', 'p', 'q', 9, 0,
  /* 9716 */ 's', 't', 'p', 'q', 9, 0,
  /* 9722 */ 'v', 'f', 's', 'q', 9, 0,
  /* 9728 */ 'v', 's', 'q', 9, 0,
  /* 9733 */ 'e', 'a', 'r', 9, 0,
  /* 9738 */ 's', 'a', 'r', 9, 0,
  /* 9743 */ 'm', 'a', 'd', 'b', 'r', 9, 0,
  /* 9750 */ 'l', 'c', 'd', 'b', 'r', 9, 0,
  /* 9757 */ 'd', 'd', 'b', 'r', 9, 0,
  /* 9763 */ 'l', 'e', 'd', 'b', 'r', 9, 0,
  /* 9770 */ 'c', 'f', 'd', 'b', 'r', 9, 0,
  /* 9777 */ 'c', 'l', 'f', 'd', 'b', 'r', 9, 0,
  /* 9785 */ 'c', 'g', 'd', 'b', 'r', 9, 0,
  /* 9792 */ 'c', 'l', 'g', 'd', 'b', 'r', 9, 0,
  /* 9800 */ 'd', 'i', 'd', 'b', 'r', 9, 0,
  /* 9807 */ 'f', 'i', 'd', 'b', 'r', 9, 0,
  /* 9814 */ 'k', 'd', 'b', 'r', 9, 0,
  /* 9820 */ 'm', 'd', 'b', 'r', 9, 0,
  /* 9826 */ 'l', 'n', 'd', 'b', 'r', 9, 0,
  /* 9833 */ 'l', 'p', 'd', 'b', 'r', 9, 0,
  /* 9840 */ 's', 'q', 'd', 'b', 'r', 9, 0,
  /* 9847 */ 'm', 's', 'd', 'b', 'r', 9, 0,
  /* 9854 */ 'l', 't', 'd', 'b', 'r', 9, 0,
  /* 9861 */ 'l', 'x', 'd', 'b', 'r', 9, 0,
  /* 9868 */ 'm', 'x', 'd', 'b', 'r', 9, 0,
  /* 9875 */ 'm', 'a', 'e', 'b', 'r', 9, 0,
  /* 9882 */ 'l', 'c', 'e', 'b', 'r', 9, 0,
  /* 9889 */ 'l', 'd', 'e', 'b', 'r', 9, 0,
  /* 9896 */ 'm', 'd', 'e', 'b', 'r', 9, 0,
  /* 9903 */ 'm', 'e', 'e', 'b', 'r', 9, 0,
  /* 9910 */ 'c', 'f', 'e', 'b', 'r', 9, 0,
  /* 9917 */ 'c', 'l', 'f', 'e', 'b', 'r', 9, 0,
  /* 9925 */ 'c', 'g', 'e', 'b', 'r', 9, 0,
  /* 9932 */ 'c', 'l', 'g', 'e', 'b', 'r', 9, 0,
  /* 9940 */ 'd', 'i', 'e', 'b', 'r', 9, 0,
  /* 9947 */ 'f', 'i', 'e', 'b', 'r', 9, 0,
  /* 9954 */ 'k', 'e', 'b', 'r', 9, 0,
  /* 9960 */ 'l', 'n', 'e', 'b', 'r', 9, 0,
  /* 9967 */ 'l', 'p', 'e', 'b', 'r', 9, 0,
  /* 9974 */ 's', 'q', 'e', 'b', 'r', 9, 0,
  /* 9981 */ 'm', 's', 'e', 'b', 'r', 9, 0,
  /* 9988 */ 'l', 't', 'e', 'b', 'r', 9, 0,
  /* 9995 */ 'l', 'x', 'e', 'b', 'r', 9, 0,
  /* 10002 */ 'c', 'd', 'f', 'b', 'r', 9, 0,
  /* 10009 */ 'c', 'e', 'f', 'b', 'r', 9, 0,
  /* 10016 */ 'c', 'd', 'l', 'f', 'b', 'r', 9, 0,
  /* 10024 */ 'c', 'e', 'l', 'f', 'b', 'r', 9, 0,
  /* 10032 */ 'c', 'x', 'l', 'f', 'b', 'r', 9, 0,
  /* 10040 */ 'c', 'x', 'f', 'b', 'r', 9, 0,
  /* 10047 */ 'c', 'd', 'g', 'b', 'r', 9, 0,
  /* 10054 */ 'c', 'e', 'g', 'b', 'r', 9, 0,
  /* 10061 */ 'c', 'd', 'l', 'g', 'b', 'r', 9, 0,
  /* 10069 */ 'c', 'e', 'l', 'g', 'b', 'r', 9, 0,
  /* 10077 */ 'c', 'x', 'l', 'g', 'b', 'r', 9, 0,
  /* 10085 */ 'c', 'x', 'g', 'b', 'r', 9, 0,
  /* 10092 */ 's', 'l', 'b', 'r', 9, 0,
  /* 10098 */ 'a', 'x', 'b', 'r', 9, 0,
  /* 10104 */ 'l', 'c', 'x', 'b', 'r', 9, 0,
  /* 10111 */ 'l', 'd', 'x', 'b', 'r', 9, 0,
  /* 10118 */ 'l', 'e', 'x', 'b', 'r', 9, 0,
  /* 10125 */ 'c', 'f', 'x', 'b', 'r', 9, 0,
  /* 10132 */ 'c', 'l', 'f', 'x', 'b', 'r', 9, 0,
  /* 10140 */ 'c', 'g', 'x', 'b', 'r', 9, 0,
  /* 10147 */ 'c', 'l', 'g', 'x', 'b', 'r', 9, 0,
  /* 10155 */ 'f', 'i', 'x', 'b', 'r', 9, 0,
  /* 10162 */ 'k', 'x', 'b', 'r', 9, 0,
  /* 10168 */ 'm', 'x', 'b', 'r', 9, 0,
  /* 10174 */ 'l', 'n', 'x', 'b', 'r', 9, 0,
  /* 10181 */ 'l', 'p', 'x', 'b', 'r', 9, 0,
  /* 10188 */ 's', 'q', 'x', 'b', 'r', 9, 0,
  /* 10195 */ 's', 'x', 'b', 'r', 9, 0,
  /* 10201 */ 'l', 't', 'x', 'b', 'r', 9, 0,
  /* 10208 */ 'b', 'c', 'r', 9, 0,
  /* 10213 */ 'l', 'l', 'g', 'c', 'r', 9, 0,
  /* 10220 */ 'a', 'l', 'c', 'r', 9, 0,
  /* 10226 */ 'l', 'l', 'c', 'r', 9, 0,
  /* 10232 */ 'l', 'o', 'c', 'r', 9, 0,
  /* 10238 */ 'm', 'a', 'd', 'r', 9, 0,
  /* 10244 */ 't', 'b', 'd', 'r', 9, 0,
  /* 10250 */ 'l', 'c', 'd', 'r', 9, 0,
  /* 10256 */ 'd', 'd', 'r', 9, 0,
  /* 10261 */ 't', 'b', 'e', 'd', 'r', 9, 0,
  /* 10268 */ 'l', 'e', 'd', 'r', 9, 0,
  /* 10274 */ 'c', 'f', 'd', 'r', 9, 0,
  /* 10280 */ 'c', 'g', 'd', 'r', 9, 0,
  /* 10286 */ 'l', 'g', 'd', 'r', 9, 0,
  /* 10292 */ 't', 'h', 'd', 'r', 9, 0,
  /* 10298 */ 'f', 'i', 'd', 'r', 9, 0,
  /* 10304 */ 'l', 'd', 'r', 9, 0,
  /* 10309 */ 'm', 'd', 'r', 9, 0,
  /* 10314 */ 'l', 'n', 'd', 'r', 9, 0,
  /* 10320 */ 'l', 'p', 'd', 'r', 9, 0,
  /* 10326 */ 's', 'q', 'd', 'r', 9, 0,
  /* 10332 */ 'l', 'r', 'd', 'r', 9, 0,
  /* 10338 */ 'm', 's', 'd', 'r', 9, 0,
  /* 10344 */ 'c', 'p', 's', 'd', 'r', 9, 0,
  /* 10351 */ 'l', 't', 'd', 'r', 9, 0,
  /* 10357 */ 'l', 'x', 'd', 'r', 9, 0,
  /* 10363 */ 'm', 'x', 'd', 'r', 9, 0,
  /* 10369 */ 'l', 'z', 'd', 'r', 9, 0,
  /* 10375 */ 'm', 'a', 'e', 'r', 9, 0,
  /* 10381 */ 'b', 'e', 'r', 9, 0,
  /* 10386 */ 'l', 'c', 'e', 'r', 9, 0,
  /* 10392 */ 't', 'h', 'd', 'e', 'r', 9, 0,
  /* 10399 */ 'l', 'd', 'e', 'r', 9, 0,
  /* 10405 */ 'm', 'd', 'e', 'r', 9, 0,
  /* 10411 */ 'm', 'e', 'e', 'r', 9, 0,
  /* 10417 */ 'c', 'f', 'e', 'r', 9, 0,
  /* 10423 */ 'c', 'g', 'e', 'r', 9, 0,
  /* 10429 */ 'b', 'h', 'e', 'r', 9, 0,
  /* 10435 */ 'b', 'n', 'h', 'e', 'r', 9, 0,
  /* 10442 */ 'f', 'i', 'e', 'r', 9, 0,
  /* 10448 */ 'b', 'l', 'e', 'r', 9, 0,
  /* 10454 */ 'b', 'n', 'l', 'e', 'r', 9, 0,
  /* 10461 */ 'm', 'e', 'r', 9, 0,
  /* 10466 */ 'b', 'n', 'e', 'r', 9, 0,
  /* 10472 */ 'l', 'n', 'e', 'r', 9, 0,
  /* 10478 */ 'l', 'p', 'e', 'r', 9, 0,
  /* 10484 */ 's', 'q', 'e', 'r', 9, 0,
  /* 10490 */ 'l', 'r', 'e', 'r', 9, 0,
  /* 10496 */ 'm', 's', 'e', 'r', 9, 0,
  /* 10502 */ 'l', 't', 'e', 'r', 9, 0,
  /* 10508 */ 'l', 'x', 'e', 'r', 9, 0,
  /* 10514 */ 'l', 'z', 'e', 'r', 9, 0,
  /* 10520 */ 'l', 'c', 'd', 'f', 'r', 9, 0,
  /* 10527 */ 'l', 'n', 'd', 'f', 'r', 9, 0,
  /* 10534 */ 'l', 'p', 'd', 'f', 'r', 9, 0,
  /* 10541 */ 'c', 'e', 'f', 'r', 9, 0,
  /* 10547 */ 'a', 'g', 'f', 'r', 9, 0,
  /* 10553 */ 'l', 'c', 'g', 'f', 'r', 9, 0,
  /* 10560 */ 'a', 'l', 'g', 'f', 'r', 9, 0,
  /* 10567 */ 'c', 'l', 'g', 'f', 'r', 9, 0,
  /* 10574 */ 'l', 'l', 'g', 'f', 'r', 9, 0,
  /* 10581 */ 's', 'l', 'g', 'f', 'r', 9, 0,
  /* 10588 */ 'l', 'n', 'g', 'f', 'r', 9, 0,
  /* 10595 */ 'l', 'p', 'g', 'f', 'r', 9, 0,
  /* 10602 */ 'd', 's', 'g', 'f', 'r', 9, 0,
  /* 10609 */ 'm', 's', 'g', 'f', 'r', 9, 0,
  /* 10616 */ 'l', 't', 'g', 'f', 'r', 9, 0,
  /* 10623 */ 'c', 'x', 'f', 'r', 9, 0,
  /* 10629 */ 'a', 'g', 'r', 9, 0,
  /* 10634 */ 's', 'l', 'b', 'g', 'r', 9, 0,
  /* 10641 */ 'a', 'l', 'c', 'g', 'r', 9, 0,
  /* 10648 */ 'l', 'o', 'c', 'g', 'r', 9, 0,
  /* 10655 */ 'c', 'd', 'g', 'r', 9, 0,
  /* 10661 */ 'l', 'd', 'g', 'r', 9, 0,
  /* 10667 */ 'c', 'e', 'g', 'r', 9, 0,
  /* 10673 */ 'a', 'l', 'g', 'r', 9, 0,
  /* 10679 */ 'c', 'l', 'g', 'r', 9, 0,
  /* 10685 */ 'd', 'l', 'g', 'r', 9, 0,
  /* 10691 */ 'm', 'l', 'g', 'r', 9, 0,
  /* 10697 */ 's', 'l', 'g', 'r', 9, 0,
  /* 10703 */ 'l', 'n', 'g', 'r', 9, 0,
  /* 10709 */ 'f', 'l', 'o', 'g', 'r', 9, 0,
  /* 10716 */ 'l', 'p', 'g', 'r', 9, 0,
  /* 10722 */ 'd', 's', 'g', 'r', 9, 0,
  /* 10728 */ 'm', 's', 'g', 'r', 9, 0,
  /* 10734 */ 'b', 'c', 't', 'g', 'r', 9, 0,
  /* 10741 */ 'l', 't', 'g', 'r', 9, 0,
  /* 10747 */ 'l', 'r', 'v', 'g', 'r', 9, 0,
  /* 10754 */ 'c', 'x', 'g', 'r', 9, 0,
  /* 10760 */ 'b', 'h', 'r', 9, 0,
  /* 10765 */ 'l', 'o', 'c', 'f', 'h', 'r', 9, 0,
  /* 10773 */ 'l', 'l', 'g', 'h', 'r', 9, 0,
  /* 10780 */ 'b', 'l', 'h', 'r', 9, 0,
  /* 10786 */ 'l', 'l', 'h', 'r', 9, 0,
  /* 10792 */ 'b', 'n', 'l', 'h', 'r', 9, 0,
  /* 10799 */ 'b', 'n', 'h', 'r', 9, 0,
  /* 10805 */ 'm', 'a', 'y', 'h', 'r', 9, 0,
  /* 10812 */ 'm', 'y', 'h', 'r', 9, 0,
  /* 10818 */ 'b', 'a', 'l', 'r', 9, 0,
  /* 10824 */ 'b', 'l', 'r', 9, 0,
  /* 10829 */ 'c', 'l', 'r', 9, 0,
  /* 10834 */ 'd', 'l', 'r', 9, 0,
  /* 10839 */ 'm', 'l', 'r', 9, 0,
  /* 10844 */ 'b', 'n', 'l', 'r', 9, 0,
  /* 10850 */ 's', 'l', 'r', 9, 0,
  /* 10855 */ 'v', 'l', 'r', 9, 0,
  /* 10860 */ 'm', 'a', 'y', 'l', 'r', 9, 0,
  /* 10867 */ 'm', 'y', 'l', 'r', 9, 0,
  /* 10873 */ 'b', 'm', 'r', 9, 0,
  /* 10878 */ 'b', 'n', 'm', 'r', 9, 0,
  /* 10884 */ 'l', 'n', 'r', 9, 0,
  /* 10889 */ 'b', 'o', 'r', 9, 0,
  /* 10894 */ 'b', 'n', 'o', 'r', 9, 0,
  /* 10900 */ 'b', 'p', 'r', 9, 0,
  /* 10905 */ 'l', 'p', 'r', 9, 0,
  /* 10910 */ 'b', 'n', 'p', 'r', 9, 0,
  /* 10916 */ 'b', 'a', 's', 'r', 9, 0,
  /* 10922 */ 's', 'f', 'a', 's', 'r', 9, 0,
  /* 10929 */ 'm', 's', 'r', 9, 0,
  /* 10934 */ 'b', 'c', 't', 'r', 9, 0,
  /* 10940 */ 'k', 'm', 'c', 't', 'r', 9, 0,
  /* 10947 */ 'q', 'a', 'd', 't', 'r', 9, 0,
  /* 10954 */ 'c', 'd', 't', 'r', 9, 0,
  /* 10960 */ 'd', 'd', 't', 'r', 9, 0,
  /* 10966 */ 'c', 'e', 'd', 't', 'r', 9, 0,
  /* 10973 */ 'e', 'e', 'd', 't', 'r', 9, 0,
  /* 10980 */ 'i', 'e', 'd', 't', 'r', 9, 0,
  /* 10987 */ 'l', 'e', 'd', 't', 'r', 9, 0,
  /* 10994 */ 'c', 'f', 'd', 't', 'r', 9, 0,
  /* 11001 */ 'c', 'l', 'f', 'd', 't', 'r', 9, 0,
  /* 11009 */ 'c', 'g', 'd', 't', 'r', 9, 0,
  /* 11016 */ 'c', 'l', 'g', 'd', 't', 'r', 9, 0,
  /* 11024 */ 'f', 'i', 'd', 't', 'r', 9, 0,
  /* 11031 */ 'k', 'd', 't', 'r', 9, 0,
  /* 11037 */ 'm', 'd', 't', 'r', 9, 0,
  /* 11043 */ 'r', 'r', 'd', 't', 'r', 9, 0,
  /* 11050 */ 'c', 's', 'd', 't', 'r', 9, 0,
  /* 11057 */ 'e', 's', 'd', 't', 'r', 9, 0,
  /* 11064 */ 'l', 't', 'd', 't', 'r', 9, 0,
  /* 11071 */ 'c', 'u', 'd', 't', 'r', 9, 0,
  /* 11078 */ 'l', 'x', 'd', 't', 'r', 9, 0,
  /* 11085 */ 'l', 'd', 'e', 't', 'r', 9, 0,
  /* 11092 */ 'c', 'd', 'f', 't', 'r', 9, 0,
  /* 11099 */ 'c', 'd', 'l', 'f', 't', 'r', 9, 0,
  /* 11107 */ 'c', 'x', 'l', 'f', 't', 'r', 9, 0,
  /* 11115 */ 'c', 'x', 'f', 't', 'r', 9, 0,
  /* 11122 */ 'c', 'd', 'g', 't', 'r', 9, 0,
  /* 11129 */ 'c', 'd', 'l', 'g', 't', 'r', 9, 0,
  /* 11137 */ 'l', 'l', 'g', 't', 'r', 9, 0,
  /* 11144 */ 'c', 'x', 'l', 'g', 't', 'r', 9, 0,
  /* 11152 */ 'c', 'x', 'g', 't', 'r', 9, 0,
  /* 11159 */ 'l', 't', 'r', 9, 0,
  /* 11164 */ 't', 'r', 't', 'r', 9, 0,
  /* 11170 */ 'c', 'd', 's', 't', 'r', 9, 0,
  /* 11177 */ 'v', 'i', 's', 't', 'r', 9, 0,
  /* 11184 */ 'c', 'x', 's', 't', 'r', 9, 0,
  /* 11191 */ 'c', 'd', 'u', 't', 'r', 9, 0,
  /* 11198 */ 'c', 'x', 'u', 't', 'r', 9, 0,
  /* 11205 */ 'q', 'a', 'x', 't', 'r', 9, 0,
  /* 11212 */ 'c', 'x', 't', 'r', 9, 0,
  /* 11218 */ 'l', 'd', 'x', 't', 'r', 9, 0,
  /* 11225 */ 'c', 'e', 'x', 't', 'r', 9, 0,
  /* 11232 */ 'e', 'e', 'x', 't', 'r', 9, 0,
  /* 11239 */ 'i', 'e', 'x', 't', 'r', 9, 0,
  /* 11246 */ 'c', 'f', 'x', 't', 'r', 9, 0,
  /* 11253 */ 'c', 'l', 'f', 'x', 't', 'r', 9, 0,
  /* 11261 */ 'c', 'g', 'x', 't', 'r', 9, 0,
  /* 11268 */ 'c', 'l', 'g', 'x', 't', 'r', 9, 0,
  /* 11276 */ 'f', 'i', 'x', 't', 'r', 9, 0,
  /* 11283 */ 'k', 'x', 't', 'r', 9, 0,
  /* 11289 */ 'm', 'x', 't', 'r', 9, 0,
  /* 11295 */ 'r', 'r', 'x', 't', 'r', 9, 0,
  /* 11302 */ 'c', 's', 'x', 't', 'r', 9, 0,
  /* 11309 */ 'e', 's', 'x', 't', 'r', 9, 0,
  /* 11316 */ 'l', 't', 'x', 't', 'r', 9, 0,
  /* 11323 */ 'c', 'u', 'x', 't', 'r', 9, 0,
  /* 11330 */ 'a', 'u', 'r', 9, 0,
  /* 11335 */ 's', 'u', 'r', 9, 0,
  /* 11340 */ 'l', 'r', 'v', 'r', 9, 0,
  /* 11346 */ 'a', 'w', 'r', 9, 0,
  /* 11351 */ 's', 'w', 'r', 9, 0,
  /* 11356 */ 'a', 'x', 'r', 9, 0,
  /* 11361 */ 'l', 'c', 'x', 'r', 9, 0,
  /* 11367 */ 'l', 'd', 'x', 'r', 9, 0,
  /* 11373 */ 'l', 'e', 'x', 'r', 9, 0,
  /* 11379 */ 'c', 'f', 'x', 'r', 9, 0,
  /* 11385 */ 'c', 'g', 'x', 'r', 9, 0,
  /* 11391 */ 'f', 'i', 'x', 'r', 9, 0,
  /* 11397 */ 'l', 'x', 'r', 9, 0,
  /* 11402 */ 'm', 'x', 'r', 9, 0,
  /* 11407 */ 'l', 'n', 'x', 'r', 9, 0,
  /* 11413 */ 'l', 'p', 'x', 'r', 9, 0,
  /* 11419 */ 's', 'q', 'x', 'r', 9, 0,
  /* 11425 */ 's', 'x', 'r', 9, 0,
  /* 11430 */ 'l', 't', 'x', 'r', 9, 0,
  /* 11436 */ 'l', 'z', 'x', 'r', 9, 0,
  /* 11442 */ 'm', 'a', 'y', 'r', 9, 0,
  /* 11448 */ 'm', 'y', 'r', 9, 0,
  /* 11453 */ 'b', 'z', 'r', 9, 0,
  /* 11458 */ 'b', 'n', 'z', 'r', 9, 0,
  /* 11464 */ 'b', 'a', 's', 9, 0,
  /* 11469 */ 'l', 'f', 'a', 's', 9, 0,
  /* 11475 */ 'b', 'r', 'a', 's', 9, 0,
  /* 11481 */ 'v', 's', 't', 'r', 'c', 'b', 's', 9, 0,
  /* 11490 */ 'v', 'f', 'c', 'e', 'd', 'b', 's', 9, 0,
  /* 11499 */ 'w', 'f', 'c', 'e', 'd', 'b', 's', 9, 0,
  /* 11508 */ 'v', 'f', 'c', 'h', 'e', 'd', 'b', 's', 9, 0,
  /* 11518 */ 'w', 'f', 'c', 'h', 'e', 'd', 'b', 's', 9, 0,
  /* 11528 */ 'v', 'f', 'c', 'h', 'd', 'b', 's', 9, 0,
  /* 11537 */ 'w', 'f', 'c', 'h', 'd', 'b', 's', 9, 0,
  /* 11546 */ 'v', 'f', 'a', 'e', 'b', 's', 9, 0,
  /* 11554 */ 'v', 'f', 'e', 'e', 'b', 's', 9, 0,
  /* 11562 */ 'v', 'f', 'e', 'n', 'e', 'b', 's', 9, 0,
  /* 11571 */ 'v', 'c', 'h', 'b', 's', 9, 0,
  /* 11578 */ 'v', 'c', 'h', 'l', 'b', 's', 9, 0,
  /* 11586 */ 'v', 'c', 'e', 'q', 'b', 's', 9, 0,
  /* 11594 */ 'v', 'i', 's', 't', 'r', 'b', 's', 9, 0,
  /* 11603 */ 'v', 's', 't', 'r', 'c', 'z', 'b', 's', 9, 0,
  /* 11613 */ 'v', 'f', 'a', 'e', 'z', 'b', 's', 9, 0,
  /* 11622 */ 'v', 'f', 'e', 'e', 'z', 'b', 's', 9, 0,
  /* 11631 */ 'v', 'f', 'e', 'n', 'e', 'z', 'b', 's', 9, 0,
  /* 11641 */ 'c', 's', 9, 0,
  /* 11645 */ 'c', 'd', 's', 9, 0,
  /* 11650 */ 'v', 's', 't', 'r', 'c', 'f', 's', 9, 0,
  /* 11659 */ 'v', 'f', 'a', 'e', 'f', 's', 9, 0,
  /* 11667 */ 'v', 'f', 'e', 'e', 'f', 's', 9, 0,
  /* 11675 */ 'v', 'f', 'e', 'n', 'e', 'f', 's', 9, 0,
  /* 11684 */ 'v', 'c', 'h', 'f', 's', 9, 0,
  /* 11691 */ 'v', 'c', 'h', 'l', 'f', 's', 9, 0,
  /* 11699 */ 'v', 'c', 'e', 'q', 'f', 's', 9, 0,
  /* 11707 */ 'v', 'i', 's', 't', 'r', 'f', 's', 9, 0,
  /* 11716 */ 'v', 'p', 'k', 's', 'f', 's', 9, 0,
  /* 11724 */ 'v', 'p', 'k', 'l', 's', 'f', 's', 9, 0,
  /* 11733 */ 'v', 'f', 's', 9, 0,
  /* 11738 */ 'v', 's', 't', 'r', 'c', 'z', 'f', 's', 9, 0,
  /* 11748 */ 'v', 'f', 'a', 'e', 'z', 'f', 's', 9, 0,
  /* 11757 */ 'v', 'f', 'e', 'e', 'z', 'f', 's', 9, 0,
  /* 11766 */ 'v', 'f', 'e', 'n', 'e', 'z', 'f', 's', 9, 0,
  /* 11776 */ 'v', 'c', 'h', 'g', 's', 9, 0,
  /* 11783 */ 'v', 'c', 'h', 'l', 'g', 's', 9, 0,
  /* 11791 */ 'v', 'c', 'e', 'q', 'g', 's', 9, 0,
  /* 11799 */ 'v', 'p', 'k', 's', 'g', 's', 9, 0,
  /* 11807 */ 'v', 'p', 'k', 'l', 's', 'g', 's', 9, 0,
  /* 11816 */ 'v', 's', 't', 'r', 'c', 'h', 's', 9, 0,
  /* 11825 */ 'v', 'f', 'a', 'e', 'h', 's', 9, 0,
  /* 11833 */ 'v', 'f', 'e', 'e', 'h', 's', 9, 0,
  /* 11841 */ 'v', 'f', 'e', 'n', 'e', 'h', 's', 9, 0,
  /* 11850 */ 'v', 'c', 'h', 'h', 's', 9, 0,
  /* 11857 */ 'v', 'c', 'h', 'l', 'h', 's', 9, 0,
  /* 11865 */ 'v', 'c', 'e', 'q', 'h', 's', 9, 0,
  /* 11873 */ 'v', 'i', 's', 't', 'r', 'h', 's', 9, 0,
  /* 11882 */ 'v', 'p', 'k', 's', 'h', 's', 9, 0,
  /* 11890 */ 'v', 'p', 'k', 'l', 's', 'h', 's', 9, 0,
  /* 11899 */ 'v', 's', 't', 'r', 'c', 'z', 'h', 's', 9, 0,
  /* 11909 */ 'v', 'f', 'a', 'e', 'z', 'h', 's', 9, 0,
  /* 11918 */ 'v', 'f', 'e', 'e', 'z', 'h', 's', 9, 0,
  /* 11927 */ 'v', 'f', 'e', 'n', 'e', 'z', 'h', 's', 9, 0,
  /* 11937 */ 'v', 'p', 'k', 's', 9, 0,
  /* 11943 */ 'v', 'p', 'k', 'l', 's', 9, 0,
  /* 11950 */ 'v', 'f', 'm', 's', 9, 0,
  /* 11956 */ 't', 's', 9, 0,
  /* 11960 */ 'v', 's', 9, 0,
  /* 11964 */ 'l', 'l', 'g', 'f', 'a', 't', 9, 0,
  /* 11972 */ 'l', 'g', 'a', 't', 9, 0,
  /* 11978 */ 'l', 'f', 'h', 'a', 't', 9, 0,
  /* 11985 */ 'l', 'a', 't', 9, 0,
  /* 11990 */ 'l', 'l', 'g', 't', 'a', 't', 9, 0,
  /* 11998 */ 'b', 'c', 't', 9, 0,
  /* 12003 */ 'v', 'p', 'o', 'p', 'c', 't', 9, 0,
  /* 12011 */ 'b', 'r', 'c', 't', 9, 0,
  /* 12017 */ 't', 'd', 'c', 'd', 't', 9, 0,
  /* 12024 */ 't', 'd', 'g', 'd', 't', 9, 0,
  /* 12031 */ 's', 'l', 'd', 't', 9, 0,
  /* 12037 */ 'c', 'p', 'd', 't', 9, 0,
  /* 12043 */ 's', 'r', 'd', 't', 9, 0,
  /* 12049 */ 'c', 'z', 'd', 't', 9, 0,
  /* 12055 */ 't', 'd', 'c', 'e', 't', 9, 0,
  /* 12062 */ 't', 'd', 'g', 'e', 't', 9, 0,
  /* 12069 */ 'c', 'l', 'g', 't', 9, 0,
  /* 12075 */ 'l', 'l', 'g', 't', 9, 0,
  /* 12081 */ 'c', 'i', 't', 9, 0,
  /* 12086 */ 'c', 'l', 'f', 'i', 't', 9, 0,
  /* 12093 */ 'c', 'g', 'i', 't', 9, 0,
  /* 12099 */ 'c', 'l', 'g', 'i', 't', 9, 0,
  /* 12106 */ 'c', 'l', 't', 9, 0,
  /* 12111 */ 's', 'r', 'n', 'm', 't', 9, 0,
  /* 12118 */ 'p', 'o', 'p', 'c', 'n', 't', 9, 0,
  /* 12126 */ 't', 'r', 'o', 't', 9, 0,
  /* 12132 */ 'c', 'd', 'p', 't', 9, 0,
  /* 12138 */ 'c', 'x', 'p', 't', 9, 0,
  /* 12144 */ 'c', 'r', 't', 9, 0,
  /* 12149 */ 'c', 'g', 'r', 't', 9, 0,
  /* 12155 */ 'c', 'l', 'g', 'r', 't', 9, 0,
  /* 12162 */ 'c', 'l', 'r', 't', 9, 0,
  /* 12168 */ 't', 'a', 'b', 'o', 'r', 't', 9, 0,
  /* 12176 */ 't', 'r', 't', 9, 0,
  /* 12181 */ 'c', 'l', 's', 't', 9, 0,
  /* 12187 */ 's', 'r', 's', 't', 9, 0,
  /* 12193 */ 'c', 's', 's', 't', 9, 0,
  /* 12199 */ 'm', 'v', 's', 't', 9, 0,
  /* 12205 */ 't', 'r', 't', 't', 9, 0,
  /* 12211 */ 't', 'd', 'c', 'x', 't', 9, 0,
  /* 12218 */ 't', 'd', 'g', 'x', 't', 9, 0,
  /* 12225 */ 's', 'l', 'x', 't', 9, 0,
  /* 12231 */ 'c', 'p', 'x', 't', 9, 0,
  /* 12237 */ 's', 'r', 'x', 't', 9, 0,
  /* 12243 */ 'c', 'z', 'x', 't', 9, 0,
  /* 12249 */ 'c', 'd', 'z', 't', 9, 0,
  /* 12255 */ 'c', 'x', 'z', 't', 9, 0,
  /* 12261 */ 'a', 'u', 9, 0,
  /* 12265 */ 'c', 'u', 't', 'f', 'u', 9, 0,
  /* 12272 */ 'u', 'n', 'p', 'k', 'u', 9, 0,
  /* 12279 */ 'c', 'l', 'c', 'l', 'u', 9, 0,
  /* 12286 */ 'm', 'v', 'c', 'l', 'u', 9, 0,
  /* 12293 */ 's', 'u', 9, 0,
  /* 12297 */ 's', 'r', 's', 't', 'u', 9, 0,
  /* 12304 */ 'v', 'e', 's', 'r', 'a', 'v', 9, 0,
  /* 12312 */ 'v', 'l', 'g', 'v', 9, 0,
  /* 12318 */ 'v', 'e', 'r', 'l', 'l', 'v', 9, 0,
  /* 12326 */ 'v', 'e', 's', 'r', 'l', 'v', 9, 0,
  /* 12334 */ 'v', 'e', 's', 'l', 'v', 9, 0,
  /* 12341 */ 'l', 'r', 'v', 9, 0,
  /* 12346 */ 's', 't', 'r', 'v', 9, 0,
  /* 12352 */ 'a', 'w', 9, 0,
  /* 12356 */ 'v', 'm', 'a', 'l', 'h', 'w', 9, 0,
  /* 12364 */ 'v', 'm', 'l', 'h', 'w', 9, 0,
  /* 12371 */ 'v', 'u', 'p', 'l', 'h', 'w', 9, 0,
  /* 12379 */ 'e', 'p', 's', 'w', 9, 0,
  /* 12385 */ 'l', 'a', 'x', 9, 0,
  /* 12390 */ 'e', 'x', 9, 0,
  /* 12394 */ 'v', 'm', 'x', 9, 0,
  /* 12399 */ 'v', 'x', 9, 0,
  /* 12403 */ 'l', 'a', 'y', 9, 0,
  /* 12408 */ 'm', 'a', 'y', 9, 0,
  /* 12413 */ 'c', 'v', 'b', 'y', 9, 0,
  /* 12419 */ 'i', 'c', 'y', 9, 0,
  /* 12424 */ 's', 't', 'c', 'y', 9, 0,
  /* 12430 */ 'l', 'd', 'y', 9, 0,
  /* 12435 */ 's', 't', 'd', 'y', 9, 0,
  /* 12441 */ 'c', 'v', 'd', 'y', 9, 0,
  /* 12447 */ 'l', 'a', 'e', 'y', 9, 0,
  /* 12453 */ 'l', 'e', 'y', 9, 0,
  /* 12458 */ 's', 't', 'e', 'y', 9, 0,
  /* 12464 */ 'm', 'f', 'y', 9, 0,
  /* 12469 */ 'a', 'h', 'y', 9, 0,
  /* 12474 */ 'c', 'h', 'y', 9, 0,
  /* 12479 */ 'l', 'h', 'y', 9, 0,
  /* 12484 */ 'm', 'h', 'y', 9, 0,
  /* 12489 */ 's', 'h', 'y', 9, 0,
  /* 12494 */ 's', 't', 'h', 'y', 9, 0,
  /* 12500 */ 'c', 'l', 'i', 'y', 9, 0,
  /* 12506 */ 'n', 'i', 'y', 9, 0,
  /* 12511 */ 'o', 'i', 'y', 9, 0,
  /* 12516 */ 'm', 'v', 'i', 'y', 9, 0,
  /* 12522 */ 'x', 'i', 'y', 9, 0,
  /* 12527 */ 'a', 'l', 'y', 9, 0,
  /* 12532 */ 'c', 'l', 'y', 9, 0,
  /* 12537 */ 's', 'l', 'y', 9, 0,
  /* 12542 */ 'l', 'a', 'm', 'y', 9, 0,
  /* 12548 */ 's', 't', 'a', 'm', 'y', 9, 0,
  /* 12555 */ 'i', 'c', 'm', 'y', 9, 0,
  /* 12561 */ 's', 't', 'c', 'm', 'y', 9, 0,
  /* 12568 */ 'c', 'l', 'm', 'y', 9, 0,
  /* 12574 */ 's', 't', 'm', 'y', 9, 0,
  /* 12580 */ 'n', 'y', 9, 0,
  /* 12584 */ 'o', 'y', 9, 0,
  /* 12588 */ 'c', 's', 'y', 9, 0,
  /* 12593 */ 'c', 'd', 's', 'y', 9, 0,
  /* 12599 */ 'm', 's', 'y', 9, 0,
  /* 12604 */ 's', 't', 'y', 9, 0,
  /* 12609 */ 'x', 'y', 9, 0,
  /* 12613 */ 'b', 'z', 9, 0,
  /* 12617 */ 'l', 'o', 'c', 'z', 9, 0,
  /* 12623 */ 's', 't', 'o', 'c', 'z', 9, 0,
  /* 12630 */ 'v', 'l', 'l', 'e', 'z', 9, 0,
  /* 12637 */ 'l', 'o', 'c', 'g', 'z', 9, 0,
  /* 12644 */ 's', 't', 'o', 'c', 'g', 'z', 9, 0,
  /* 12652 */ 'j', 'g', 'z', 9, 0,
  /* 12657 */ 'l', 'o', 'c', 'f', 'h', 'z', 9, 0,
  /* 12665 */ 's', 't', 'o', 'c', 'f', 'h', 'z', 9, 0,
  /* 12674 */ 'l', 'o', 'c', 'h', 'i', 'z', 9, 0,
  /* 12682 */ 'l', 'o', 'c', 'g', 'h', 'i', 'z', 9, 0,
  /* 12691 */ 'l', 'o', 'c', 'h', 'h', 'i', 'z', 9, 0,
  /* 12700 */ 'j', 'z', 9, 0,
  /* 12704 */ 'v', 'c', 'l', 'z', 9, 0,
  /* 12710 */ 'b', 'n', 'z', 9, 0,
  /* 12715 */ 'l', 'o', 'c', 'n', 'z', 9, 0,
  /* 12722 */ 's', 't', 'o', 'c', 'n', 'z', 9, 0,
  /* 12730 */ 'l', 'o', 'c', 'g', 'n', 'z', 9, 0,
  /* 12738 */ 's', 't', 'o', 'c', 'g', 'n', 'z', 9, 0,
  /* 12747 */ 'j', 'g', 'n', 'z', 9, 0,
  /* 12753 */ 'l', 'o', 'c', 'f', 'h', 'n', 'z', 9, 0,
  /* 12762 */ 's', 't', 'o', 'c', 'f', 'h', 'n', 'z', 9, 0,
  /* 12772 */ 'l', 'o', 'c', 'h', 'i', 'n', 'z', 9, 0,
  /* 12781 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'z', 9, 0,
  /* 12791 */ 'l', 'o', 'c', 'h', 'h', 'i', 'n', 'z', 9, 0,
  /* 12801 */ 'j', 'n', 'z', 9, 0,
  /* 12806 */ 'l', 'o', 'c', 'r', 'n', 'z', 9, 0,
  /* 12814 */ 'l', 'o', 'c', 'g', 'r', 'n', 'z', 9, 0,
  /* 12823 */ 'l', 'o', 'c', 'f', 'h', 'r', 'n', 'z', 9, 0,
  /* 12833 */ 'l', 'o', 'c', 'r', 'z', 9, 0,
  /* 12840 */ 'l', 'o', 'c', 'g', 'r', 'z', 9, 0,
  /* 12848 */ 'l', 'o', 'c', 'f', 'h', 'r', 'z', 9, 0,
  /* 12857 */ 'v', 'c', 't', 'z', 9, 0,
  /* 12863 */ 'm', 'v', 'z', 9, 0,
  /* 12868 */ '.', 'i', 'n', 's', 'n', 32, 'e', ',', 0,
  /* 12877 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'i', 'e', ',', 0,
  /* 12888 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'r', 'e', ',', 0,
  /* 12899 */ '.', 'i', 'n', 's', 'n', 32, 'r', 's', 'e', ',', 0,
  /* 12910 */ '.', 'i', 'n', 's', 'n', 32, 's', 's', 'e', ',', 0,
  /* 12921 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'x', 'e', ',', 0,
  /* 12932 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'r', 'f', ',', 0,
  /* 12943 */ '.', 'i', 'n', 's', 'n', 32, 's', 's', 'f', ',', 0,
  /* 12954 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'x', 'f', ',', 0,
  /* 12965 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'i', ',', 0,
  /* 12975 */ '.', 'i', 'n', 's', 'n', 32, 's', 'i', ',', 0,
  /* 12985 */ '.', 'i', 'n', 's', 'n', 32, 'r', 's', 'i', ',', 0,
  /* 12996 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'i', 'l', ',', 0,
  /* 13007 */ '.', 'i', 'n', 's', 'n', 32, 's', 'i', 'l', ',', 0,
  /* 13018 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'r', ',', 0,
  /* 13028 */ '.', 'i', 'n', 's', 'n', 32, 's', ',', 0,
  /* 13037 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'i', 's', ',', 0,
  /* 13048 */ '.', 'i', 'n', 's', 'n', 32, 'r', 's', ',', 0,
  /* 13058 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'r', 's', ',', 0,
  /* 13069 */ '.', 'i', 'n', 's', 'n', 32, 's', 's', ',', 0,
  /* 13079 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'i', 'l', 'u', ',', 0,
  /* 13091 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'x', ',', 0,
  /* 13101 */ '.', 'i', 'n', 's', 'n', 32, 's', 'i', 'y', ',', 0,
  /* 13112 */ '.', 'i', 'n', 's', 'n', 32, 'r', 's', 'y', ',', 0,
  /* 13123 */ '.', 'i', 'n', 's', 'n', 32, 'r', 'x', 'y', ',', 0,
  /* 13134 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 13165 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 13190 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 13213 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 13236 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 13258 */ 's', 'a', 'm', '3', '1', 0,
  /* 13264 */ 's', 'a', 'm', '2', '4', 0,
  /* 13270 */ 's', 'a', 'm', '6', '4', 0,
  /* 13276 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 13289 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 13296 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 13306 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 13321 */ 'c', 'i', 'b', 0,
  /* 13325 */ 'c', 'g', 'i', 'b', 0,
  /* 13330 */ 'c', 'l', 'g', 'i', 'b', 0,
  /* 13336 */ 'c', 'l', 'i', 'b', 0,
  /* 13341 */ 'c', 'r', 'b', 0,
  /* 13345 */ 'c', 'g', 'r', 'b', 0,
  /* 13350 */ 'c', 'l', 'g', 'r', 'b', 0,
  /* 13356 */ 'c', 'l', 'r', 'b', 0,
  /* 13361 */ 'p', 'c', 'c', 0,
  /* 13365 */ 'l', 'o', 'c', 0,
  /* 13369 */ 's', 't', 'o', 'c', 0,
  /* 13374 */ 't', 'e', 'n', 'd', 0,
  /* 13379 */ 'l', 'o', 'c', 'g', 0,
  /* 13384 */ 's', 't', 'o', 'c', 'g', 0,
  /* 13390 */ 'j', 'g', 0,
  /* 13393 */ 'l', 'o', 'c', 'f', 'h', 0,
  /* 13399 */ 's', 't', 'o', 'c', 'f', 'h', 0,
  /* 13406 */ 'l', 'o', 'c', 'h', 'i', 0,
  /* 13412 */ 'l', 'o', 'c', 'g', 'h', 'i', 0,
  /* 13419 */ 'l', 'o', 'c', 'h', 'h', 'i', 0,
  /* 13426 */ 'c', 'i', 'j', 0,
  /* 13430 */ 'c', 'g', 'i', 'j', 0,
  /* 13435 */ 'c', 'l', 'g', 'i', 'j', 0,
  /* 13441 */ 'c', 'l', 'i', 'j', 0,
  /* 13446 */ 'c', 'r', 'j', 0,
  /* 13450 */ 'c', 'g', 'r', 'j', 0,
  /* 13455 */ 'c', 'l', 'g', 'r', 'j', 0,
  /* 13461 */ 'c', 'l', 'r', 'j', 0,
  /* 13466 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 13480 */ 't', 'a', 'm', 0,
  /* 13484 */ 'p', 'f', 'p', 'o', 0,
  /* 13489 */ 'l', 'o', 'c', 'r', 0,
  /* 13494 */ 'l', 'o', 'c', 'g', 'r', 0,
  /* 13500 */ 'l', 'o', 'c', 'f', 'h', 'r', 0,
  /* 13507 */ 'p', 'r', 0,
  /* 13510 */ 'c', 'l', 'g', 't', 0,
  /* 13515 */ 'c', 'i', 't', 0,
  /* 13519 */ 'c', 'l', 'f', 'i', 't', 0,
  /* 13525 */ 'c', 'g', 'i', 't', 0,
  /* 13530 */ 'c', 'l', 'g', 'i', 't', 0,
  /* 13536 */ 'c', 'l', 't', 0,
  /* 13540 */ 'u', 'p', 't', 0,
  /* 13544 */ 'c', 'r', 't', 0,
  /* 13548 */ 'c', 'g', 'r', 't', 0,
  /* 13553 */ 'c', 'l', 'g', 'r', 't', 0,
  /* 13559 */ 'c', 'l', 'r', 't', 0,
  };

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    13297U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    13290U,	// BUNDLE
    13307U,	// LIFETIME_START
    13277U,	// LIFETIME_END
    0U,	// STACKMAP
    13467U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    13191U,	// PATCHABLE_FUNCTION_ENTER
    13135U,	// PATCHABLE_RET
    13237U,	// PATCHABLE_FUNCTION_EXIT
    13214U,	// PATCHABLE_TAIL_CALL
    13166U,	// PATCHABLE_EVENT_CALL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_SEQUENCE
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_STORE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    16423U,	// A
    17925U,	// AD
    16797U,	// ADB
    16803345U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    16803840U,	// ADR
    1107323589U,	// ADTR
    1107312886U,	// ADTRA
    18025U,	// AE
    17132U,	// AEB
    16803477U,	// AEBR
    16803977U,	// AER
    0U,	// AEXT128_64
    50355252U,	// AFI
    0U,	// AFIMux
    20861U,	// AG
    20275U,	// AGF
    50355262U,	// AGFI
    16804148U,	// AGFR
    67132559U,	// AGHI
    1107320201U,	// AGHIK
    16804230U,	// AGR
    1107320259U,	// AGRK
    83926248U,	// AGSI
    21498U,	// AH
    67132547U,	// AHI
    1107320195U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    28854U,	// AHY
    50353553U,	// AIH
    24081U,	// AL
    17811U,	// ALC
    20958U,	// ALCG
    16804242U,	// ALCGR
    16803821U,	// ALCR
    100686950U,	// ALFI
    21123U,	// ALG
    20292U,	// ALGF
    100686922U,	// ALGFI
    16804161U,	// ALGFR
    1107320208U,	// ALGHSIK
    16804274U,	// ALGR
    1107320265U,	// ALGRK
    83926254U,	// ALGSI
    1107320217U,	// ALHSIK
    16804420U,	// ALR
    1107320303U,	// ALRK
    83926305U,	// ALSI
    28912U,	// ALY
    117499021U,	// AP
    16803335U,	// AR
    1107320254U,	// ARK
    83926243U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    28646U,	// AU
    16804931U,	// AUR
    28737U,	// AW
    16804947U,	// AWR
    16803699U,	// AXBR
    16804957U,	// AXR
    1107323847U,	// AXTR
    1107312938U,	// AXTRA
    28789U,	// AY
    65885U,	// B
    134241813U,	// BAL
    33581635U,	// BALR
    134245577U,	// BAS
    33581733U,	// BASR
    33579798U,	// BASSM
    67194U,	// BAsmE
    70675U,	// BAsmH
    67311U,	// BAsmHE
    73250U,	// BAsmL
    68112U,	// BAsmLE
    71193U,	// BAsmLH
    74204U,	// BAsmM
    68838U,	// BAsmNE
    72050U,	// BAsmNH
    67549U,	// BAsmNHE
    73584U,	// BAsmNL
    68353U,	// BAsmNLE
    71482U,	// BAsmNLH
    74336U,	// BAsmNM
    74703U,	// BAsmNO
    75014U,	// BAsmNP
    78247U,	// BAsmNZ
    74591U,	// BAsmO
    74897U,	// BAsmP
    78150U,	// BAsmZ
    619532U,	// BC
    1148265U,	// BCAsm
    1668108U,	// BCR
    153200609U,	// BCRAsm
    28383U,	// BCT
    21362U,	// BCTG
    16804335U,	// BCTGR
    16804535U,	// BCTR
    2317985153U,	// BPP
    3391727006U,	// BPRP
    3171859U,	// BR
    184577236U,	// BRAS
    184574300U,	// BRASL
    3172494U,	// BRAsmE
    3172873U,	// BRAsmH
    3172542U,	// BRAsmHE
    3172937U,	// BRAsmL
    3172561U,	// BRAsmLE
    3172893U,	// BRAsmLH
    3172986U,	// BRAsmM
    3172579U,	// BRAsmNE
    3172912U,	// BRAsmNH
    3172548U,	// BRAsmNHE
    3172957U,	// BRAsmNL
    3172567U,	// BRAsmNLE
    3172905U,	// BRAsmNLH
    3172991U,	// BRAsmNM
    3173007U,	// BRAsmNO
    3173023U,	// BRAsmNP
    3173571U,	// BRAsmNZ
    3173002U,	// BRAsmO
    3173013U,	// BRAsmP
    3173566U,	// BRAsmZ
    201946229U,	// BRC
    153716190U,	// BRCAsm
    201946191U,	// BRCL
    153722481U,	// BRCLAsm
    201354988U,	// BRCT
    201347966U,	// BRCTG
    201349935U,	// BRCTH
    1090542531U,	// BRXH
    1090540121U,	// BRXHG
    1090538712U,	// BRXLE
    1090540260U,	// BRXLG
    33579786U,	// BSM
    1090542520U,	// BXH
    1090540115U,	// BXHG
    1090538706U,	// BXLE
    1090540060U,	// BXLEG
    134235489U,	// C
    134235657U,	// CD
    134234555U,	// CDB
    33580568U,	// CDBR
    33580819U,	// CDFBR
    218120337U,	// CDFBRA
    33581338U,	// CDFR
    218131285U,	// CDFTR
    33580864U,	// CDGBR
    218120361U,	// CDGBRA
    33581472U,	// CDGR
    33581939U,	// CDGTR
    218120474U,	// CDGTRA
    218130209U,	// CDLFBR
    218131292U,	// CDLFTR
    218130254U,	// CDLGBR
    218131322U,	// CDLGTR
    234909541U,	// CDPT
    33581068U,	// CDR
    1090547070U,	// CDS
    1090540371U,	// CDSG
    33581987U,	// CDSTR
    1090548018U,	// CDSY
    33581771U,	// CDTR
    33582008U,	// CDUTR
    234909658U,	// CDZT
    134235826U,	// CE
    134234873U,	// CEB
    33580700U,	// CEBR
    33581783U,	// CEDTR
    33580826U,	// CEFBR
    218120345U,	// CEFBRA
    33581358U,	// CEFR
    33580871U,	// CEGBR
    218120369U,	// CEGBRA
    33581484U,	// CEGR
    218130217U,	// CELFBR
    218130262U,	// CELGBR
    33581204U,	// CER
    33582042U,	// CEXTR
    3179903U,	// CFC
    218129963U,	// CFDBR
    218120289U,	// CFDBRA
    218130467U,	// CFDR
    218131187U,	// CFDTR
    218130103U,	// CFEBR
    218120313U,	// CFEBRA
    218130610U,	// CFER
    251681849U,	// CFI
    0U,	// CFIMux
    218130318U,	// CFXBR
    218120401U,	// CFXBRA
    218131572U,	// CFXR
    218131439U,	// CFXTR
    134238676U,	// CG
    218129978U,	// CGDBR
    218120297U,	// CGDBRA
    218130473U,	// CGDR
    218131202U,	// CGDTR
    218120452U,	// CGDTRA
    218130118U,	// CGEBR
    218120321U,	// CGEBRA
    218130616U,	// CGER
    134238008U,	// CGF
    251681860U,	// CGFI
    33581371U,	// CGFR
    268460239U,	// CGFRL
    134239464U,	// CGH
    285236375U,	// CGHI
    268460299U,	// CGHRL
    67149059U,	// CGHSI
    305787918U,	// CGIB
    1392526303U,	// CGIBAsm
    2466268798U,	// CGIBAsmE
    2466272279U,	// CGIBAsmH
    2466268916U,	// CGIBAsmHE
    2466274854U,	// CGIBAsmL
    2466269717U,	// CGIBAsmLE
    2466272798U,	// CGIBAsmLH
    2466270443U,	// CGIBAsmNE
    2466273655U,	// CGIBAsmNH
    2466269155U,	// CGIBAsmNHE
    2466275189U,	// CGIBAsmNL
    2466269959U,	// CGIBAsmNLE
    2466273088U,	// CGIBAsmNLH
    0U,	// CGIBCall
    0U,	// CGIBReturn
    339342455U,	// CGIJ
    1392532789U,	// CGIJAsm
    3540011470U,	// CGIJAsmE
    3540014552U,	// CGIJAsmH
    3540010914U,	// CGIJAsmHE
    3540016896U,	// CGIJAsmL
    3540011712U,	// CGIJAsmLE
    3540014819U,	// CGIJAsmLH
    3540012424U,	// CGIJAsmNE
    3540015629U,	// CGIJAsmNH
    3540011147U,	// CGIJAsmNHE
    3540017163U,	// CGIJAsmNL
    3540011951U,	// CGIJAsmNLE
    3540015080U,	// CGIJAsmNLH
    4322518U,	// CGIT
    1358982974U,	// CGITAsm
    285232758U,	// CGITAsmE
    285236043U,	// CGITAsmH
    285231478U,	// CGITAsmHE
    285237635U,	// CGITAsmL
    285232282U,	// CGITAsmLE
    285235447U,	// CGITAsmLH
    285232634U,	// CGITAsmNE
    285235839U,	// CGITAsmNH
    285231364U,	// CGITAsmNHE
    285237373U,	// CGITAsmNL
    285232168U,	// CGITAsmNLE
    285235304U,	// CGITAsmNLH
    33581460U,	// CGR
    3391222818U,	// CGRB
    1107313867U,	// CGRBAsm
    1107314330U,	// CGRBAsmE
    1107317816U,	// CGRBAsmH
    1107314452U,	// CGRBAsmHE
    1107320386U,	// CGRBAsmL
    1107315253U,	// CGRBAsmLE
    1107318334U,	// CGRBAsmLH
    1107315979U,	// CGRBAsmNE
    1107319191U,	// CGRBAsmNH
    1107314695U,	// CGRBAsmNHE
    1107320725U,	// CGRBAsmNL
    1107315499U,	// CGRBAsmNLE
    1107318628U,	// CGRBAsmNLH
    0U,	// CGRBCall
    0U,	// CGRBReturn
    169997451U,	// CGRJ
    1107320141U,	// CGRJAsm
    1107315178U,	// CGRJAsmE
    1107318260U,	// CGRJAsmH
    1107314626U,	// CGRJAsmHE
    1107320604U,	// CGRJAsmL
    1107315424U,	// CGRJAsmLE
    1107318531U,	// CGRJAsmLH
    1107316136U,	// CGRJAsmNE
    1107319341U,	// CGRJAsmNH
    1107314863U,	// CGRJAsmNHE
    1107320875U,	// CGRJAsmNL
    1107315667U,	// CGRJAsmNLE
    1107318796U,	// CGRJAsmNLH
    268460264U,	// CGRL
    153220333U,	// CGRT
    1107324790U,	// CGRTAsm
    33574545U,	// CGRTAsmE
    33577830U,	// CGRTAsmH
    33573269U,	// CGRTAsmHE
    33579422U,	// CGRTAsmL
    33574073U,	// CGRTAsmLE
    33577238U,	// CGRTAsmLH
    33574425U,	// CGRTAsmNE
    33577630U,	// CGRTAsmNH
    33573159U,	// CGRTAsmNHE
    33579164U,	// CGRTAsmNL
    33573963U,	// CGRTAsmNLE
    33577099U,	// CGRTAsmNLH
    218130333U,	// CGXBR
    218120409U,	// CGXBRA
    218131578U,	// CGXR
    218131454U,	// CGXTR
    218120504U,	// CGXTRA
    134239313U,	// CH
    134238100U,	// CHF
    67149074U,	// CHHSI
    285236362U,	// CHI
    0U,	// CHIMux
    268460284U,	// CHRL
    67149045U,	// CHSI
    134246587U,	// CHY
    305787914U,	// CIB
    1392526291U,	// CIBAsm
    2466268792U,	// CIBAsmE
    2466272273U,	// CIBAsmH
    2466268909U,	// CIBAsmHE
    2466274848U,	// CIBAsmL
    2466269710U,	// CIBAsmLE
    2466272791U,	// CIBAsmLH
    2466270436U,	// CIBAsmNE
    2466273648U,	// CIBAsmNH
    2466269147U,	// CIBAsmNHE
    2466275182U,	// CIBAsmNL
    2466269951U,	// CIBAsmNLE
    2466273080U,	// CIBAsmNLH
    0U,	// CIBCall
    0U,	// CIBReturn
    251680158U,	// CIH
    339342451U,	// CIJ
    1392532784U,	// CIJAsm
    3540011464U,	// CIJAsmE
    3540014546U,	// CIJAsmH
    3540010907U,	// CIJAsmHE
    3540016890U,	// CIJAsmL
    3540011705U,	// CIJAsmLE
    3540014812U,	// CIJAsmLH
    3540012417U,	// CIJAsmNE
    3540015622U,	// CIJAsmNH
    3540011139U,	// CIJAsmNHE
    3540017156U,	// CIJAsmNL
    3540011943U,	// CIJAsmNLE
    3540015072U,	// CIJAsmNLH
    4322508U,	// CIT
    1358982962U,	// CITAsm
    285232744U,	// CITAsmE
    285236029U,	// CITAsmH
    285231462U,	// CITAsmHE
    285237621U,	// CITAsmL
    285232266U,	// CITAsmLE
    285235431U,	// CITAsmLH
    285232618U,	// CITAsmNE
    285235823U,	// CITAsmNH
    285231346U,	// CITAsmNHE
    285237357U,	// CITAsmNL
    285232150U,	// CITAsmNLE
    285235286U,	// CITAsmNLH
    33579792U,	// CKSM
    134241882U,	// CL
    302040472U,	// CLC
    33578590U,	// CLCL
    1107315278U,	// CLCLE
    1107324920U,	// CLCLU
    0U,	// CLCLoop
    0U,	// CLCSequence
    218129970U,	// CLFDBR
    218131194U,	// CLFDTR
    218130110U,	// CLFEBR
    352361723U,	// CLFHSI
    369122412U,	// CLFI
    0U,	// CLFIMux
    4846800U,	// CLFIT
    1459646263U,	// CLFITAsm
    385896046U,	// CLFITAsmE
    385899331U,	// CLFITAsmH
    385894765U,	// CLFITAsmHE
    385900923U,	// CLFITAsmL
    385895569U,	// CLFITAsmLE
    385898734U,	// CLFITAsmLH
    385895921U,	// CLFITAsmNE
    385899126U,	// CLFITAsmNH
    385894650U,	// CLFITAsmNHE
    385900660U,	// CLFITAsmNL
    385895454U,	// CLFITAsmNLE
    385898590U,	// CLFITAsmNLH
    218130325U,	// CLFXBR
    218131446U,	// CLFXTR
    134238866U,	// CLG
    218129985U,	// CLGDBR
    218131209U,	// CLGDTR
    218130125U,	// CLGEBR
    134238026U,	// CLGF
    369122385U,	// CLGFI
    33581384U,	// CLGFR
    268460246U,	// CLGFRL
    268460306U,	// CLGHRL
    352361738U,	// CLGHSI
    307360787U,	// CLGIB
    1476412389U,	// CLGIBAsm
    2550154885U,	// CLGIBAsmE
    2550158366U,	// CLGIBAsmH
    2550155004U,	// CLGIBAsmHE
    2550160941U,	// CLGIBAsmL
    2550155805U,	// CLGIBAsmLE
    2550158886U,	// CLGIBAsmLH
    2550156531U,	// CLGIBAsmNE
    2550159743U,	// CLGIBAsmNH
    2550155244U,	// CLGIBAsmNHE
    2550161277U,	// CLGIBAsmNL
    2550156048U,	// CLGIBAsmNLE
    2550159177U,	// CLGIBAsmNLH
    0U,	// CLGIBCall
    0U,	// CLGIBReturn
    340915324U,	// CLGIJ
    1476418875U,	// CLGIJAsm
    3623897557U,	// CLGIJAsmE
    3623900639U,	// CLGIJAsmH
    3623897002U,	// CLGIJAsmHE
    3623902983U,	// CLGIJAsmL
    3623897800U,	// CLGIJAsmLE
    3623900907U,	// CLGIJAsmLH
    3623898512U,	// CLGIJAsmNE
    3623901717U,	// CLGIJAsmNH
    3623897236U,	// CLGIJAsmNHE
    3623903251U,	// CLGIJAsmNL
    3623898040U,	// CLGIJAsmNLE
    3623901169U,	// CLGIJAsmNLH
    4846811U,	// CLGIT
    1459646276U,	// CLGITAsm
    385896061U,	// CLGITAsmE
    385899346U,	// CLGITAsmH
    385894782U,	// CLGITAsmHE
    385900938U,	// CLGITAsmL
    385895586U,	// CLGITAsmLE
    385898751U,	// CLGITAsmLH
    385895938U,	// CLGITAsmNE
    385899143U,	// CLGITAsmNH
    385894669U,	// CLGITAsmNHE
    385900677U,	// CLGITAsmNL
    385895473U,	// CLGITAsmNLE
    385898609U,	// CLGITAsmNLH
    33581496U,	// CLGR
    3391222823U,	// CLGRB
    1107313873U,	// CLGRBAsm
    1107314337U,	// CLGRBAsmE
    1107317823U,	// CLGRBAsmH
    1107314460U,	// CLGRBAsmHE
    1107320393U,	// CLGRBAsmL
    1107315261U,	// CLGRBAsmLE
    1107318342U,	// CLGRBAsmLH
    1107315987U,	// CLGRBAsmNE
    1107319199U,	// CLGRBAsmNH
    1107314704U,	// CLGRBAsmNHE
    1107320733U,	// CLGRBAsmNL
    1107315508U,	// CLGRBAsmNLE
    1107318637U,	// CLGRBAsmNLH
    0U,	// CLGRBCall
    0U,	// CLGRBReturn
    169997456U,	// CLGRJ
    1107320147U,	// CLGRJAsm
    1107315185U,	// CLGRJAsmE
    1107318267U,	// CLGRJAsmH
    1107314634U,	// CLGRJAsmHE
    1107320611U,	// CLGRJAsmL
    1107315432U,	// CLGRJAsmLE
    1107318539U,	// CLGRJAsmLH
    1107316144U,	// CLGRJAsmNE
    1107319349U,	// CLGRJAsmNH
    1107314872U,	// CLGRJAsmNHE
    1107320883U,	// CLGRJAsmNL
    1107315676U,	// CLGRJAsmNLE
    1107318805U,	// CLGRJAsmNLH
    268460270U,	// CLGRL
    153220338U,	// CLGRT
    1107324796U,	// CLGRTAsm
    33574552U,	// CLGRTAsmE
    33577837U,	// CLGRTAsmH
    33573277U,	// CLGRTAsmHE
    33579429U,	// CLGRTAsmL
    33574081U,	// CLGRTAsmLE
    33577246U,	// CLGRTAsmLH
    33574433U,	// CLGRTAsmNE
    33577638U,	// CLGRTAsmNH
    33573168U,	// CLGRTAsmNHE
    33579172U,	// CLGRTAsmNL
    33573972U,	// CLGRTAsmNLE
    33577108U,	// CLGRTAsmNLH
    144583U,	// CLGT
    1493200678U,	// CLGTAsm
    436227681U,	// CLGTAsmE
    436230966U,	// CLGTAsmH
    436226398U,	// CLGTAsmHE
    436232558U,	// CLGTAsmL
    436227202U,	// CLGTAsmLE
    436230367U,	// CLGTAsmLH
    436227554U,	// CLGTAsmNE
    436230759U,	// CLGTAsmNH
    436226281U,	// CLGTAsmNHE
    436232293U,	// CLGTAsmNL
    436227085U,	// CLGTAsmNLE
    436230221U,	// CLGTAsmNLH
    218130340U,	// CLGXBR
    218131461U,	// CLGXTR
    134238144U,	// CLHF
    352361753U,	// CLHHSI
    268460322U,	// CLHRL
    453024975U,	// CLI
    307360793U,	// CLIB
    1476412396U,	// CLIBAsm
    2550154893U,	// CLIBAsmE
    2550158374U,	// CLIBAsmH
    2550155013U,	// CLIBAsmHE
    2550160949U,	// CLIBAsmL
    2550155814U,	// CLIBAsmLE
    2550158895U,	// CLIBAsmLH
    2550156540U,	// CLIBAsmNE
    2550159752U,	// CLIBAsmNH
    2550155254U,	// CLIBAsmNHE
    2550161286U,	// CLIBAsmNL
    2550156058U,	// CLIBAsmNLE
    2550159187U,	// CLIBAsmNLH
    0U,	// CLIBCall
    0U,	// CLIBReturn
    369120708U,	// CLIH
    340915330U,	// CLIJ
    1476418882U,	// CLIJAsm
    3623897565U,	// CLIJAsmE
    3623900647U,	// CLIJAsmH
    3623897011U,	// CLIJAsmHE
    3623902991U,	// CLIJAsmL
    3623897809U,	// CLIJAsmLE
    3623900916U,	// CLIJAsmLH
    3623898521U,	// CLIJAsmNE
    3623901726U,	// CLIJAsmNH
    3623897246U,	// CLIJAsmNHE
    3623903260U,	// CLIJAsmNL
    3623898050U,	// CLIJAsmNLE
    3623901179U,	// CLIJAsmNLH
    453030101U,	// CLIY
    2365612630U,	// CLM
    2365610328U,	// CLMH
    2365616409U,	// CLMY
    0U,	// CLMux
    33581646U,	// CLR
    3391222829U,	// CLRB
    1107313880U,	// CLRBAsm
    1107314345U,	// CLRBAsmE
    1107317831U,	// CLRBAsmH
    1107314469U,	// CLRBAsmHE
    1107320401U,	// CLRBAsmL
    1107315270U,	// CLRBAsmLE
    1107318351U,	// CLRBAsmLH
    1107315996U,	// CLRBAsmNE
    1107319208U,	// CLRBAsmNH
    1107314714U,	// CLRBAsmNHE
    1107320742U,	// CLRBAsmNL
    1107315518U,	// CLRBAsmNLE
    1107318647U,	// CLRBAsmNLH
    0U,	// CLRBCall
    0U,	// CLRBReturn
    169997462U,	// CLRJ
    1107320154U,	// CLRJAsm
    1107315193U,	// CLRJAsmE
    1107318275U,	// CLRJAsmH
    1107314643U,	// CLRJAsmHE
    1107320619U,	// CLRJAsmL
    1107315441U,	// CLRJAsmLE
    1107318548U,	// CLRJAsmLH
    1107316153U,	// CLRJAsmNE
    1107319358U,	// CLRJAsmNH
    1107314882U,	// CLRJAsmNHE
    1107320892U,	// CLRJAsmNL
    1107315686U,	// CLRJAsmNLE
    1107318815U,	// CLRJAsmNLH
    268460343U,	// CLRL
    153220344U,	// CLRT
    1107324803U,	// CLRTAsm
    33574560U,	// CLRTAsmE
    33577845U,	// CLRTAsmH
    33573286U,	// CLRTAsmHE
    33579437U,	// CLRTAsmL
    33574090U,	// CLRTAsmLE
    33577255U,	// CLRTAsmLH
    33574442U,	// CLRTAsmNE
    33577647U,	// CLRTAsmNH
    33573178U,	// CLRTAsmNHE
    33579181U,	// CLRTAsmNL
    33573982U,	// CLRTAsmNLE
    33577118U,	// CLRTAsmNLH
    33582998U,	// CLST
    0U,	// CLSTLoop
    144609U,	// CLT
    1493200715U,	// CLTAsm
    436227717U,	// CLTAsmE
    436231002U,	// CLTAsmH
    436226439U,	// CLTAsmHE
    436232594U,	// CLTAsmL
    436227243U,	// CLTAsmLE
    436230408U,	// CLTAsmLH
    436227595U,	// CLTAsmNE
    436230800U,	// CLTAsmNH
    436226327U,	// CLTAsmNHE
    436232334U,	// CLTAsmNL
    436227131U,	// CLTAsmNLE
    436230267U,	// CLTAsmNLH
    134246645U,	// CLY
    33572330U,	// CMPSC
    0U,	// CMux
    117499031U,	// CP
    234909446U,	// CPDT
    1090545769U,	// CPSDRdd
    1090545769U,	// CPSDRds
    1090545769U,	// CPSDRsd
    1090545769U,	// CPSDRss
    234909640U,	// CPXT
    33571154U,	// CPYA
    33581026U,	// CR
    3391222814U,	// CRB
    1107313862U,	// CRBAsm
    1107314324U,	// CRBAsmE
    1107317810U,	// CRBAsmH
    1107314445U,	// CRBAsmHE
    1107320380U,	// CRBAsmL
    1107315246U,	// CRBAsmLE
    1107318327U,	// CRBAsmLH
    1107315972U,	// CRBAsmNE
    1107319184U,	// CRBAsmNH
    1107314687U,	// CRBAsmNHE
    1107320718U,	// CRBAsmNL
    1107315491U,	// CRBAsmNLE
    1107318620U,	// CRBAsmNLH
    0U,	// CRBCall
    0U,	// CRBReturn
    169997447U,	// CRJ
    1107320136U,	// CRJAsm
    1107315172U,	// CRJAsmE
    1107318254U,	// CRJAsmH
    1107314619U,	// CRJAsmHE
    1107320598U,	// CRJAsmL
    1107315417U,	// CRJAsmLE
    1107318524U,	// CRJAsmLH
    1107316129U,	// CRJAsmNE
    1107319334U,	// CRJAsmNH
    1107314855U,	// CRJAsmNHE
    1107320868U,	// CRJAsmNL
    1107315659U,	// CRJAsmNLE
    1107318788U,	// CRJAsmNLH
    268460227U,	// CRL
    153220329U,	// CRT
    1107324785U,	// CRTAsm
    33574539U,	// CRTAsmE
    33577824U,	// CRTAsmH
    33573262U,	// CRTAsmHE
    33579416U,	// CRTAsmL
    33574066U,	// CRTAsmLE
    33577231U,	// CRTAsmLH
    33574418U,	// CRTAsmNE
    33577623U,	// CRTAsmNH
    33573151U,	// CRTAsmNHE
    33579157U,	// CRTAsmNL
    33573955U,	// CRTAsmNLE
    33577091U,	// CRTAsmNLH
    1090547066U,	// CS
    1107323691U,	// CSDTR
    1090540366U,	// CSG
    1543548834U,	// CSST
    1107323943U,	// CSXTR
    1090548013U,	// CSY
    1107312653U,	// CU12
    33570829U,	// CU12Opt
    1107312665U,	// CU14
    33570841U,	// CU14Opt
    1107312641U,	// CU21
    33570817U,	// CU21Opt
    1107312671U,	// CU24
    33570847U,	// CU24Opt
    33570823U,	// CU41
    33570835U,	// CU42
    33581888U,	// CUDTR
    33574491U,	// CUSE
    1107324906U,	// CUTFU
    33583082U,	// CUTFUOpt
    1107317004U,	// CUUTF
    33575180U,	// CUUTFOpt
    33582140U,	// CUXTR
    17652U,	// CVB
    20939U,	// CVBG
    28798U,	// CVBY
    134235736U,	// CVD
    134238723U,	// CVDG
    134246554U,	// CVDY
    33580922U,	// CXBR
    33580857U,	// CXFBR
    218120353U,	// CXFBRA
    33581440U,	// CXFR
    218131308U,	// CXFTR
    33580902U,	// CXGBR
    218120377U,	// CXGBRA
    33581571U,	// CXGR
    33581969U,	// CXGTR
    218120482U,	// CXGTRA
    218130225U,	// CXLFBR
    218131300U,	// CXLFTR
    218130270U,	// CXLGBR
    218131337U,	// CXLGTR
    234909547U,	// CXPT
    33582179U,	// CXR
    33582001U,	// CXSTR
    33582029U,	// CXTR
    33582015U,	// CXUTR
    234909664U,	// CXZT
    134246533U,	// CY
    234909458U,	// CZDT
    234909652U,	// CZXT
    0U,	// CallBASR
    0U,	// CallBCR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallBRCL
    0U,	// CallJG
    0U,	// CondReturn
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore32Mux
    0U,	// CondStore32MuxInv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    0U,	// CondTrap
    17926U,	// D
    17933U,	// DD
    16856U,	// DDB
    16803358U,	// DDBR
    16803857U,	// DDR
    1107323601U,	// DDTR
    1107312893U,	// DDTRA
    18117U,	// DE
    17152U,	// DEB
    16803491U,	// DEBR
    16803995U,	// DER
    1107322441U,	// DIDBR
    1107322581U,	// DIEBR
    24191U,	// DL
    21145U,	// DLG
    16804286U,	// DLGR
    16804435U,	// DLR
    117499042U,	// DP
    16803841U,	// DR
    21332U,	// DSG
    20332U,	// DSGF
    16804203U,	// DSGFR
    16804323U,	// DSGR
    16803713U,	// DXBR
    16804969U,	// DXR
    1107323860U,	// DXTR
    1107312945U,	// DXTRA
    33580550U,	// EAR
    1107317121U,	// ECAG
    1543541624U,	// ECTG
    302040595U,	// ED
    302046637U,	// EDMK
    33581790U,	// EEDTR
    33582049U,	// EEXTR
    3163589U,	// EFPC
    33583196U,	// EPSW
    33581874U,	// ESDTR
    33582126U,	// ESXTR
    3163710U,	// ETND
    134246503U,	// EX
    268460374U,	// EXRL
    218130000U,	// FIDBR
    218120305U,	// FIDBRA
    33581115U,	// FIDR
    218131217U,	// FIDTR
    218130140U,	// FIEBR
    218120329U,	// FIEBRA
    33581259U,	// FIER
    218130348U,	// FIXBR
    218120417U,	// FIXBRA
    33582208U,	// FIXR
    218131469U,	// FIXTR
    33581526U,	// FLOGR
    0U,	// GOT
    33581110U,	// HDR
    33581247U,	// HER
    17807U,	// IC
    17807U,	// IC32
    28804U,	// IC32Y
    486564320U,	// ICM
    486562102U,	// ICMH
    486568204U,	// ICMY
    28804U,	// ICY
    1090546405U,	// IEDTR
    1090546664U,	// IEXTR
    0U,	// IIFMux
    369119129U,	// IIHF
    0U,	// IIHF64
    352343355U,	// IIHH
    0U,	// IIHH64
    352345793U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    369119274U,	// IILF
    0U,	// IILF64
    352343747U,	// IILH
    0U,	// IILH64
    352345906U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    3171041U,	// IPM
    3306053U,	// InsnE
    1579332262U,	// InsnRI
    505606734U,	// InsnRIE
    3726832325U,	// InsnRIL
    2653090584U,	// InsnRILU
    3726832366U,	// InsnRIS
    5927643U,	// InsnRR
    505590361U,	// InsnRRE
    505590405U,	// InsnRRF
    505606915U,	// InsnRRS
    505590521U,	// InsnRS
    505606756U,	// InsnRSE
    505606842U,	// InsnRSI
    505606969U,	// InsnRSY
    2653074212U,	// InsnRX
    2653090426U,	// InsnRXE
    505606811U,	// InsnRXF
    2653090628U,	// InsnRXY
    157463269U,	// InsnS
    509784752U,	// InsnSI
    1583542992U,	// InsnSIL
    2657284910U,	// InsnSIY
    7009038U,	// InsnSS
    3731026543U,	// InsnSSE
    3731026576U,	// InsnSSF
    204082U,	// J
    199114U,	// JAsmE
    202196U,	// JAsmH
    198557U,	// JAsmHE
    204540U,	// JAsmL
    199355U,	// JAsmLE
    202462U,	// JAsmLH
    205390U,	// JAsmM
    200067U,	// JAsmNE
    203272U,	// JAsmNH
    198789U,	// JAsmNHE
    204806U,	// JAsmNL
    199593U,	// JAsmNLE
    202722U,	// JAsmNLH
    205499U,	// JAsmNM
    205866U,	// JAsmNO
    206177U,	// JAsmNP
    209410U,	// JAsmNZ
    205743U,	// JAsmO
    206073U,	// JAsmP
    209309U,	// JAsmZ
    201335U,	// JG
    198376U,	// JGAsmE
    201980U,	// JGAsmH
    198501U,	// JGAsmHE
    204446U,	// JGAsmL
    199299U,	// JGAsmLE
    202366U,	// JGAsmLH
    205330U,	// JGAsmM
    200011U,	// JGAsmNE
    203216U,	// JGAsmNH
    198727U,	// JGAsmNHE
    204750U,	// JGAsmNL
    199531U,	// JGAsmNLE
    202660U,	// JGAsmNLH
    205445U,	// JGAsmNM
    205812U,	// JGAsmNO
    206123U,	// JGAsmNP
    209356U,	// JGAsmNZ
    205695U,	// JGAsmO
    206018U,	// JGAsmP
    209261U,	// JGAsmZ
    134234724U,	// KDB
    33580631U,	// KDBR
    33581848U,	// KDTR
    134234911U,	// KEB
    33580771U,	// KEBR
    3360306U,	// KIMD
    3360312U,	// KLMD
    33579602U,	// KM
    3360094U,	// KMAC
    33572263U,	// KMC
    1090546365U,	// KMCTR
    33575071U,	// KMF
    33579973U,	// KMO
    33580979U,	// KXBR
    33582100U,	// KXTR
    134241810U,	// L
    0U,	// L128
    134234179U,	// LA
    1107312677U,	// LAA
    1107317115U,	// LAAG
    1107320335U,	// LAAL
    1107317377U,	// LAALG
    134235757U,	// LAE
    134246560U,	// LAEY
    1107321295U,	// LAM
    1107325183U,	// LAMY
    1107321646U,	// LAN
    1107317522U,	// LANG
    1107321684U,	// LAO
    1107317534U,	// LAOG
    268460219U,	// LARL
    134246098U,	// LAT
    1107325026U,	// LAX
    1107317716U,	// LAXG
    134246516U,	// LAY
    134235133U,	// LB
    134239277U,	// LBH
    0U,	// LBMux
    33580910U,	// LBR
    1207976308U,	// LCBB
    33580567U,	// LCDBR
    33581337U,	// LCDFR
    33581337U,	// LCDFR_32
    33581067U,	// LCDR
    33580699U,	// LCEBR
    33581203U,	// LCER
    33581370U,	// LCGFR
    33581459U,	// LCGR
    33581038U,	// LCR
    33580921U,	// LCXBR
    33582178U,	// LCXR
    134235694U,	// LD
    134235844U,	// LDE
    134235844U,	// LDE32
    134234879U,	// LDEB
    33580706U,	// LDEBR
    33581216U,	// LDER
    1107323726U,	// LDETR
    33581478U,	// LDGR
    33581121U,	// LDR
    33581121U,	// LDR32
    33580928U,	// LDXBR
    218120385U,	// LDXBRA
    33582184U,	// LDXR
    218131411U,	// LDXTR
    134246543U,	// LDY
    134236682U,	// LE
    33580580U,	// LEDBR
    218120281U,	// LEDBRA
    33581085U,	// LEDR
    218131180U,	// LEDTR
    0U,	// LEFR
    33581266U,	// LER
    33580935U,	// LEXBR
    218120393U,	// LEXBRA
    33582190U,	// LEXR
    134246566U,	// LEY
    3189966U,	// LFAS
    0U,	// LFER
    134239451U,	// LFH
    134246091U,	// LFHAT
    3179979U,	// LFPC
    134238852U,	// LG
    134246085U,	// LGAT
    134235000U,	// LGB
    33580880U,	// LGBR
    33581103U,	// LGDR
    134238021U,	// LGF
    251681867U,	// LGFI
    33581378U,	// LGFR
    268460247U,	// LGFRL
    134239490U,	// LGH
    285236381U,	// LGHI
    33581591U,	// LGHR
    268460307U,	// LGHRL
    33581491U,	// LGR
    268460271U,	// LGRL
    134239763U,	// LH
    134239575U,	// LHH
    285236415U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    33581598U,	// LHR
    268460323U,	// LHRL
    134246592U,	// LHY
    134235549U,	// LLC
    134239329U,	// LLCH
    0U,	// LLCMux
    33581043U,	// LLCR
    0U,	// LLCRMux
    134235529U,	// LLGC
    33581030U,	// LLGCR
    134238032U,	// LLGF
    134246077U,	// LLGFAT
    33581391U,	// LLGFR
    268460254U,	// LLGFRL
    134239489U,	// LLGH
    33581590U,	// LLGHR
    268460314U,	// LLGHRL
    134246188U,	// LLGT
    134246103U,	// LLGTAT
    33581954U,	// LLGTR
    134240031U,	// LLH
    134239580U,	// LLHH
    0U,	// LLHMux
    33581603U,	// LLHR
    268460329U,	// LLHRL
    0U,	// LLHRMux
    369119135U,	// LLIHF
    385897793U,	// LLIHH
    385900231U,	// LLIHL
    369119280U,	// LLILF
    385898185U,	// LLILH
    385900344U,	// LLILL
    134238052U,	// LLZRGF
    1107321431U,	// LM
    1107314233U,	// LMD
    1107317504U,	// LMG
    1107319129U,	// LMH
    1107325210U,	// LMY
    0U,	// LMux
    33580643U,	// LNDBR
    33581344U,	// LNDFR
    33581344U,	// LNDFR_32
    33581131U,	// LNDR
    33580777U,	// LNEBR
    33581289U,	// LNER
    33581405U,	// LNGFR
    33581520U,	// LNGR
    33581701U,	// LNR
    33580991U,	// LNXBR
    33582224U,	// LNXR
    242742U,	// LOC
    1543521722U,	// LOCAsm
    469780150U,	// LOCAsmE
    469783661U,	// LOCAsmH
    469780276U,	// LOCAsmHE
    469786212U,	// LOCAsmL
    469781077U,	// LOCAsmLE
    469784158U,	// LOCAsmLH
    469787109U,	// LOCAsmM
    469781796U,	// LOCAsmNE
    469785008U,	// LOCAsmNH
    469780515U,	// LOCAsmNHE
    469786542U,	// LOCAsmNL
    469781319U,	// LOCAsmNLE
    469784448U,	// LOCAsmNLH
    469787237U,	// LOCAsmNM
    469787604U,	// LOCAsmNO
    469787915U,	// LOCAsmNP
    469791148U,	// LOCAsmNZ
    469787491U,	// LOCAsmO
    469787797U,	// LOCAsmP
    469791050U,	// LOCAsmZ
    242770U,	// LOCFH
    1543525580U,	// LOCFHAsm
    469780291U,	// LOCFHAsmE
    469783850U,	// LOCFHAsmH
    469780331U,	// LOCFHAsmHE
    469786288U,	// LOCFHAsmL
    469781129U,	// LOCFHAsmLE
    469784211U,	// LOCFHAsmLH
    469787164U,	// LOCFHAsmM
    469781841U,	// LOCFHAsmNE
    469785046U,	// LOCFHAsmNH
    469780558U,	// LOCFHAsmNHE
    469786580U,	// LOCFHAsmNL
    469781362U,	// LOCFHAsmNLE
    469784491U,	// LOCFHAsmNLH
    469787275U,	// LOCFHAsmNM
    469787642U,	// LOCFHAsmNO
    469787953U,	// LOCFHAsmNP
    469791186U,	// LOCFHAsmNZ
    469787524U,	// LOCFHAsmO
    469787854U,	// LOCFHAsmP
    469791090U,	// LOCFHAsmZ
    7599293U,	// LOCFHR
    1090546190U,	// LOCFHRAsm
    16797254U,	// LOCFHRAsmE
    16800516U,	// LOCFHRAsmH
    16795988U,	// LOCFHRAsmHE
    16802050U,	// LOCFHRAsmL
    16796792U,	// LOCFHRAsmLE
    16799935U,	// LOCFHRAsmLH
    16802561U,	// LOCFHRAsmM
    16797144U,	// LOCFHRAsmNE
    16800349U,	// LOCFHRAsmNH
    16795870U,	// LOCFHRAsmNHE
    16801883U,	// LOCFHRAsmNL
    16796674U,	// LOCFHRAsmNLE
    16799810U,	// LOCFHRAsmNLH
    16802513U,	// LOCFHRAsmNM
    16802886U,	// LOCFHRAsmNO
    16803191U,	// LOCFHRAsmNP
    16806424U,	// LOCFHRAsmNZ
    16802929U,	// LOCFHRAsmO
    16803221U,	// LOCFHRAsmP
    16806449U,	// LOCFHRAsmZ
    242756U,	// LOCG
    1543524842U,	// LOCGAsm
    469780185U,	// LOCGAsmE
    469783782U,	// LOCGAsmH
    469780308U,	// LOCGAsmHE
    469786255U,	// LOCGAsmL
    469781106U,	// LOCGAsmLE
    469784173U,	// LOCGAsmLH
    469787139U,	// LOCGAsmM
    469781818U,	// LOCGAsmNE
    469785023U,	// LOCGAsmNH
    469780532U,	// LOCGAsmNHE
    469786557U,	// LOCGAsmNL
    469781336U,	// LOCGAsmNLE
    469784465U,	// LOCGAsmNLH
    469787252U,	// LOCGAsmNM
    469787619U,	// LOCGAsmNO
    469787930U,	// LOCGAsmNP
    469791163U,	// LOCGAsmNZ
    469787504U,	// LOCGAsmO
    469787827U,	// LOCGAsmP
    469791070U,	// LOCGAsmZ
    8123493U,	// LOCGHI
    1140874389U,	// LOCGHIAsm
    67127734U,	// LOCGHIAsmE
    67130802U,	// LOCGHIAsmH
    67127175U,	// LOCGHIAsmHE
    67133160U,	// LOCGHIAsmL
    67127973U,	// LOCGHIAsmLE
    67131055U,	// LOCGHIAsmLH
    67134005U,	// LOCGHIAsmM
    67128685U,	// LOCGHIAsmNE
    67131890U,	// LOCGHIAsmNH
    67127405U,	// LOCGHIAsmNHE
    67133424U,	// LOCGHIAsmNL
    67128209U,	// LOCGHIAsmNLE
    67131338U,	// LOCGHIAsmNLH
    67134119U,	// LOCGHIAsmNM
    67134486U,	// LOCGHIAsmNO
    67134797U,	// LOCGHIAsmNP
    67138030U,	// LOCGHIAsmNZ
    67134365U,	// LOCGHIAsmO
    67134695U,	// LOCGHIAsmP
    67137931U,	// LOCGHIAsmZ
    7599287U,	// LOCGR
    1090546073U,	// LOCGRAsm
    16797246U,	// LOCGRAsmE
    16800508U,	// LOCGRAsmH
    16795979U,	// LOCGRAsmHE
    16802022U,	// LOCGRAsmL
    16796783U,	// LOCGRAsmLE
    16799926U,	// LOCGRAsmLH
    16802553U,	// LOCGRAsmM
    16797135U,	// LOCGRAsmNE
    16800340U,	// LOCGRAsmNH
    16795860U,	// LOCGRAsmNHE
    16801874U,	// LOCGRAsmNL
    16796664U,	// LOCGRAsmNLE
    16799800U,	// LOCGRAsmNLH
    16802504U,	// LOCGRAsmNM
    16802877U,	// LOCGRAsmNO
    16803182U,	// LOCGRAsmNP
    16806415U,	// LOCGRAsmNZ
    16802921U,	// LOCGRAsmO
    16803213U,	// LOCGRAsmP
    16806441U,	// LOCGRAsmZ
    8123500U,	// LOCHHI
    1140874416U,	// LOCHHIAsm
    67127743U,	// LOCHHIAsmE
    67130811U,	// LOCHHIAsmH
    67127185U,	// LOCHHIAsmHE
    67133169U,	// LOCHHIAsmL
    67127983U,	// LOCHHIAsmLE
    67131065U,	// LOCHHIAsmLH
    67134014U,	// LOCHHIAsmM
    67128695U,	// LOCHHIAsmNE
    67131900U,	// LOCHHIAsmNH
    67127416U,	// LOCHHIAsmNHE
    67133434U,	// LOCHHIAsmNL
    67128220U,	// LOCHHIAsmNLE
    67131349U,	// LOCHHIAsmNLH
    67134129U,	// LOCHHIAsmNM
    67134496U,	// LOCHHIAsmNO
    67134807U,	// LOCHHIAsmNP
    67138040U,	// LOCHHIAsmNZ
    67134374U,	// LOCHHIAsmO
    67134704U,	// LOCHHIAsmP
    67137940U,	// LOCHHIAsmZ
    8123487U,	// LOCHI
    1140874376U,	// LOCHIAsm
    67127726U,	// LOCHIAsmE
    67130794U,	// LOCHIAsmH
    67127166U,	// LOCHIAsmHE
    67133152U,	// LOCHIAsmL
    67127964U,	// LOCHIAsmLE
    67131046U,	// LOCHIAsmLH
    67133997U,	// LOCHIAsmM
    67128676U,	// LOCHIAsmNE
    67131881U,	// LOCHIAsmNH
    67127395U,	// LOCHIAsmNHE
    67133415U,	// LOCHIAsmNL
    67128199U,	// LOCHIAsmNLE
    67131328U,	// LOCHIAsmNLH
    67134110U,	// LOCHIAsmNM
    67134477U,	// LOCHIAsmNO
    67134788U,	// LOCHIAsmNP
    67138021U,	// LOCHIAsmNZ
    67134357U,	// LOCHIAsmO
    67134687U,	// LOCHIAsmP
    67137923U,	// LOCHIAsmZ
    0U,	// LOCHIMux
    0U,	// LOCMux
    7599282U,	// LOCR
    1090545657U,	// LOCRAsm
    16797239U,	// LOCRAsmE
    16800501U,	// LOCRAsmH
    16795971U,	// LOCRAsmHE
    16801985U,	// LOCRAsmL
    16796775U,	// LOCRAsmLE
    16799918U,	// LOCRAsmLH
    16802539U,	// LOCRAsmM
    16797127U,	// LOCRAsmNE
    16800332U,	// LOCRAsmNH
    16795851U,	// LOCRAsmNHE
    16801866U,	// LOCRAsmNL
    16796655U,	// LOCRAsmNLE
    16799791U,	// LOCRAsmNLH
    16802496U,	// LOCRAsmNM
    16802869U,	// LOCRAsmNO
    16803174U,	// LOCRAsmNP
    16806407U,	// LOCRAsmNZ
    16802907U,	// LOCRAsmO
    16803206U,	// LOCRAsmP
    16806434U,	// LOCRAsmZ
    0U,	// LOCRMux
    1509967428U,	// LPD
    33580650U,	// LPDBR
    33581351U,	// LPDFR
    33581351U,	// LPDFR_32
    1509970429U,	// LPDG
    33581137U,	// LPDR
    33580784U,	// LPEBR
    33581295U,	// LPER
    33581412U,	// LPGFR
    33581533U,	// LPGR
    134243824U,	// LPQ
    33581722U,	// LPR
    33580998U,	// LPXBR
    33582230U,	// LPXR
    33581637U,	// LR
    33581149U,	// LRDR
    33581307U,	// LRER
    268460344U,	// LRL
    0U,	// LRMux
    134246454U,	// LRV
    134239175U,	// LRVG
    33581564U,	// LRVGR
    134241195U,	// LRVH
    33582157U,	// LRVR
    134246220U,	// LT
    33580671U,	// LTDBR
    33580671U,	// LTDBRCompare
    0U,	// LTDBRCompare_VecPseudo
    33581168U,	// LTDR
    33581881U,	// LTDTR
    33580805U,	// LTEBR
    33580805U,	// LTEBRCompare
    0U,	// LTEBRCompare_VecPseudo
    33581319U,	// LTER
    134239109U,	// LTG
    134238072U,	// LTGF
    33581433U,	// LTGFR
    33581558U,	// LTGR
    33581976U,	// LTR
    33581018U,	// LTXBR
    33581018U,	// LTXBRCompare
    0U,	// LTXBRCompare_VecPseudo
    33582247U,	// LTXR
    33582133U,	// LTXTR
    0U,	// LX
    134235741U,	// LXD
    134234846U,	// LXDB
    33580678U,	// LXDBR
    33581174U,	// LXDR
    1107323719U,	// LXDTR
    134237874U,	// LXE
    134234970U,	// LXEB
    33580812U,	// LXEBR
    33581325U,	// LXER
    33582214U,	// LXR
    134246641U,	// LY
    3172482U,	// LZDR
    3172627U,	// LZER
    134238450U,	// LZRF
    134239048U,	// LZRG
    3173549U,	// LZXR
    25041U,	// M
    1090536964U,	// MAD
    1090535851U,	// MADB
    1090545168U,	// MADBR
    1090545663U,	// MADR
    1090537075U,	// MAE
    1090536178U,	// MAEB
    1090545300U,	// MAEBR
    1090545800U,	// MAER
    1090547833U,	// MAY
    1090542537U,	// MAYH
    1090546230U,	// MAYHR
    1090544068U,	// MAYL
    1090546285U,	// MAYLR
    1090546867U,	// MAYR
    453019048U,	// MC
    17972U,	// MD
    17010U,	// MDB
    16803421U,	// MDBR
    18121U,	// MDE
    17164U,	// MDEB
    16803497U,	// MDEBR
    16804006U,	// MDER
    16803910U,	// MDR
    1107323678U,	// MDTR
    1107312908U,	// MDTRA
    19680U,	// ME
    18132U,	// MEE
    17177U,	// MEEB
    16803504U,	// MEEBR
    16804012U,	// MEER
    16804062U,	// MER
    28849U,	// MFY
    67132579U,	// MGHI
    22840U,	// MH
    67132612U,	// MHI
    28869U,	// MHY
    24426U,	// ML
    21179U,	// MLG
    16804292U,	// MLGR
    16804440U,	// MLR
    117499138U,	// MP
    16804475U,	// MR
    28337U,	// MS
    1090537038U,	// MSD
    1090536144U,	// MSDB
    1090545272U,	// MSDBR
    1090545763U,	// MSDR
    1090539094U,	// MSE
    1090536269U,	// MSEB
    1090545406U,	// MSEBR
    1090545921U,	// MSER
    50355320U,	// MSFI
    21352U,	// MSG
    20338U,	// MSGF
    50355295U,	// MSGFI
    16804210U,	// MSGFR
    16804329U,	// MSGR
    16804530U,	// MSR
    28984U,	// MSY
    302040566U,	// MVC
    302048059U,	// MVCIN
    269688U,	// MVCK
    33578615U,	// MVCL
    1107315300U,	// MVCLE
    1107324927U,	// MVCLU
    0U,	// MVCLoop
    0U,	// MVCSequence
    67148969U,	// MVGHI
    67148984U,	// MVHHI
    67149001U,	// MVHI
    453025063U,	// MVI
    453030117U,	// MVIY
    302048079U,	// MVN
    117499015U,	// MVO
    33583016U,	// MVST
    0U,	// MVSTLoop
    302051904U,	// MVZ
    16803769U,	// MXBR
    18018U,	// MXD
    17124U,	// MXDB
    16803469U,	// MXDBR
    16803964U,	// MXDR
    16805003U,	// MXR
    1107323930U,	// MXTR
    1107312960U,	// MXTRA
    1107325185U,	// MY
    1107319759U,	// MYH
    1107323453U,	// MYHR
    1107321290U,	// MYL
    1107323508U,	// MYLR
    1107324089U,	// MYR
    0U,	// MemBarrier
    25392U,	// N
    302040497U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    21268U,	// NG
    16804305U,	// NGR
    1107320279U,	// NGRK
    453024980U,	// NI
    8494092U,	// NIAI
    0U,	// NIFMux
    100683686U,	// NIHF
    0U,	// NIHF64
    352343368U,	// NIHH
    0U,	// NIHH64
    352345806U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    100683831U,	// NILF
    0U,	// NILF64
    352343760U,	// NILH
    0U,	// NILH64
    352345919U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    453030107U,	// NIY
    16804486U,	// NR
    1107320315U,	// NRK
    134239114U,	// NTSTG
    28965U,	// NY
    25430U,	// O
    302040507U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    21280U,	// OG
    16804312U,	// OGR
    1107320285U,	// OGRK
    453024984U,	// OI
    0U,	// OIFMux
    100683692U,	// OIHF
    0U,	// OIHF64
    352343374U,	// OIHH
    0U,	// OIHH64
    352345812U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    100683837U,	// OILF
    0U,	// OILF64
    352343766U,	// OILH
    0U,	// OILH64
    352345925U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    453030112U,	// OIY
    16804491U,	// OR
    1107320320U,	// ORK
    28969U,	// OY
    117497196U,	// PACK
    13362U,	// PCC
    1148439U,	// PFD
    153723080U,	// PFDRL
    13485U,	// PFPO
    520126525U,	// PKA
    520138739U,	// PKU
    1509974976U,	// PLO
    33582935U,	// POPCNT
    1107312724U,	// PPA
    33580079U,	// PPNO
    13508U,	// PR
    1107323588U,	// QADTR
    1107323846U,	// QAXTR
    1090539951U,	// RISBG
    1090539951U,	// RISBG32
    1090544435U,	// RISBGN
    1090540094U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    1090540168U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    1107320666U,	// RLL
    1107317423U,	// RLLG
    1090539958U,	// RNSBG
    1090539965U,	// ROSBG
    1107323684U,	// RRDTR
    1107323936U,	// RRXTR
    1090539972U,	// RXSBG
    0U,	// Return
    27851U,	// S
    13265U,	// SAM24
    13259U,	// SAM31
    13271U,	// SAM64
    33580555U,	// SAR
    17999U,	// SD
    17090U,	// SDB
    16803449U,	// SDBR
    16803940U,	// SDR
    1107323692U,	// SDTR
    1107312915U,	// SDTRA
    20055U,	// SE
    17230U,	// SEB
    16803583U,	// SEBR
    16804098U,	// SER
    3173035U,	// SFASR
    3163601U,	// SFPC
    21327U,	// SG
    20333U,	// SGF
    16804204U,	// SGFR
    16804324U,	// SGR
    1107320291U,	// SGRK
    23326U,	// SH
    28874U,	// SHY
    24927U,	// SL
    469778498U,	// SLA
    1107317127U,	// SLAG
    1107320160U,	// SLAK
    17491U,	// SLB
    20905U,	// SLBG
    16804235U,	// SLBGR
    16803693U,	// SLBR
    469778474U,	// SLDA
    469786237U,	// SLDL
    1107324672U,	// SLDT
    100686962U,	// SLFI
    21208U,	// SLG
    20310U,	// SLGF
    100686936U,	// SLGFI
    16804182U,	// SLGFR
    16804298U,	// SLGR
    1107320272U,	// SLGRK
    469786463U,	// SLL
    1107317429U,	// SLLG
    1107320225U,	// SLLK
    16804451U,	// SLR
    1107320309U,	// SLRK
    1107324866U,	// SLXT
    28922U,	// SLY
    117499305U,	// SP
    3171046U,	// SPM
    134235721U,	// SQD
    134234802U,	// SQDB
    33580657U,	// SQDBR
    33581143U,	// SQDR
    134237746U,	// SQE
    134234951U,	// SQEB
    33580791U,	// SQEBR
    33581301U,	// SQER
    33581005U,	// SQXBR
    33582236U,	// SQXR
    16804519U,	// SR
    469778667U,	// SRA
    1107317143U,	// SRAG
    1107320166U,	// SRAK
    469778480U,	// SRDA
    469786243U,	// SRDL
    1107324684U,	// SRDT
    1107320325U,	// SRK
    469786949U,	// SRL
    1107317456U,	// SRLG
    1107320231U,	// SRLK
    3187419U,	// SRNM
    3179642U,	// SRNMB
    3190608U,	// SRNMT
    1375790500U,	// SRP
    33583004U,	// SRST
    0U,	// SRSTLoop
    33583114U,	// SRSTU
    1107324878U,	// SRXT
    134246296U,	// ST
    0U,	// ST128
    1107321300U,	// STAM
    1107325189U,	// STAMY
    134235633U,	// STC
    134239362U,	// STCH
    3186034U,	// STCK
    3181056U,	// STCKE
    3182592U,	// STCKF
    2365612530U,	// STCM
    2365610300U,	// STCMH
    2365616402U,	// STCMY
    0U,	// STCMux
    134246537U,	// STCY
    134235731U,	// STD
    134246548U,	// STDY
    134237869U,	// STE
    134246571U,	// STEY
    134239456U,	// STFH
    3181163U,	// STFLE
    3179991U,	// STFPC
    134239116U,	// STG
    268460277U,	// STGRL
    134241148U,	// STH
    134239627U,	// STHH
    0U,	// STHMux
    268460336U,	// STHRL
    134246607U,	// STHY
    1107321630U,	// STM
    1107317509U,	// STMG
    1107319134U,	// STMH
    1107325215U,	// STMY
    0U,	// STMux
    157545530U,	// STOC
    1509967295U,	// STOCAsm
    436225724U,	// STOCAsmE
    436229235U,	// STOCAsmH
    436225851U,	// STOCAsmHE
    436231786U,	// STOCAsmL
    436226652U,	// STOCAsmLE
    436229733U,	// STOCAsmLH
    436232683U,	// STOCAsmM
    436227371U,	// STOCAsmNE
    436230583U,	// STOCAsmNH
    436226091U,	// STOCAsmNHE
    436232117U,	// STOCAsmNL
    436226895U,	// STOCAsmNLE
    436230024U,	// STOCAsmNLH
    436232812U,	// STOCAsmNM
    436233179U,	// STOCAsmNO
    436233490U,	// STOCAsmNP
    436236723U,	// STOCAsmNZ
    436233065U,	// STOCAsmO
    436233371U,	// STOCAsmP
    436236624U,	// STOCAsmZ
    157545560U,	// STOCFH
    1509971155U,	// STOCFHAsm
    436225867U,	// STOCFHAsmE
    436229426U,	// STOCFHAsmH
    436225908U,	// STOCFHAsmHE
    436231864U,	// STOCFHAsmL
    436226706U,	// STOCFHAsmLE
    436229788U,	// STOCFHAsmLH
    436232740U,	// STOCFHAsmM
    436227418U,	// STOCFHAsmNE
    436230623U,	// STOCFHAsmNH
    436226136U,	// STOCFHAsmNHE
    436232157U,	// STOCFHAsmNL
    436226940U,	// STOCFHAsmNLE
    436230069U,	// STOCFHAsmNLH
    436232852U,	// STOCFHAsmNM
    436233219U,	// STOCFHAsmNO
    436233530U,	// STOCFHAsmNP
    436236763U,	// STOCFHAsmNZ
    436233100U,	// STOCFHAsmO
    436233430U,	// STOCFHAsmP
    436236666U,	// STOCFHAsmZ
    157545545U,	// STOCG
    1509970416U,	// STOCGAsm
    436225760U,	// STOCGAsmE
    436229357U,	// STOCGAsmH
    436225884U,	// STOCGAsmHE
    436231830U,	// STOCGAsmL
    436226682U,	// STOCGAsmLE
    436229749U,	// STOCGAsmLH
    436232714U,	// STOCGAsmM
    436227394U,	// STOCGAsmNE
    436230599U,	// STOCGAsmNH
    436226109U,	// STOCGAsmNHE
    436232133U,	// STOCGAsmNL
    436226913U,	// STOCGAsmNLE
    436230042U,	// STOCGAsmNLH
    436232828U,	// STOCGAsmNM
    436233195U,	// STOCGAsmNO
    436233506U,	// STOCGAsmNP
    436236739U,	// STOCGAsmNZ
    436233079U,	// STOCGAsmO
    436233402U,	// STOCGAsmP
    436236645U,	// STOCGAsmZ
    0U,	// STOCMux
    134243829U,	// STPQ
    469799325U,	// STRAG
    268460368U,	// STRL
    134246459U,	// STRV
    134239181U,	// STRVG
    134241201U,	// STRVH
    0U,	// STX
    134246717U,	// STY
    28678U,	// SU
    16804936U,	// SUR
    280059U,	// SVC
    28766U,	// SW
    16804952U,	// SWR
    16803796U,	// SXBR
    16805026U,	// SXR
    1107323944U,	// SXTR
    1107312967U,	// SXTRA
    28974U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    3190665U,	// TABORT
    13481U,	// TAM
    218130437U,	// TBDR
    218130454U,	// TBEDR
    352363330U,	// TBEGIN
    352355756U,	// TBEGINC
    0U,	// TBEGIN_nofloat
    134234576U,	// TCDB
    134234872U,	// TCEB
    134235418U,	// TCXB
    134246130U,	// TDCDT
    134246168U,	// TDCET
    134246324U,	// TDCXT
    134246137U,	// TDGDT
    134246175U,	// TDGET
    134246331U,	// TDGXT
    13375U,	// TEND
    33581209U,	// THDER
    33581109U,	// THDR
    0U,	// TLS_GDCALL
    0U,	// TLS_LDCALL
    453026591U,	// TM
    385897841U,	// TMHH
    0U,	// TMHH64
    385900250U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    385898284U,	// TMLH
    0U,	// TMLH64
    385900363U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    453030176U,	// TMY
    3204525U,	// TP
    302049977U,	// TR
    33574481U,	// TRE
    1107321941U,	// TROO
    33580117U,	// TROOOpt
    1107324767U,	// TROT
    33582943U,	// TROTOpt
    302051217U,	// TRT
    419647143U,	// TRTE
    3362471U,	// TRTEOpt
    1107321985U,	// TRTO
    33580161U,	// TRTOOpt
    302050205U,	// TRTR
    419647055U,	// TRTRE
    3362383U,	// TRTREOpt
    1107324846U,	// TRTT
    33583022U,	// TRTTOpt
    3190453U,	// TS
    0U,	// Trap
    117497267U,	// UNPK
    302039099U,	// UNPKA
    302051313U,	// UNPKU
    13541U,	// UPT
    1107312974U,	// VA
    1107313007U,	// VAB
    1107314020U,	// VAC
    1107314029U,	// VACC
    1107313024U,	// VACCB
    1107314035U,	// VACCC
    1107322307U,	// VACCCQ
    1107316428U,	// VACCF
    1107317201U,	// VACCG
    1107317838U,	// VACCH
    1107322300U,	// VACCQ
    1107322294U,	// VACQ
    1107316423U,	// VAF
    1107317156U,	// VAG
    1107317772U,	// VAH
    1107322289U,	// VAQ
    1107317658U,	// VAVG
    1107313541U,	// VAVGB
    1107316606U,	// VAVGF
    1107317296U,	// VAVGG
    1107318031U,	// VAVGH
    1107320483U,	// VAVGL
    1107313672U,	// VAVGLB
    1107316763U,	// VAVGLF
    1107317406U,	// VAVGLG
    1107318404U,	// VAVGLH
    1107317239U,	// VCDG
    1107313504U,	// VCDGB
    1107317399U,	// VCDLG
    1107313525U,	// VCDLGB
    1107322315U,	// VCEQ
    1107313855U,	// VCEQB
    1107324227U,	// VCEQBS
    1107316955U,	// VCEQF
    1107324340U,	// VCEQFS
    1107317561U,	// VCEQG
    1107324432U,	// VCEQGS
    1107319534U,	// VCEQH
    1107324506U,	// VCEQHS
    1107314209U,	// VCGD
    1107313172U,	// VCGDB
    1107317896U,	// VCH
    1107313562U,	// VCHB
    1107324212U,	// VCHBS
    1107316627U,	// VCHF
    1107324325U,	// VCHFS
    1107317318U,	// VCHG
    1107324417U,	// VCHGS
    1107318052U,	// VCHH
    1107324491U,	// VCHHS
    1107320490U,	// VCHL
    1107313680U,	// VCHLB
    1107324219U,	// VCHLBS
    1107316771U,	// VCHLF
    1107324332U,	// VCHLFS
    1107317414U,	// VCHLG
    1107324424U,	// VCHLGS
    1107318412U,	// VCHLH
    1107324498U,	// VCHLHS
    1107321615U,	// VCKSM
    1107314215U,	// VCLGD
    1107313186U,	// VCLGDB
    1107325345U,	// VCLZ
    33572176U,	// VCLZB
    33575277U,	// VCLZF
    33575912U,	// VCLZG
    33577982U,	// VCLZH
    1107325498U,	// VCTZ
    33572183U,	// VCTZB
    33575284U,	// VCTZF
    33575919U,	// VCTZG
    33577989U,	// VCTZH
    1107314042U,	// VEC
    33571207U,	// VECB
    33574611U,	// VECF
    33575384U,	// VECG
    33576021U,	// VECH
    1107320408U,	// VECL
    33571841U,	// VECLB
    33574932U,	// VECLF
    33575568U,	// VECLG
    33576535U,	// VECLH
    1090544199U,	// VERIM
    1090536562U,	// VERIMB
    1090539671U,	// VERIMF
    1090540280U,	// VERIMG
    1090541904U,	// VERIMH
    1107320664U,	// VERLL
    1107313695U,	// VERLLB
    1107316817U,	// VERLLF
    1107317421U,	// VERLLG
    1107318564U,	// VERLLH
    1107324959U,	// VERLLV
    1107313920U,	// VERLLVB
    1107317027U,	// VERLLVF
    1107317671U,	// VERLLVG
    1107319697U,	// VERLLVH
    1107321187U,	// VESL
    1107313745U,	// VESLB
    1107316860U,	// VESLF
    1107317462U,	// VESLG
    1107319000U,	// VESLH
    1107324975U,	// VESLV
    1107313938U,	// VESLVB
    1107317045U,	// VESLVF
    1107317689U,	// VESLVG
    1107319715U,	// VESLVH
    1107312873U,	// VESRA
    1107312992U,	// VESRAB
    1107316415U,	// VESRAF
    1107317141U,	// VESRAG
    1107317764U,	// VESRAH
    1107324945U,	// VESRAV
    1107313899U,	// VESRAVB
    1107317011U,	// VESRAVF
    1107317649U,	// VESRAVG
    1107319681U,	// VESRAVH
    1107321155U,	// VESRL
    1107313730U,	// VESRLB
    1107316852U,	// VESRLF
    1107317454U,	// VESRLG
    1107318992U,	// VESRLH
    1107324967U,	// VESRLV
    1107313929U,	// VESRLVB
    1107317036U,	// VESRLVF
    1107317680U,	// VESRLVG
    1107319706U,	// VESRLVH
    1107312694U,	// VFA
    1107313051U,	// VFADB
    1107314279U,	// VFAE
    1107313386U,	// VFAEB
    1107324187U,	// VFAEBS
    1107316455U,	// VFAEF
    1107324300U,	// VFAEFS
    1107317901U,	// VFAEH
    1107324466U,	// VFAEHS
    1107313967U,	// VFAEZB
    1107324254U,	// VFAEZBS
    1107317068U,	// VFAEZF
    1107324389U,	// VFAEZFS
    1107319773U,	// VFAEZH
    1107324550U,	// VFAEZHS
    1107314352U,	// VFCE
    1107313124U,	// VFCEDB
    1107324131U,	// VFCEDBS
    1107317851U,	// VFCH
    1107313202U,	// VFCHDB
    1107324169U,	// VFCHDBS
    1107314477U,	// VFCHE
    1107313140U,	// VFCHEDB
    1107324149U,	// VFCHEDBS
    1107314204U,	// VFD
    1107313110U,	// VFDDB
    1107314382U,	// VFEE
    1107313426U,	// VFEEB
    1107324195U,	// VFEEBS
    1107316476U,	// VFEEF
    1107324308U,	// VFEEFS
    1107317915U,	// VFEEH
    1107324474U,	// VFEEHS
    1107313975U,	// VFEEZB
    1107324263U,	// VFEEZBS
    1107317076U,	// VFEEZF
    1107324398U,	// VFEEZFS
    1107319781U,	// VFEEZH
    1107324559U,	// VFEEZHS
    1107316019U,	// VFENE
    1107313471U,	// VFENEB
    1107324203U,	// VFENEBS
    1107316516U,	// VFENEF
    1107324316U,	// VFENEFS
    1107317949U,	// VFENEH
    1107324482U,	// VFENEHS
    1107313991U,	// VFENEZB
    1107324272U,	// VFENEZBS
    1107317092U,	// VFENEZF
    1107324407U,	// VFENEZFS
    1107319797U,	// VFENEZH
    1107324568U,	// VFENEZHS
    1107319934U,	// VFI
    1107313236U,	// VFIDB
    33571264U,	// VFLCDB
    33571454U,	// VFLNDB
    33571488U,	// VFLPDB
    1107321342U,	// VFM
    1107312718U,	// VFMA
    1107313065U,	// VFMADB
    1107313264U,	// VFMDB
    1107324591U,	// VFMS
    1107313358U,	// VFMSDB
    1107321978U,	// VFPSO
    1107313294U,	// VFPSODB
    1107324374U,	// VFS
    1107313344U,	// VFSDB
    1107322363U,	// VFSQ
    33571504U,	// VFSQDB
    1107319847U,	// VFTCI
    1107313218U,	// VFTCIDB
    385901018U,	// VGBM
    3758116611U,	// VGEF
    536891920U,	// VGEG
    1107321336U,	// VGFM
    1107312711U,	// VGFMA
    1107312984U,	// VGFMAB
    1107316407U,	// VGFMAF
    1107317133U,	// VGFMAG
    1107317750U,	// VGFMAH
    1107313765U,	// VGFMB
    1107316874U,	// VGFMF
    1107317483U,	// VGFMG
    1107319107U,	// VGFMH
    1476420119U,	// VGM
    1476412524U,	// VGMB
    1476415633U,	// VGMF
    1476416242U,	// VGMG
    1476417866U,	// VGMH
    1107323818U,	// VISTR
    1107313886U,	// VISTRB
    33582411U,	// VISTRBS
    1107316970U,	// VISTRF
    33582524U,	// VISTRFS
    1107319571U,	// VISTRH
    33582690U,	// VISTRHS
    134242746U,	// VL
    0U,	// VL32
    0U,	// VL64
    1207976314U,	// VLBB
    1107314082U,	// VLC
    33571213U,	// VLCB
    33574617U,	// VLCF
    33575396U,	// VLCG
    33576039U,	// VLCH
    1107314371U,	// VLDE
    33571582U,	// VLDEB
    1073759027U,	// VLEB
    1107314193U,	// VLED
    1107313158U,	// VLEDB
    1073762072U,	// VLEF
    1073762838U,	// VLEG
    1073763505U,	// VLEH
    1140868056U,	// VLEIB
    1140871153U,	// VLEIF
    1140871784U,	// VLEIG
    1140872611U,	// VLEIH
    1107324953U,	// VLGV
    1107313913U,	// VLGVB
    1107317020U,	// VLGVF
    1107317664U,	// VLGVG
    1107319690U,	// VLGVH
    1107320676U,	// VLL
    1207988567U,	// VLLEZ
    134235455U,	// VLLEZB
    134238556U,	// VLLEZF
    134239200U,	// VLLEZG
    134241261U,	// VLLEZH
    1107321435U,	// VLM
    1107322109U,	// VLP
    33572025U,	// VLPB
    33575125U,	// VLPF
    33575731U,	// VLPG
    33577698U,	// VLPH
    33581672U,	// VLR
    0U,	// VLR32
    0U,	// VLR64
    1207985318U,	// VLREP
    134235306U,	// VLREPB
    134238406U,	// VLREPF
    134239012U,	// VLREPG
    134240979U,	// VLREPH
    1090540481U,	// VLVG
    1090536332U,	// VLVGB
    1090539397U,	// VLVGF
    1090540087U,	// VLVGG
    1090540822U,	// VLVGH
    1107322055U,	// VLVGP
    0U,	// VLVGP32
    1107314290U,	// VMAE
    1107313393U,	// VMAEB
    1107316462U,	// VMAEF
    1107317908U,	// VMAEH
    1107317758U,	// VMAH
    1107313555U,	// VMAHB
    1107316620U,	// VMAHF
    1107318045U,	// VMAHH
    1107320346U,	// VMAL
    1107313658U,	// VMALB
    1107315207U,	// VMALE
    1107313444U,	// VMALEB
    1107316489U,	// VMALEF
    1107317922U,	// VMALEH
    1107316749U,	// VMALF
    1107318288U,	// VMALH
    1107313568U,	// VMALHB
    1107316664U,	// VMALHF
    1107318100U,	// VMALHH
    1107324997U,	// VMALHW
    1107321779U,	// VMALO
    1107313813U,	// VMALOB
    1107316913U,	// VMALOF
    1107319486U,	// VMALOH
    1107321689U,	// VMAO
    1107313806U,	// VMAOB
    1107316906U,	// VMAOF
    1107319479U,	// VMAOH
    1107315935U,	// VME
    1107313465U,	// VMEB
    1107316510U,	// VMEF
    1107317943U,	// VMEH
    1107319147U,	// VMH
    1107313591U,	// VMHB
    1107316693U,	// VMHF
    1107318135U,	// VMHH
    1107320681U,	// VML
    1107313703U,	// VMLB
    1107315449U,	// VMLE
    1107313452U,	// VMLEB
    1107316497U,	// VMLEF
    1107317930U,	// VMLEH
    1107316825U,	// VMLF
    1107318578U,	// VMLH
    1107313576U,	// VMLHB
    1107316678U,	// VMLHF
    1107318114U,	// VMLHH
    1107325005U,	// VMLHW
    1107321786U,	// VMLO
    1107313821U,	// VMLOB
    1107316921U,	// VMLOF
    1107319494U,	// VMLOH
    1107321674U,	// VMN
    1107313800U,	// VMNB
    1107316900U,	// VMNF
    1107317528U,	// VMNG
    1107319366U,	// VMNH
    1107320900U,	// VMNL
    1107313709U,	// VMNLB
    1107316831U,	// VMNLF
    1107317440U,	// VMNLG
    1107318824U,	// VMNLH
    1107321802U,	// VMO
    1107313828U,	// VMOB
    1107316928U,	// VMOF
    1107319501U,	// VMOH
    1107319565U,	// VMRH
    1107313604U,	// VMRHB
    1107316706U,	// VMRHF
    1107317324U,	// VMRHG
    1107318148U,	// VMRHH
    1107321149U,	// VMRL
    1107313723U,	// VMRLB
    1107316845U,	// VMRLF
    1107317447U,	// VMRLG
    1107318985U,	// VMRLH
    1107325035U,	// VMX
    1107313952U,	// VMXB
    1107317053U,	// VMXF
    1107317722U,	// VMXG
    1107319741U,	// VMXH
    1107321278U,	// VMXL
    1107313758U,	// VMXLB
    1107316867U,	// VMXLF
    1107317469U,	// VMXLG
    1107319087U,	// VMXLH
    1107321680U,	// VN
    1107314101U,	// VNC
    1107321936U,	// VNO
    1107321992U,	// VO
    3165633U,	// VONE
    1107319854U,	// VPDI
    1107321586U,	// VPERM
    1107320249U,	// VPK
    1107316743U,	// VPKF
    1107317371U,	// VPKG
    1107318282U,	// VPKH
    1107324584U,	// VPKLS
    1107316991U,	// VPKLSF
    1107324365U,	// VPKLSFS
    1107317600U,	// VPKLSG
    1107324448U,	// VPKLSGS
    1107319586U,	// VPKLSH
    1107324531U,	// VPKLSHS
    1107324578U,	// VPKS
    1107316984U,	// VPKSF
    1107324357U,	// VPKSFS
    1107317593U,	// VPKSG
    1107324440U,	// VPKSGS
    1107319579U,	// VPKSH
    1107324523U,	// VPKSHS
    1107324644U,	// VPOPCT
    1107322029U,	// VREP
    1107313842U,	// VREPB
    1107316942U,	// VREPF
    1107317548U,	// VREPG
    1107319515U,	// VREPH
    1358978268U,	// VREPI
    285230066U,	// VREPIB
    285233144U,	// VREPIF
    285233775U,	// VREPIG
    285234634U,	// VREPIH
    1107324601U,	// VS
    1107313894U,	// VSB
    1107319826U,	// VSBCBI
    1107322321U,	// VSBCBIQ
    1107319841U,	// VSBI
    1107322338U,	// VSBIQ
    1107319834U,	// VSCBI
    1107313611U,	// VSCBIB
    1107316713U,	// VSCBIF
    1107317344U,	// VSCBIG
    1107318166U,	// VSCBIH
    1107322330U,	// VSCBIQ
    2701151989U,	// VSCEF
    3774894601U,	// VSCEG
    1107317283U,	// VSEG
    33571694U,	// VSEGB
    33574717U,	// VSEGF
    33576181U,	// VSEGH
    1107320457U,	// VSEL
    1107316999U,	// VSF
    1107317613U,	// VSG
    1107319594U,	// VSH
    1107321193U,	// VSL
    1107313752U,	// VSLB
    1107313257U,	// VSLDB
    1107322369U,	// VSQ
    1107312880U,	// VSRA
    1107313000U,	// VSRAB
    1107321162U,	// VSRL
    1107313738U,	// VSRLB
    134246313U,	// VST
    0U,	// VST32
    0U,	// VST64
    1207976787U,	// VSTEB
    1207979820U,	// VSTEF
    1207980585U,	// VSTEG
    1207981253U,	// VSTEH
    1107321268U,	// VSTL
    1107321629U,	// VSTM
    1107314147U,	// VSTRC
    1107313043U,	// VSTRCB
    1107324122U,	// VSTRCBS
    1107316447U,	// VSTRCF
    1107324291U,	// VSTRCFS
    1107317882U,	// VSTRCH
    1107324457U,	// VSTRCHS
    1107313958U,	// VSTRCZB
    1107324244U,	// VSTRCZBS
    1107317059U,	// VSTRCZF
    1107324379U,	// VSTRCZFS
    1107319764U,	// VSTRCZH
    1107324540U,	// VSTRCZHS
    1107321640U,	// VSUM
    1107313793U,	// VSUMB
    1107317515U,	// VSUMG
    1107316572U,	// VSUMGF
    1107318023U,	// VSUMGH
    1107319140U,	// VSUMH
    1107322345U,	// VSUMQ
    1107316962U,	// VSUMQF
    1107317568U,	// VSUMQG
    33579811U,	// VTM
    1107319528U,	// VUPH
    33571773U,	// VUPHB
    33574875U,	// VUPHF
    33576317U,	// VUPHH
    1107321013U,	// VUPL
    33571892U,	// VUPLB
    33575014U,	// VUPLF
    1107318951U,	// VUPLH
    33571759U,	// VUPLHB
    33574861U,	// VUPLHF
    33576297U,	// VUPLHH
    33583188U,	// VUPLHW
    1107320657U,	// VUPLL
    33571863U,	// VUPLLB
    33574985U,	// VUPLLF
    33576732U,	// VUPLLH
    1107325040U,	// VX
    3171426U,	// VZERO
    1107313511U,	// WCDGB
    1107313533U,	// WCDLGB
    1107313179U,	// WCGDB
    1107313194U,	// WCLGDB
    1107313058U,	// WFADB
    1107314052U,	// WFC
    33571257U,	// WFCDB
    1107313132U,	// WFCEDB
    1107324140U,	// WFCEDBS
    1107313210U,	// WFCHDB
    1107324178U,	// WFCHDBS
    1107313149U,	// WFCHEDB
    1107324159U,	// WFCHEDBS
    1107313117U,	// WFDDB
    1107313243U,	// WFIDB
    1107320190U,	// WFK
    33571426U,	// WFKDB
    33571272U,	// WFLCDB
    33571462U,	// WFLNDB
    33571496U,	// WFLPDB
    1107313073U,	// WFMADB
    1107313271U,	// WFMDB
    1107313366U,	// WFMSDB
    1107313303U,	// WFPSODB
    1107313351U,	// WFSDB
    33571512U,	// WFSQDB
    1107313227U,	// WFTCIDB
    33571589U,	// WLDEB
    1107313165U,	// WLEDB
    28772U,	// X
    302040576U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    21462U,	// XG
    16804356U,	// XGR
    1107320297U,	// XGRK
    453025068U,	// XI
    0U,	// XIFMux
    100683698U,	// XIHF
    0U,	// XIHF64
    100683843U,	// XILF
    0U,	// XILF64
    453030123U,	// XIY
    16804958U,	// XR
    1107320330U,	// XRK
    28994U,	// XY
    117499020U,	// ZAP
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_SEQUENCE
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_STORE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// A
    0U,	// AD
    0U,	// ADB
    0U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    0U,	// ADR
    0U,	// ADTR
    256U,	// ADTRA
    0U,	// AE
    0U,	// AEB
    0U,	// AEBR
    0U,	// AER
    0U,	// AEXT128_64
    0U,	// AFI
    0U,	// AFIMux
    0U,	// AG
    0U,	// AGF
    0U,	// AGFI
    0U,	// AGFR
    0U,	// AGHI
    8U,	// AGHIK
    0U,	// AGR
    0U,	// AGRK
    0U,	// AGSI
    0U,	// AH
    0U,	// AHI
    8U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    0U,	// AHY
    0U,	// AIH
    0U,	// AL
    0U,	// ALC
    0U,	// ALCG
    0U,	// ALCGR
    0U,	// ALCR
    0U,	// ALFI
    0U,	// ALG
    0U,	// ALGF
    0U,	// ALGFI
    0U,	// ALGFR
    8U,	// ALGHSIK
    0U,	// ALGR
    0U,	// ALGRK
    0U,	// ALGSI
    8U,	// ALHSIK
    0U,	// ALR
    0U,	// ALRK
    0U,	// ALSI
    0U,	// ALY
    0U,	// AP
    0U,	// AR
    0U,	// ARK
    0U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    0U,	// AU
    0U,	// AUR
    0U,	// AW
    0U,	// AWR
    0U,	// AXBR
    0U,	// AXR
    0U,	// AXTR
    256U,	// AXTRA
    0U,	// AY
    0U,	// B
    0U,	// BAL
    0U,	// BALR
    0U,	// BAS
    0U,	// BASR
    0U,	// BASSM
    0U,	// BAsmE
    0U,	// BAsmH
    0U,	// BAsmHE
    0U,	// BAsmL
    0U,	// BAsmLE
    0U,	// BAsmLH
    0U,	// BAsmM
    0U,	// BAsmNE
    0U,	// BAsmNH
    0U,	// BAsmNHE
    0U,	// BAsmNL
    0U,	// BAsmNLE
    0U,	// BAsmNLH
    0U,	// BAsmNM
    0U,	// BAsmNO
    0U,	// BAsmNP
    0U,	// BAsmNZ
    0U,	// BAsmO
    0U,	// BAsmP
    0U,	// BAsmZ
    0U,	// BC
    0U,	// BCAsm
    0U,	// BCR
    0U,	// BCRAsm
    0U,	// BCT
    0U,	// BCTG
    0U,	// BCTGR
    0U,	// BCTR
    0U,	// BPP
    0U,	// BPRP
    0U,	// BR
    0U,	// BRAS
    0U,	// BRASL
    0U,	// BRAsmE
    0U,	// BRAsmH
    0U,	// BRAsmHE
    0U,	// BRAsmL
    0U,	// BRAsmLE
    0U,	// BRAsmLH
    0U,	// BRAsmM
    0U,	// BRAsmNE
    0U,	// BRAsmNH
    0U,	// BRAsmNHE
    0U,	// BRAsmNL
    0U,	// BRAsmNLE
    0U,	// BRAsmNLH
    0U,	// BRAsmNM
    0U,	// BRAsmNO
    0U,	// BRAsmNP
    0U,	// BRAsmNZ
    0U,	// BRAsmO
    0U,	// BRAsmP
    0U,	// BRAsmZ
    0U,	// BRC
    0U,	// BRCAsm
    0U,	// BRCL
    0U,	// BRCLAsm
    0U,	// BRCT
    0U,	// BRCTG
    0U,	// BRCTH
    16U,	// BRXH
    16U,	// BRXHG
    16U,	// BRXLE
    16U,	// BRXLG
    0U,	// BSM
    24U,	// BXH
    24U,	// BXHG
    24U,	// BXLE
    24U,	// BXLEG
    0U,	// C
    0U,	// CD
    0U,	// CDB
    0U,	// CDBR
    0U,	// CDFBR
    33U,	// CDFBRA
    0U,	// CDFR
    33U,	// CDFTR
    0U,	// CDGBR
    33U,	// CDGBRA
    0U,	// CDGR
    0U,	// CDGTR
    33U,	// CDGTRA
    33U,	// CDLFBR
    33U,	// CDLFTR
    33U,	// CDLGBR
    33U,	// CDLGTR
    0U,	// CDPT
    0U,	// CDR
    24U,	// CDS
    24U,	// CDSG
    0U,	// CDSTR
    24U,	// CDSY
    0U,	// CDTR
    0U,	// CDUTR
    0U,	// CDZT
    0U,	// CE
    0U,	// CEB
    0U,	// CEBR
    0U,	// CEDTR
    0U,	// CEFBR
    33U,	// CEFBRA
    0U,	// CEFR
    0U,	// CEGBR
    33U,	// CEGBRA
    0U,	// CEGR
    33U,	// CELFBR
    33U,	// CELGBR
    0U,	// CER
    0U,	// CEXTR
    0U,	// CFC
    41U,	// CFDBR
    33U,	// CFDBRA
    41U,	// CFDR
    33U,	// CFDTR
    41U,	// CFEBR
    33U,	// CFEBRA
    41U,	// CFER
    0U,	// CFI
    0U,	// CFIMux
    41U,	// CFXBR
    33U,	// CFXBRA
    41U,	// CFXR
    33U,	// CFXTR
    0U,	// CG
    41U,	// CGDBR
    33U,	// CGDBRA
    41U,	// CGDR
    41U,	// CGDTR
    33U,	// CGDTRA
    41U,	// CGEBR
    33U,	// CGEBRA
    41U,	// CGER
    0U,	// CGF
    0U,	// CGFI
    0U,	// CGFR
    0U,	// CGFRL
    0U,	// CGH
    0U,	// CGHI
    0U,	// CGHRL
    0U,	// CGHSI
    0U,	// CGIB
    25U,	// CGIBAsm
    1U,	// CGIBAsmE
    1U,	// CGIBAsmH
    1U,	// CGIBAsmHE
    1U,	// CGIBAsmL
    1U,	// CGIBAsmLE
    1U,	// CGIBAsmLH
    1U,	// CGIBAsmNE
    1U,	// CGIBAsmNH
    1U,	// CGIBAsmNHE
    1U,	// CGIBAsmNL
    1U,	// CGIBAsmNLE
    1U,	// CGIBAsmNLH
    0U,	// CGIBCall
    0U,	// CGIBReturn
    0U,	// CGIJ
    17U,	// CGIJAsm
    0U,	// CGIJAsmE
    0U,	// CGIJAsmH
    0U,	// CGIJAsmHE
    0U,	// CGIJAsmL
    0U,	// CGIJAsmLE
    0U,	// CGIJAsmLH
    0U,	// CGIJAsmNE
    0U,	// CGIJAsmNH
    0U,	// CGIJAsmNHE
    0U,	// CGIJAsmNL
    0U,	// CGIJAsmNLE
    0U,	// CGIJAsmNLH
    0U,	// CGIT
    48U,	// CGITAsm
    0U,	// CGITAsmE
    0U,	// CGITAsmH
    0U,	// CGITAsmHE
    0U,	// CGITAsmL
    0U,	// CGITAsmLE
    0U,	// CGITAsmLH
    0U,	// CGITAsmNE
    0U,	// CGITAsmNH
    0U,	// CGITAsmNHE
    0U,	// CGITAsmNL
    0U,	// CGITAsmNLE
    0U,	// CGITAsmNLH
    0U,	// CGR
    41U,	// CGRB
    2352U,	// CGRBAsm
    56U,	// CGRBAsmE
    56U,	// CGRBAsmH
    56U,	// CGRBAsmHE
    56U,	// CGRBAsmL
    56U,	// CGRBAsmLE
    56U,	// CGRBAsmLH
    56U,	// CGRBAsmNE
    56U,	// CGRBAsmNH
    56U,	// CGRBAsmNHE
    56U,	// CGRBAsmNL
    56U,	// CGRBAsmNLE
    56U,	// CGRBAsmNLH
    0U,	// CGRBCall
    0U,	// CGRBReturn
    2U,	// CGRJ
    4400U,	// CGRJAsm
    64U,	// CGRJAsmE
    64U,	// CGRJAsmH
    64U,	// CGRJAsmHE
    64U,	// CGRJAsmL
    64U,	// CGRJAsmLE
    64U,	// CGRJAsmLH
    64U,	// CGRJAsmNE
    64U,	// CGRJAsmNH
    64U,	// CGRJAsmNHE
    64U,	// CGRJAsmNL
    64U,	// CGRJAsmNLE
    64U,	// CGRJAsmNLH
    0U,	// CGRL
    0U,	// CGRT
    48U,	// CGRTAsm
    0U,	// CGRTAsmE
    0U,	// CGRTAsmH
    0U,	// CGRTAsmHE
    0U,	// CGRTAsmL
    0U,	// CGRTAsmLE
    0U,	// CGRTAsmLH
    0U,	// CGRTAsmNE
    0U,	// CGRTAsmNH
    0U,	// CGRTAsmNHE
    0U,	// CGRTAsmNL
    0U,	// CGRTAsmNLE
    0U,	// CGRTAsmNLH
    41U,	// CGXBR
    33U,	// CGXBRA
    41U,	// CGXR
    41U,	// CGXTR
    33U,	// CGXTRA
    0U,	// CH
    0U,	// CHF
    0U,	// CHHSI
    0U,	// CHI
    0U,	// CHIMux
    0U,	// CHRL
    0U,	// CHSI
    0U,	// CHY
    0U,	// CIB
    25U,	// CIBAsm
    1U,	// CIBAsmE
    1U,	// CIBAsmH
    1U,	// CIBAsmHE
    1U,	// CIBAsmL
    1U,	// CIBAsmLE
    1U,	// CIBAsmLH
    1U,	// CIBAsmNE
    1U,	// CIBAsmNH
    1U,	// CIBAsmNHE
    1U,	// CIBAsmNL
    1U,	// CIBAsmNLE
    1U,	// CIBAsmNLH
    0U,	// CIBCall
    0U,	// CIBReturn
    0U,	// CIH
    0U,	// CIJ
    17U,	// CIJAsm
    0U,	// CIJAsmE
    0U,	// CIJAsmH
    0U,	// CIJAsmHE
    0U,	// CIJAsmL
    0U,	// CIJAsmLE
    0U,	// CIJAsmLH
    0U,	// CIJAsmNE
    0U,	// CIJAsmNH
    0U,	// CIJAsmNHE
    0U,	// CIJAsmNL
    0U,	// CIJAsmNLE
    0U,	// CIJAsmNLH
    0U,	// CIT
    48U,	// CITAsm
    0U,	// CITAsmE
    0U,	// CITAsmH
    0U,	// CITAsmHE
    0U,	// CITAsmL
    0U,	// CITAsmLE
    0U,	// CITAsmLH
    0U,	// CITAsmNE
    0U,	// CITAsmNH
    0U,	// CITAsmNHE
    0U,	// CITAsmNL
    0U,	// CITAsmNLE
    0U,	// CITAsmNLH
    0U,	// CKSM
    0U,	// CL
    0U,	// CLC
    0U,	// CLCL
    72U,	// CLCLE
    72U,	// CLCLU
    0U,	// CLCLoop
    0U,	// CLCSequence
    33U,	// CLFDBR
    33U,	// CLFDTR
    33U,	// CLFEBR
    0U,	// CLFHSI
    0U,	// CLFI
    0U,	// CLFIMux
    0U,	// CLFIT
    48U,	// CLFITAsm
    0U,	// CLFITAsmE
    0U,	// CLFITAsmH
    0U,	// CLFITAsmHE
    0U,	// CLFITAsmL
    0U,	// CLFITAsmLE
    0U,	// CLFITAsmLH
    0U,	// CLFITAsmNE
    0U,	// CLFITAsmNH
    0U,	// CLFITAsmNHE
    0U,	// CLFITAsmNL
    0U,	// CLFITAsmNLE
    0U,	// CLFITAsmNLH
    33U,	// CLFXBR
    33U,	// CLFXTR
    0U,	// CLG
    33U,	// CLGDBR
    33U,	// CLGDTR
    33U,	// CLGEBR
    0U,	// CLGF
    0U,	// CLGFI
    0U,	// CLGFR
    0U,	// CLGFRL
    0U,	// CLGHRL
    0U,	// CLGHSI
    0U,	// CLGIB
    25U,	// CLGIBAsm
    1U,	// CLGIBAsmE
    1U,	// CLGIBAsmH
    1U,	// CLGIBAsmHE
    1U,	// CLGIBAsmL
    1U,	// CLGIBAsmLE
    1U,	// CLGIBAsmLH
    1U,	// CLGIBAsmNE
    1U,	// CLGIBAsmNH
    1U,	// CLGIBAsmNHE
    1U,	// CLGIBAsmNL
    1U,	// CLGIBAsmNLE
    1U,	// CLGIBAsmNLH
    0U,	// CLGIBCall
    0U,	// CLGIBReturn
    0U,	// CLGIJ
    17U,	// CLGIJAsm
    0U,	// CLGIJAsmE
    0U,	// CLGIJAsmH
    0U,	// CLGIJAsmHE
    0U,	// CLGIJAsmL
    0U,	// CLGIJAsmLE
    0U,	// CLGIJAsmLH
    0U,	// CLGIJAsmNE
    0U,	// CLGIJAsmNH
    0U,	// CLGIJAsmNHE
    0U,	// CLGIJAsmNL
    0U,	// CLGIJAsmNLE
    0U,	// CLGIJAsmNLH
    0U,	// CLGIT
    48U,	// CLGITAsm
    0U,	// CLGITAsmE
    0U,	// CLGITAsmH
    0U,	// CLGITAsmHE
    0U,	// CLGITAsmL
    0U,	// CLGITAsmLE
    0U,	// CLGITAsmLH
    0U,	// CLGITAsmNE
    0U,	// CLGITAsmNH
    0U,	// CLGITAsmNHE
    0U,	// CLGITAsmNL
    0U,	// CLGITAsmNLE
    0U,	// CLGITAsmNLH
    0U,	// CLGR
    41U,	// CLGRB
    2352U,	// CLGRBAsm
    56U,	// CLGRBAsmE
    56U,	// CLGRBAsmH
    56U,	// CLGRBAsmHE
    56U,	// CLGRBAsmL
    56U,	// CLGRBAsmLE
    56U,	// CLGRBAsmLH
    56U,	// CLGRBAsmNE
    56U,	// CLGRBAsmNH
    56U,	// CLGRBAsmNHE
    56U,	// CLGRBAsmNL
    56U,	// CLGRBAsmNLE
    56U,	// CLGRBAsmNLH
    0U,	// CLGRBCall
    0U,	// CLGRBReturn
    2U,	// CLGRJ
    4400U,	// CLGRJAsm
    64U,	// CLGRJAsmE
    64U,	// CLGRJAsmH
    64U,	// CLGRJAsmHE
    64U,	// CLGRJAsmL
    64U,	// CLGRJAsmLE
    64U,	// CLGRJAsmLH
    64U,	// CLGRJAsmNE
    64U,	// CLGRJAsmNH
    64U,	// CLGRJAsmNHE
    64U,	// CLGRJAsmNL
    64U,	// CLGRJAsmNLE
    64U,	// CLGRJAsmNLH
    0U,	// CLGRL
    0U,	// CLGRT
    48U,	// CLGRTAsm
    0U,	// CLGRTAsmE
    0U,	// CLGRTAsmH
    0U,	// CLGRTAsmHE
    0U,	// CLGRTAsmL
    0U,	// CLGRTAsmLE
    0U,	// CLGRTAsmLH
    0U,	// CLGRTAsmNE
    0U,	// CLGRTAsmNH
    0U,	// CLGRTAsmNHE
    0U,	// CLGRTAsmNL
    0U,	// CLGRTAsmNLE
    0U,	// CLGRTAsmNLH
    0U,	// CLGT
    80U,	// CLGTAsm
    0U,	// CLGTAsmE
    0U,	// CLGTAsmH
    0U,	// CLGTAsmHE
    0U,	// CLGTAsmL
    0U,	// CLGTAsmLE
    0U,	// CLGTAsmLH
    0U,	// CLGTAsmNE
    0U,	// CLGTAsmNH
    0U,	// CLGTAsmNHE
    0U,	// CLGTAsmNL
    0U,	// CLGTAsmNLE
    0U,	// CLGTAsmNLH
    33U,	// CLGXBR
    33U,	// CLGXTR
    0U,	// CLHF
    0U,	// CLHHSI
    0U,	// CLHRL
    0U,	// CLI
    0U,	// CLIB
    25U,	// CLIBAsm
    1U,	// CLIBAsmE
    1U,	// CLIBAsmH
    1U,	// CLIBAsmHE
    1U,	// CLIBAsmL
    1U,	// CLIBAsmLE
    1U,	// CLIBAsmLH
    1U,	// CLIBAsmNE
    1U,	// CLIBAsmNH
    1U,	// CLIBAsmNHE
    1U,	// CLIBAsmNL
    1U,	// CLIBAsmNLE
    1U,	// CLIBAsmNLH
    0U,	// CLIBCall
    0U,	// CLIBReturn
    0U,	// CLIH
    0U,	// CLIJ
    17U,	// CLIJAsm
    0U,	// CLIJAsmE
    0U,	// CLIJAsmH
    0U,	// CLIJAsmHE
    0U,	// CLIJAsmL
    0U,	// CLIJAsmLE
    0U,	// CLIJAsmLH
    0U,	// CLIJAsmNE
    0U,	// CLIJAsmNH
    0U,	// CLIJAsmNHE
    0U,	// CLIJAsmNL
    0U,	// CLIJAsmNLE
    0U,	// CLIJAsmNLH
    0U,	// CLIY
    1U,	// CLM
    1U,	// CLMH
    1U,	// CLMY
    0U,	// CLMux
    0U,	// CLR
    41U,	// CLRB
    2352U,	// CLRBAsm
    56U,	// CLRBAsmE
    56U,	// CLRBAsmH
    56U,	// CLRBAsmHE
    56U,	// CLRBAsmL
    56U,	// CLRBAsmLE
    56U,	// CLRBAsmLH
    56U,	// CLRBAsmNE
    56U,	// CLRBAsmNH
    56U,	// CLRBAsmNHE
    56U,	// CLRBAsmNL
    56U,	// CLRBAsmNLE
    56U,	// CLRBAsmNLH
    0U,	// CLRBCall
    0U,	// CLRBReturn
    2U,	// CLRJ
    4400U,	// CLRJAsm
    64U,	// CLRJAsmE
    64U,	// CLRJAsmH
    64U,	// CLRJAsmHE
    64U,	// CLRJAsmL
    64U,	// CLRJAsmLE
    64U,	// CLRJAsmLH
    64U,	// CLRJAsmNE
    64U,	// CLRJAsmNH
    64U,	// CLRJAsmNHE
    64U,	// CLRJAsmNL
    64U,	// CLRJAsmNLE
    64U,	// CLRJAsmNLH
    0U,	// CLRL
    0U,	// CLRT
    48U,	// CLRTAsm
    0U,	// CLRTAsmE
    0U,	// CLRTAsmH
    0U,	// CLRTAsmHE
    0U,	// CLRTAsmL
    0U,	// CLRTAsmLE
    0U,	// CLRTAsmLH
    0U,	// CLRTAsmNE
    0U,	// CLRTAsmNH
    0U,	// CLRTAsmNHE
    0U,	// CLRTAsmNL
    0U,	// CLRTAsmNLE
    0U,	// CLRTAsmNLH
    0U,	// CLST
    0U,	// CLSTLoop
    0U,	// CLT
    80U,	// CLTAsm
    0U,	// CLTAsmE
    0U,	// CLTAsmH
    0U,	// CLTAsmHE
    0U,	// CLTAsmL
    0U,	// CLTAsmLE
    0U,	// CLTAsmLH
    0U,	// CLTAsmNE
    0U,	// CLTAsmNH
    0U,	// CLTAsmNHE
    0U,	// CLTAsmNL
    0U,	// CLTAsmNLE
    0U,	// CLTAsmNLH
    0U,	// CLY
    0U,	// CMPSC
    0U,	// CMux
    0U,	// CP
    0U,	// CPDT
    88U,	// CPSDRdd
    88U,	// CPSDRds
    88U,	// CPSDRsd
    88U,	// CPSDRss
    0U,	// CPXT
    0U,	// CPYA
    0U,	// CR
    41U,	// CRB
    2352U,	// CRBAsm
    56U,	// CRBAsmE
    56U,	// CRBAsmH
    56U,	// CRBAsmHE
    56U,	// CRBAsmL
    56U,	// CRBAsmLE
    56U,	// CRBAsmLH
    56U,	// CRBAsmNE
    56U,	// CRBAsmNH
    56U,	// CRBAsmNHE
    56U,	// CRBAsmNL
    56U,	// CRBAsmNLE
    56U,	// CRBAsmNLH
    0U,	// CRBCall
    0U,	// CRBReturn
    2U,	// CRJ
    4400U,	// CRJAsm
    64U,	// CRJAsmE
    64U,	// CRJAsmH
    64U,	// CRJAsmHE
    64U,	// CRJAsmL
    64U,	// CRJAsmLE
    64U,	// CRJAsmLH
    64U,	// CRJAsmNE
    64U,	// CRJAsmNH
    64U,	// CRJAsmNHE
    64U,	// CRJAsmNL
    64U,	// CRJAsmNLE
    64U,	// CRJAsmNLH
    0U,	// CRL
    0U,	// CRT
    48U,	// CRTAsm
    0U,	// CRTAsmE
    0U,	// CRTAsmH
    0U,	// CRTAsmHE
    0U,	// CRTAsmL
    0U,	// CRTAsmLE
    0U,	// CRTAsmLH
    0U,	// CRTAsmNE
    0U,	// CRTAsmNH
    0U,	// CRTAsmNHE
    0U,	// CRTAsmNL
    0U,	// CRTAsmNLE
    0U,	// CRTAsmNLH
    24U,	// CS
    48U,	// CSDTR
    24U,	// CSG
    96U,	// CSST
    48U,	// CSXTR
    24U,	// CSY
    104U,	// CU12
    0U,	// CU12Opt
    104U,	// CU14
    0U,	// CU14Opt
    104U,	// CU21
    0U,	// CU21Opt
    104U,	// CU24
    0U,	// CU24Opt
    0U,	// CU41
    0U,	// CU42
    0U,	// CUDTR
    0U,	// CUSE
    104U,	// CUTFU
    0U,	// CUTFUOpt
    104U,	// CUUTF
    0U,	// CUUTFOpt
    0U,	// CUXTR
    0U,	// CVB
    0U,	// CVBG
    0U,	// CVBY
    0U,	// CVD
    0U,	// CVDG
    0U,	// CVDY
    0U,	// CXBR
    0U,	// CXFBR
    33U,	// CXFBRA
    0U,	// CXFR
    33U,	// CXFTR
    0U,	// CXGBR
    33U,	// CXGBRA
    0U,	// CXGR
    0U,	// CXGTR
    33U,	// CXGTRA
    33U,	// CXLFBR
    33U,	// CXLFTR
    33U,	// CXLGBR
    33U,	// CXLGTR
    0U,	// CXPT
    0U,	// CXR
    0U,	// CXSTR
    0U,	// CXTR
    0U,	// CXUTR
    0U,	// CXZT
    0U,	// CY
    0U,	// CZDT
    0U,	// CZXT
    0U,	// CallBASR
    0U,	// CallBCR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallBRCL
    0U,	// CallJG
    0U,	// CondReturn
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore32Mux
    0U,	// CondStore32MuxInv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    0U,	// CondTrap
    0U,	// D
    0U,	// DD
    0U,	// DDB
    0U,	// DDBR
    0U,	// DDR
    0U,	// DDTR
    256U,	// DDTRA
    0U,	// DE
    0U,	// DEB
    0U,	// DEBR
    0U,	// DER
    6512U,	// DIDBR
    6512U,	// DIEBR
    0U,	// DL
    0U,	// DLG
    0U,	// DLGR
    0U,	// DLR
    0U,	// DP
    0U,	// DR
    0U,	// DSG
    0U,	// DSGF
    0U,	// DSGFR
    0U,	// DSGR
    0U,	// DXBR
    0U,	// DXR
    0U,	// DXTR
    256U,	// DXTRA
    0U,	// EAR
    56U,	// ECAG
    96U,	// ECTG
    0U,	// ED
    0U,	// EDMK
    0U,	// EEDTR
    0U,	// EEXTR
    0U,	// EFPC
    0U,	// EPSW
    0U,	// ESDTR
    0U,	// ESXTR
    0U,	// ETND
    0U,	// EX
    0U,	// EXRL
    41U,	// FIDBR
    33U,	// FIDBRA
    0U,	// FIDR
    33U,	// FIDTR
    41U,	// FIEBR
    33U,	// FIEBRA
    0U,	// FIER
    41U,	// FIXBR
    33U,	// FIXBRA
    0U,	// FIXR
    33U,	// FIXTR
    0U,	// FLOGR
    0U,	// GOT
    0U,	// HDR
    0U,	// HER
    0U,	// IC
    0U,	// IC32
    0U,	// IC32Y
    0U,	// ICM
    0U,	// ICMH
    0U,	// ICMY
    0U,	// ICY
    88U,	// IEDTR
    88U,	// IEXTR
    0U,	// IIFMux
    0U,	// IIHF
    0U,	// IIHF64
    0U,	// IIHH
    0U,	// IIHH64
    0U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    0U,	// IILF
    0U,	// IILF64
    0U,	// IILH
    0U,	// IILH64
    0U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    0U,	// IPM
    0U,	// InsnE
    2U,	// InsnRI
    633U,	// InsnRIE
    0U,	// InsnRIL
    2U,	// InsnRILU
    2U,	// InsnRIS
    0U,	// InsnRR
    41U,	// InsnRRE
    889U,	// InsnRRF
    1145U,	// InsnRRS
    1401U,	// InsnRS
    1401U,	// InsnRSE
    633U,	// InsnRSI
    1401U,	// InsnRSY
    0U,	// InsnRX
    0U,	// InsnRXE
    1657U,	// InsnRXF
    0U,	// InsnRXY
    0U,	// InsnS
    3U,	// InsnSI
    3U,	// InsnSIL
    3U,	// InsnSIY
    0U,	// InsnSS
    41U,	// InsnSSE
    1913U,	// InsnSSF
    0U,	// J
    0U,	// JAsmE
    0U,	// JAsmH
    0U,	// JAsmHE
    0U,	// JAsmL
    0U,	// JAsmLE
    0U,	// JAsmLH
    0U,	// JAsmM
    0U,	// JAsmNE
    0U,	// JAsmNH
    0U,	// JAsmNHE
    0U,	// JAsmNL
    0U,	// JAsmNLE
    0U,	// JAsmNLH
    0U,	// JAsmNM
    0U,	// JAsmNO
    0U,	// JAsmNP
    0U,	// JAsmNZ
    0U,	// JAsmO
    0U,	// JAsmP
    0U,	// JAsmZ
    0U,	// JG
    0U,	// JGAsmE
    0U,	// JGAsmH
    0U,	// JGAsmHE
    0U,	// JGAsmL
    0U,	// JGAsmLE
    0U,	// JGAsmLH
    0U,	// JGAsmM
    0U,	// JGAsmNE
    0U,	// JGAsmNH
    0U,	// JGAsmNHE
    0U,	// JGAsmNL
    0U,	// JGAsmNLE
    0U,	// JGAsmNLH
    0U,	// JGAsmNM
    0U,	// JGAsmNO
    0U,	// JGAsmNP
    0U,	// JGAsmNZ
    0U,	// JGAsmO
    0U,	// JGAsmP
    0U,	// JGAsmZ
    0U,	// KDB
    0U,	// KDBR
    0U,	// KDTR
    0U,	// KEB
    0U,	// KEBR
    0U,	// KIMD
    0U,	// KLMD
    0U,	// KM
    0U,	// KMAC
    0U,	// KMC
    88U,	// KMCTR
    0U,	// KMF
    0U,	// KMO
    0U,	// KXBR
    0U,	// KXTR
    0U,	// L
    0U,	// L128
    0U,	// LA
    56U,	// LAA
    56U,	// LAAG
    56U,	// LAAL
    56U,	// LAALG
    0U,	// LAE
    0U,	// LAEY
    56U,	// LAM
    56U,	// LAMY
    56U,	// LAN
    56U,	// LANG
    56U,	// LAO
    56U,	// LAOG
    0U,	// LARL
    0U,	// LAT
    56U,	// LAX
    56U,	// LAXG
    0U,	// LAY
    0U,	// LB
    0U,	// LBH
    0U,	// LBMux
    0U,	// LBR
    104U,	// LCBB
    0U,	// LCDBR
    0U,	// LCDFR
    0U,	// LCDFR_32
    0U,	// LCDR
    0U,	// LCEBR
    0U,	// LCER
    0U,	// LCGFR
    0U,	// LCGR
    0U,	// LCR
    0U,	// LCXBR
    0U,	// LCXR
    0U,	// LD
    0U,	// LDE
    0U,	// LDE32
    0U,	// LDEB
    0U,	// LDEBR
    0U,	// LDER
    48U,	// LDETR
    0U,	// LDGR
    0U,	// LDR
    0U,	// LDR32
    0U,	// LDXBR
    33U,	// LDXBRA
    0U,	// LDXR
    33U,	// LDXTR
    0U,	// LDY
    0U,	// LE
    0U,	// LEDBR
    33U,	// LEDBRA
    0U,	// LEDR
    33U,	// LEDTR
    0U,	// LEFR
    0U,	// LER
    0U,	// LEXBR
    33U,	// LEXBRA
    0U,	// LEXR
    0U,	// LEY
    0U,	// LFAS
    0U,	// LFER
    0U,	// LFH
    0U,	// LFHAT
    0U,	// LFPC
    0U,	// LG
    0U,	// LGAT
    0U,	// LGB
    0U,	// LGBR
    0U,	// LGDR
    0U,	// LGF
    0U,	// LGFI
    0U,	// LGFR
    0U,	// LGFRL
    0U,	// LGH
    0U,	// LGHI
    0U,	// LGHR
    0U,	// LGHRL
    0U,	// LGR
    0U,	// LGRL
    0U,	// LH
    0U,	// LHH
    0U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    0U,	// LHR
    0U,	// LHRL
    0U,	// LHY
    0U,	// LLC
    0U,	// LLCH
    0U,	// LLCMux
    0U,	// LLCR
    0U,	// LLCRMux
    0U,	// LLGC
    0U,	// LLGCR
    0U,	// LLGF
    0U,	// LLGFAT
    0U,	// LLGFR
    0U,	// LLGFRL
    0U,	// LLGH
    0U,	// LLGHR
    0U,	// LLGHRL
    0U,	// LLGT
    0U,	// LLGTAT
    0U,	// LLGTR
    0U,	// LLH
    0U,	// LLHH
    0U,	// LLHMux
    0U,	// LLHR
    0U,	// LLHRL
    0U,	// LLHRMux
    0U,	// LLIHF
    0U,	// LLIHH
    0U,	// LLIHL
    0U,	// LLILF
    0U,	// LLILH
    0U,	// LLILL
    0U,	// LLZRGF
    56U,	// LM
    8504U,	// LMD
    56U,	// LMG
    56U,	// LMH
    56U,	// LMY
    0U,	// LMux
    0U,	// LNDBR
    0U,	// LNDFR
    0U,	// LNDFR_32
    0U,	// LNDR
    0U,	// LNEBR
    0U,	// LNER
    0U,	// LNGFR
    0U,	// LNGR
    0U,	// LNR
    0U,	// LNXBR
    0U,	// LNXR
    0U,	// LOC
    104U,	// LOCAsm
    0U,	// LOCAsmE
    0U,	// LOCAsmH
    0U,	// LOCAsmHE
    0U,	// LOCAsmL
    0U,	// LOCAsmLE
    0U,	// LOCAsmLH
    0U,	// LOCAsmM
    0U,	// LOCAsmNE
    0U,	// LOCAsmNH
    0U,	// LOCAsmNHE
    0U,	// LOCAsmNL
    0U,	// LOCAsmNLE
    0U,	// LOCAsmNLH
    0U,	// LOCAsmNM
    0U,	// LOCAsmNO
    0U,	// LOCAsmNP
    0U,	// LOCAsmNZ
    0U,	// LOCAsmO
    0U,	// LOCAsmP
    0U,	// LOCAsmZ
    0U,	// LOCFH
    104U,	// LOCFHAsm
    0U,	// LOCFHAsmE
    0U,	// LOCFHAsmH
    0U,	// LOCFHAsmHE
    0U,	// LOCFHAsmL
    0U,	// LOCFHAsmLE
    0U,	// LOCFHAsmLH
    0U,	// LOCFHAsmM
    0U,	// LOCFHAsmNE
    0U,	// LOCFHAsmNH
    0U,	// LOCFHAsmNHE
    0U,	// LOCFHAsmNL
    0U,	// LOCFHAsmNLE
    0U,	// LOCFHAsmNLH
    0U,	// LOCFHAsmNM
    0U,	// LOCFHAsmNO
    0U,	// LOCFHAsmNP
    0U,	// LOCFHAsmNZ
    0U,	// LOCFHAsmO
    0U,	// LOCFHAsmP
    0U,	// LOCFHAsmZ
    0U,	// LOCFHR
    128U,	// LOCFHRAsm
    0U,	// LOCFHRAsmE
    0U,	// LOCFHRAsmH
    0U,	// LOCFHRAsmHE
    0U,	// LOCFHRAsmL
    0U,	// LOCFHRAsmLE
    0U,	// LOCFHRAsmLH
    0U,	// LOCFHRAsmM
    0U,	// LOCFHRAsmNE
    0U,	// LOCFHRAsmNH
    0U,	// LOCFHRAsmNHE
    0U,	// LOCFHRAsmNL
    0U,	// LOCFHRAsmNLE
    0U,	// LOCFHRAsmNLH
    0U,	// LOCFHRAsmNM
    0U,	// LOCFHRAsmNO
    0U,	// LOCFHRAsmNP
    0U,	// LOCFHRAsmNZ
    0U,	// LOCFHRAsmO
    0U,	// LOCFHRAsmP
    0U,	// LOCFHRAsmZ
    0U,	// LOCG
    104U,	// LOCGAsm
    0U,	// LOCGAsmE
    0U,	// LOCGAsmH
    0U,	// LOCGAsmHE
    0U,	// LOCGAsmL
    0U,	// LOCGAsmLE
    0U,	// LOCGAsmLH
    0U,	// LOCGAsmM
    0U,	// LOCGAsmNE
    0U,	// LOCGAsmNH
    0U,	// LOCGAsmNHE
    0U,	// LOCGAsmNL
    0U,	// LOCGAsmNLE
    0U,	// LOCGAsmNLH
    0U,	// LOCGAsmNM
    0U,	// LOCGAsmNO
    0U,	// LOCGAsmNP
    0U,	// LOCGAsmNZ
    0U,	// LOCGAsmO
    0U,	// LOCGAsmP
    0U,	// LOCGAsmZ
    0U,	// LOCGHI
    128U,	// LOCGHIAsm
    0U,	// LOCGHIAsmE
    0U,	// LOCGHIAsmH
    0U,	// LOCGHIAsmHE
    0U,	// LOCGHIAsmL
    0U,	// LOCGHIAsmLE
    0U,	// LOCGHIAsmLH
    0U,	// LOCGHIAsmM
    0U,	// LOCGHIAsmNE
    0U,	// LOCGHIAsmNH
    0U,	// LOCGHIAsmNHE
    0U,	// LOCGHIAsmNL
    0U,	// LOCGHIAsmNLE
    0U,	// LOCGHIAsmNLH
    0U,	// LOCGHIAsmNM
    0U,	// LOCGHIAsmNO
    0U,	// LOCGHIAsmNP
    0U,	// LOCGHIAsmNZ
    0U,	// LOCGHIAsmO
    0U,	// LOCGHIAsmP
    0U,	// LOCGHIAsmZ
    0U,	// LOCGR
    128U,	// LOCGRAsm
    0U,	// LOCGRAsmE
    0U,	// LOCGRAsmH
    0U,	// LOCGRAsmHE
    0U,	// LOCGRAsmL
    0U,	// LOCGRAsmLE
    0U,	// LOCGRAsmLH
    0U,	// LOCGRAsmM
    0U,	// LOCGRAsmNE
    0U,	// LOCGRAsmNH
    0U,	// LOCGRAsmNHE
    0U,	// LOCGRAsmNL
    0U,	// LOCGRAsmNLE
    0U,	// LOCGRAsmNLH
    0U,	// LOCGRAsmNM
    0U,	// LOCGRAsmNO
    0U,	// LOCGRAsmNP
    0U,	// LOCGRAsmNZ
    0U,	// LOCGRAsmO
    0U,	// LOCGRAsmP
    0U,	// LOCGRAsmZ
    0U,	// LOCHHI
    128U,	// LOCHHIAsm
    0U,	// LOCHHIAsmE
    0U,	// LOCHHIAsmH
    0U,	// LOCHHIAsmHE
    0U,	// LOCHHIAsmL
    0U,	// LOCHHIAsmLE
    0U,	// LOCHHIAsmLH
    0U,	// LOCHHIAsmM
    0U,	// LOCHHIAsmNE
    0U,	// LOCHHIAsmNH
    0U,	// LOCHHIAsmNHE
    0U,	// LOCHHIAsmNL
    0U,	// LOCHHIAsmNLE
    0U,	// LOCHHIAsmNLH
    0U,	// LOCHHIAsmNM
    0U,	// LOCHHIAsmNO
    0U,	// LOCHHIAsmNP
    0U,	// LOCHHIAsmNZ
    0U,	// LOCHHIAsmO
    0U,	// LOCHHIAsmP
    0U,	// LOCHHIAsmZ
    0U,	// LOCHI
    128U,	// LOCHIAsm
    0U,	// LOCHIAsmE
    0U,	// LOCHIAsmH
    0U,	// LOCHIAsmHE
    0U,	// LOCHIAsmL
    0U,	// LOCHIAsmLE
    0U,	// LOCHIAsmLH
    0U,	// LOCHIAsmM
    0U,	// LOCHIAsmNE
    0U,	// LOCHIAsmNH
    0U,	// LOCHIAsmNHE
    0U,	// LOCHIAsmNL
    0U,	// LOCHIAsmNLE
    0U,	// LOCHIAsmNLH
    0U,	// LOCHIAsmNM
    0U,	// LOCHIAsmNO
    0U,	// LOCHIAsmNP
    0U,	// LOCHIAsmNZ
    0U,	// LOCHIAsmO
    0U,	// LOCHIAsmP
    0U,	// LOCHIAsmZ
    0U,	// LOCHIMux
    0U,	// LOCMux
    0U,	// LOCR
    128U,	// LOCRAsm
    0U,	// LOCRAsmE
    0U,	// LOCRAsmH
    0U,	// LOCRAsmHE
    0U,	// LOCRAsmL
    0U,	// LOCRAsmLE
    0U,	// LOCRAsmLH
    0U,	// LOCRAsmM
    0U,	// LOCRAsmNE
    0U,	// LOCRAsmNH
    0U,	// LOCRAsmNHE
    0U,	// LOCRAsmNL
    0U,	// LOCRAsmNLE
    0U,	// LOCRAsmNLH
    0U,	// LOCRAsmNM
    0U,	// LOCRAsmNO
    0U,	// LOCRAsmNP
    0U,	// LOCRAsmNZ
    0U,	// LOCRAsmO
    0U,	// LOCRAsmP
    0U,	// LOCRAsmZ
    0U,	// LOCRMux
    24U,	// LPD
    0U,	// LPDBR
    0U,	// LPDFR
    0U,	// LPDFR_32
    24U,	// LPDG
    0U,	// LPDR
    0U,	// LPEBR
    0U,	// LPER
    0U,	// LPGFR
    0U,	// LPGR
    0U,	// LPQ
    0U,	// LPR
    0U,	// LPXBR
    0U,	// LPXR
    0U,	// LR
    0U,	// LRDR
    0U,	// LRER
    0U,	// LRL
    0U,	// LRMux
    0U,	// LRV
    0U,	// LRVG
    0U,	// LRVGR
    0U,	// LRVH
    0U,	// LRVR
    0U,	// LT
    0U,	// LTDBR
    0U,	// LTDBRCompare
    0U,	// LTDBRCompare_VecPseudo
    0U,	// LTDR
    0U,	// LTDTR
    0U,	// LTEBR
    0U,	// LTEBRCompare
    0U,	// LTEBRCompare_VecPseudo
    0U,	// LTER
    0U,	// LTG
    0U,	// LTGF
    0U,	// LTGFR
    0U,	// LTGR
    0U,	// LTR
    0U,	// LTXBR
    0U,	// LTXBRCompare
    0U,	// LTXBRCompare_VecPseudo
    0U,	// LTXR
    0U,	// LTXTR
    0U,	// LX
    0U,	// LXD
    0U,	// LXDB
    0U,	// LXDBR
    0U,	// LXDR
    48U,	// LXDTR
    0U,	// LXE
    0U,	// LXEB
    0U,	// LXEBR
    0U,	// LXER
    0U,	// LXR
    0U,	// LY
    0U,	// LZDR
    0U,	// LZER
    0U,	// LZRF
    0U,	// LZRG
    0U,	// LZXR
    0U,	// M
    136U,	// MAD
    136U,	// MADB
    112U,	// MADBR
    112U,	// MADR
    136U,	// MAE
    136U,	// MAEB
    112U,	// MAEBR
    112U,	// MAER
    136U,	// MAY
    136U,	// MAYH
    112U,	// MAYHR
    136U,	// MAYL
    112U,	// MAYLR
    112U,	// MAYR
    0U,	// MC
    0U,	// MD
    0U,	// MDB
    0U,	// MDBR
    0U,	// MDE
    0U,	// MDEB
    0U,	// MDEBR
    0U,	// MDER
    0U,	// MDR
    0U,	// MDTR
    256U,	// MDTRA
    0U,	// ME
    0U,	// MEE
    0U,	// MEEB
    0U,	// MEEBR
    0U,	// MEER
    0U,	// MER
    0U,	// MFY
    0U,	// MGHI
    0U,	// MH
    0U,	// MHI
    0U,	// MHY
    0U,	// ML
    0U,	// MLG
    0U,	// MLGR
    0U,	// MLR
    0U,	// MP
    0U,	// MR
    0U,	// MS
    136U,	// MSD
    136U,	// MSDB
    112U,	// MSDBR
    112U,	// MSDR
    136U,	// MSE
    136U,	// MSEB
    112U,	// MSEBR
    112U,	// MSER
    0U,	// MSFI
    0U,	// MSG
    0U,	// MSGF
    0U,	// MSGFI
    0U,	// MSGFR
    0U,	// MSGR
    0U,	// MSR
    0U,	// MSY
    0U,	// MVC
    0U,	// MVCIN
    0U,	// MVCK
    0U,	// MVCL
    72U,	// MVCLE
    72U,	// MVCLU
    0U,	// MVCLoop
    0U,	// MVCSequence
    0U,	// MVGHI
    0U,	// MVHHI
    0U,	// MVHI
    0U,	// MVI
    0U,	// MVIY
    0U,	// MVN
    0U,	// MVO
    0U,	// MVST
    0U,	// MVSTLoop
    0U,	// MVZ
    0U,	// MXBR
    0U,	// MXD
    0U,	// MXDB
    0U,	// MXDBR
    0U,	// MXDR
    0U,	// MXR
    0U,	// MXTR
    256U,	// MXTRA
    144U,	// MY
    144U,	// MYH
    0U,	// MYHR
    144U,	// MYL
    0U,	// MYLR
    0U,	// MYR
    0U,	// MemBarrier
    0U,	// N
    0U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    0U,	// NG
    0U,	// NGR
    0U,	// NGRK
    0U,	// NI
    0U,	// NIAI
    0U,	// NIFMux
    0U,	// NIHF
    0U,	// NIHF64
    0U,	// NIHH
    0U,	// NIHH64
    0U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    0U,	// NILF
    0U,	// NILF64
    0U,	// NILH
    0U,	// NILH64
    0U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    0U,	// NIY
    0U,	// NR
    0U,	// NRK
    0U,	// NTSTG
    0U,	// NY
    0U,	// O
    0U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    0U,	// OG
    0U,	// OGR
    0U,	// OGRK
    0U,	// OI
    0U,	// OIFMux
    0U,	// OIHF
    0U,	// OIHF64
    0U,	// OIHH
    0U,	// OIHH64
    0U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    0U,	// OILF
    0U,	// OILF64
    0U,	// OILH
    0U,	// OILH64
    0U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    0U,	// OIY
    0U,	// OR
    0U,	// ORK
    0U,	// OY
    0U,	// PACK
    0U,	// PCC
    0U,	// PFD
    0U,	// PFDRL
    0U,	// PFPO
    0U,	// PKA
    0U,	// PKU
    8560U,	// PLO
    0U,	// POPCNT
    48U,	// PPA
    0U,	// PPNO
    0U,	// PR
    6512U,	// QADTR
    6512U,	// QAXTR
    152U,	// RISBG
    152U,	// RISBG32
    152U,	// RISBGN
    152U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    152U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    56U,	// RLL
    56U,	// RLLG
    152U,	// RNSBG
    152U,	// ROSBG
    6512U,	// RRDTR
    6512U,	// RRXTR
    152U,	// RXSBG
    0U,	// Return
    0U,	// S
    0U,	// SAM24
    0U,	// SAM31
    0U,	// SAM64
    0U,	// SAR
    0U,	// SD
    0U,	// SDB
    0U,	// SDBR
    0U,	// SDR
    0U,	// SDTR
    256U,	// SDTRA
    0U,	// SE
    0U,	// SEB
    0U,	// SEBR
    0U,	// SER
    0U,	// SFASR
    0U,	// SFPC
    0U,	// SG
    0U,	// SGF
    0U,	// SGFR
    0U,	// SGR
    0U,	// SGRK
    0U,	// SH
    0U,	// SHY
    0U,	// SL
    0U,	// SLA
    56U,	// SLAG
    56U,	// SLAK
    0U,	// SLB
    0U,	// SLBG
    0U,	// SLBGR
    0U,	// SLBR
    0U,	// SLDA
    0U,	// SLDL
    144U,	// SLDT
    0U,	// SLFI
    0U,	// SLG
    0U,	// SLGF
    0U,	// SLGFI
    0U,	// SLGFR
    0U,	// SLGR
    0U,	// SLGRK
    0U,	// SLL
    56U,	// SLLG
    56U,	// SLLK
    0U,	// SLR
    0U,	// SLRK
    144U,	// SLXT
    0U,	// SLY
    0U,	// SP
    0U,	// SPM
    0U,	// SQD
    0U,	// SQDB
    0U,	// SQDBR
    0U,	// SQDR
    0U,	// SQE
    0U,	// SQEB
    0U,	// SQEBR
    0U,	// SQER
    0U,	// SQXBR
    0U,	// SQXR
    0U,	// SR
    0U,	// SRA
    56U,	// SRAG
    56U,	// SRAK
    0U,	// SRDA
    0U,	// SRDL
    144U,	// SRDT
    0U,	// SRK
    0U,	// SRL
    56U,	// SRLG
    56U,	// SRLK
    0U,	// SRNM
    0U,	// SRNMB
    0U,	// SRNMT
    160U,	// SRP
    0U,	// SRST
    0U,	// SRSTLoop
    0U,	// SRSTU
    144U,	// SRXT
    0U,	// ST
    0U,	// ST128
    56U,	// STAM
    56U,	// STAMY
    0U,	// STC
    0U,	// STCH
    0U,	// STCK
    0U,	// STCKE
    0U,	// STCKF
    1U,	// STCM
    1U,	// STCMH
    1U,	// STCMY
    0U,	// STCMux
    0U,	// STCY
    0U,	// STD
    0U,	// STDY
    0U,	// STE
    0U,	// STEY
    0U,	// STFH
    0U,	// STFLE
    0U,	// STFPC
    0U,	// STG
    0U,	// STGRL
    0U,	// STH
    0U,	// STHH
    0U,	// STHMux
    0U,	// STHRL
    0U,	// STHY
    56U,	// STM
    56U,	// STMG
    56U,	// STMH
    56U,	// STMY
    0U,	// STMux
    0U,	// STOC
    128U,	// STOCAsm
    0U,	// STOCAsmE
    0U,	// STOCAsmH
    0U,	// STOCAsmHE
    0U,	// STOCAsmL
    0U,	// STOCAsmLE
    0U,	// STOCAsmLH
    0U,	// STOCAsmM
    0U,	// STOCAsmNE
    0U,	// STOCAsmNH
    0U,	// STOCAsmNHE
    0U,	// STOCAsmNL
    0U,	// STOCAsmNLE
    0U,	// STOCAsmNLH
    0U,	// STOCAsmNM
    0U,	// STOCAsmNO
    0U,	// STOCAsmNP
    0U,	// STOCAsmNZ
    0U,	// STOCAsmO
    0U,	// STOCAsmP
    0U,	// STOCAsmZ
    0U,	// STOCFH
    128U,	// STOCFHAsm
    0U,	// STOCFHAsmE
    0U,	// STOCFHAsmH
    0U,	// STOCFHAsmHE
    0U,	// STOCFHAsmL
    0U,	// STOCFHAsmLE
    0U,	// STOCFHAsmLH
    0U,	// STOCFHAsmM
    0U,	// STOCFHAsmNE
    0U,	// STOCFHAsmNH
    0U,	// STOCFHAsmNHE
    0U,	// STOCFHAsmNL
    0U,	// STOCFHAsmNLE
    0U,	// STOCFHAsmNLH
    0U,	// STOCFHAsmNM
    0U,	// STOCFHAsmNO
    0U,	// STOCFHAsmNP
    0U,	// STOCFHAsmNZ
    0U,	// STOCFHAsmO
    0U,	// STOCFHAsmP
    0U,	// STOCFHAsmZ
    0U,	// STOCG
    128U,	// STOCGAsm
    0U,	// STOCGAsmE
    0U,	// STOCGAsmH
    0U,	// STOCGAsmHE
    0U,	// STOCGAsmL
    0U,	// STOCGAsmLE
    0U,	// STOCGAsmLH
    0U,	// STOCGAsmM
    0U,	// STOCGAsmNE
    0U,	// STOCGAsmNH
    0U,	// STOCGAsmNHE
    0U,	// STOCGAsmNL
    0U,	// STOCGAsmNLE
    0U,	// STOCGAsmNLH
    0U,	// STOCGAsmNM
    0U,	// STOCGAsmNO
    0U,	// STOCGAsmNP
    0U,	// STOCGAsmNZ
    0U,	// STOCGAsmO
    0U,	// STOCGAsmP
    0U,	// STOCGAsmZ
    0U,	// STOCMux
    0U,	// STPQ
    0U,	// STRAG
    0U,	// STRL
    0U,	// STRV
    0U,	// STRVG
    0U,	// STRVH
    0U,	// STX
    0U,	// STY
    0U,	// SU
    0U,	// SUR
    0U,	// SVC
    0U,	// SW
    0U,	// SWR
    0U,	// SXBR
    0U,	// SXR
    0U,	// SXTR
    256U,	// SXTRA
    0U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    0U,	// TABORT
    0U,	// TAM
    41U,	// TBDR
    41U,	// TBEDR
    0U,	// TBEGIN
    0U,	// TBEGINC
    0U,	// TBEGIN_nofloat
    0U,	// TCDB
    0U,	// TCEB
    0U,	// TCXB
    0U,	// TDCDT
    0U,	// TDCET
    0U,	// TDCXT
    0U,	// TDGDT
    0U,	// TDGET
    0U,	// TDGXT
    0U,	// TEND
    0U,	// THDER
    0U,	// THDR
    0U,	// TLS_GDCALL
    0U,	// TLS_LDCALL
    0U,	// TM
    0U,	// TMHH
    0U,	// TMHH64
    0U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    0U,	// TMLH
    0U,	// TMLH64
    0U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    0U,	// TMY
    0U,	// TP
    0U,	// TR
    0U,	// TRE
    104U,	// TROO
    0U,	// TROOOpt
    104U,	// TROT
    0U,	// TROTOpt
    0U,	// TRT
    0U,	// TRTE
    0U,	// TRTEOpt
    104U,	// TRTO
    0U,	// TRTOOpt
    0U,	// TRTR
    0U,	// TRTRE
    0U,	// TRTREOpt
    104U,	// TRTT
    0U,	// TRTTOpt
    0U,	// TS
    0U,	// Trap
    0U,	// UNPK
    0U,	// UNPKA
    0U,	// UNPKU
    0U,	// UPT
    256U,	// VA
    0U,	// VAB
    43264U,	// VAC
    256U,	// VACC
    0U,	// VACCB
    43264U,	// VACCC
    10496U,	// VACCCQ
    0U,	// VACCF
    0U,	// VACCG
    0U,	// VACCH
    0U,	// VACCQ
    10496U,	// VACQ
    0U,	// VAF
    0U,	// VAG
    0U,	// VAH
    0U,	// VAQ
    256U,	// VAVG
    0U,	// VAVGB
    0U,	// VAVGF
    0U,	// VAVGG
    0U,	// VAVGH
    256U,	// VAVGL
    0U,	// VAVGLB
    0U,	// VAVGLF
    0U,	// VAVGLG
    0U,	// VAVGLH
    33072U,	// VCDG
    304U,	// VCDGB
    33072U,	// VCDLG
    304U,	// VCDLGB
    33024U,	// VCEQ
    0U,	// VCEQB
    0U,	// VCEQBS
    0U,	// VCEQF
    0U,	// VCEQFS
    0U,	// VCEQG
    0U,	// VCEQGS
    0U,	// VCEQH
    0U,	// VCEQHS
    33072U,	// VCGD
    304U,	// VCGDB
    33024U,	// VCH
    0U,	// VCHB
    0U,	// VCHBS
    0U,	// VCHF
    0U,	// VCHFS
    0U,	// VCHG
    0U,	// VCHGS
    0U,	// VCHH
    0U,	// VCHHS
    33024U,	// VCHL
    0U,	// VCHLB
    0U,	// VCHLBS
    0U,	// VCHLF
    0U,	// VCHLFS
    0U,	// VCHLG
    0U,	// VCHLGS
    0U,	// VCHLH
    0U,	// VCHLHS
    0U,	// VCKSM
    33072U,	// VCLGD
    304U,	// VCLGDB
    48U,	// VCLZ
    0U,	// VCLZB
    0U,	// VCLZF
    0U,	// VCLZG
    0U,	// VCLZH
    48U,	// VCTZ
    0U,	// VCTZB
    0U,	// VCTZF
    0U,	// VCTZG
    0U,	// VCTZH
    48U,	// VEC
    0U,	// VECB
    0U,	// VECF
    0U,	// VECG
    0U,	// VECH
    48U,	// VECL
    0U,	// VECLB
    0U,	// VECLF
    0U,	// VECLG
    0U,	// VECLH
    45424U,	// VERIM
    12656U,	// VERIMB
    12656U,	// VERIMF
    12656U,	// VERIMG
    12656U,	// VERIMH
    6456U,	// VERLL
    56U,	// VERLLB
    56U,	// VERLLF
    56U,	// VERLLG
    56U,	// VERLLH
    256U,	// VERLLV
    0U,	// VERLLVB
    0U,	// VERLLVF
    0U,	// VERLLVG
    0U,	// VERLLVH
    6456U,	// VESL
    56U,	// VESLB
    56U,	// VESLF
    56U,	// VESLG
    56U,	// VESLH
    256U,	// VESLV
    0U,	// VESLVB
    0U,	// VESLVF
    0U,	// VESLVG
    0U,	// VESLVH
    6456U,	// VESRA
    56U,	// VESRAB
    56U,	// VESRAF
    56U,	// VESRAG
    56U,	// VESRAH
    256U,	// VESRAV
    0U,	// VESRAVB
    0U,	// VESRAVF
    0U,	// VESRAVG
    0U,	// VESRAVH
    6456U,	// VESRL
    56U,	// VESRLB
    56U,	// VESRLF
    56U,	// VESRLG
    56U,	// VESRLH
    256U,	// VESRLV
    0U,	// VESRLVB
    0U,	// VESRLVF
    0U,	// VESRLVG
    0U,	// VESRLVH
    33024U,	// VFA
    0U,	// VFADB
    33024U,	// VFAE
    256U,	// VFAEB
    256U,	// VFAEBS
    256U,	// VFAEF
    256U,	// VFAEFS
    256U,	// VFAEH
    256U,	// VFAEHS
    256U,	// VFAEZB
    256U,	// VFAEZBS
    256U,	// VFAEZF
    256U,	// VFAEZFS
    256U,	// VFAEZH
    256U,	// VFAEZHS
    33024U,	// VFCE
    0U,	// VFCEDB
    0U,	// VFCEDBS
    33024U,	// VFCH
    0U,	// VFCHDB
    0U,	// VFCHDBS
    33024U,	// VFCHE
    0U,	// VFCHEDB
    0U,	// VFCHEDBS
    33024U,	// VFD
    0U,	// VFDDB
    33024U,	// VFEE
    256U,	// VFEEB
    0U,	// VFEEBS
    256U,	// VFEEF
    0U,	// VFEEFS
    256U,	// VFEEH
    0U,	// VFEEHS
    0U,	// VFEEZB
    0U,	// VFEEZBS
    0U,	// VFEEZF
    0U,	// VFEEZFS
    0U,	// VFEEZH
    0U,	// VFEEZHS
    33024U,	// VFENE
    256U,	// VFENEB
    0U,	// VFENEBS
    256U,	// VFENEF
    0U,	// VFENEFS
    256U,	// VFENEH
    0U,	// VFENEHS
    0U,	// VFENEZB
    0U,	// VFENEZBS
    0U,	// VFENEZF
    0U,	// VFENEZFS
    0U,	// VFENEZH
    0U,	// VFENEZHS
    33072U,	// VFI
    304U,	// VFIDB
    0U,	// VFLCDB
    0U,	// VFLNDB
    0U,	// VFLPDB
    33024U,	// VFM
    43264U,	// VFMA
    10496U,	// VFMADB
    0U,	// VFMDB
    43264U,	// VFMS
    10496U,	// VFMSDB
    33072U,	// VFPSO
    48U,	// VFPSODB
    33024U,	// VFS
    0U,	// VFSDB
    304U,	// VFSQ
    0U,	// VFSQDB
    33192U,	// VFTCI
    168U,	// VFTCIDB
    0U,	// VGBM
    3U,	// VGEF
    4U,	// VGEG
    256U,	// VGFM
    43264U,	// VGFMA
    10496U,	// VGFMAB
    10496U,	// VGFMAF
    10496U,	// VGFMAG
    10496U,	// VGFMAH
    0U,	// VGFMB
    0U,	// VGFMF
    0U,	// VGFMG
    0U,	// VGFMH
    36U,	// VGM
    44U,	// VGMB
    44U,	// VGMF
    44U,	// VGMG
    44U,	// VGMH
    304U,	// VISTR
    48U,	// VISTRB
    0U,	// VISTRBS
    48U,	// VISTRF
    0U,	// VISTRFS
    48U,	// VISTRH
    0U,	// VISTRHS
    0U,	// VL
    0U,	// VL32
    0U,	// VL64
    104U,	// VLBB
    48U,	// VLC
    0U,	// VLCB
    0U,	// VLCF
    0U,	// VLCG
    0U,	// VLCH
    304U,	// VLDE
    0U,	// VLDEB
    160U,	// VLEB
    33072U,	// VLED
    304U,	// VLEDB
    176U,	// VLEF
    184U,	// VLEG
    192U,	// VLEH
    128U,	// VLEIB
    200U,	// VLEIF
    208U,	// VLEIG
    216U,	// VLEIH
    6456U,	// VLGV
    56U,	// VLGVB
    56U,	// VLGVF
    56U,	// VLGVG
    56U,	// VLGVH
    56U,	// VLL
    104U,	// VLLEZ
    0U,	// VLLEZB
    0U,	// VLLEZF
    0U,	// VLLEZG
    0U,	// VLLEZH
    56U,	// VLM
    48U,	// VLP
    0U,	// VLPB
    0U,	// VLPF
    0U,	// VLPG
    0U,	// VLPH
    0U,	// VLR
    0U,	// VLR32
    0U,	// VLR64
    104U,	// VLREP
    0U,	// VLREPB
    0U,	// VLREPF
    0U,	// VLREPG
    0U,	// VLREPH
    14616U,	// VLVG
    24U,	// VLVGB
    24U,	// VLVGF
    24U,	// VLVGG
    24U,	// VLVGH
    0U,	// VLVGP
    0U,	// VLVGP32
    43264U,	// VMAE
    10496U,	// VMAEB
    10496U,	// VMAEF
    10496U,	// VMAEH
    43264U,	// VMAH
    10496U,	// VMAHB
    10496U,	// VMAHF
    10496U,	// VMAHH
    43264U,	// VMAL
    10496U,	// VMALB
    43264U,	// VMALE
    10496U,	// VMALEB
    10496U,	// VMALEF
    10496U,	// VMALEH
    10496U,	// VMALF
    43264U,	// VMALH
    10496U,	// VMALHB
    10496U,	// VMALHF
    10496U,	// VMALHH
    10496U,	// VMALHW
    43264U,	// VMALO
    10496U,	// VMALOB
    10496U,	// VMALOF
    10496U,	// VMALOH
    43264U,	// VMAO
    10496U,	// VMAOB
    10496U,	// VMAOF
    10496U,	// VMAOH
    256U,	// VME
    0U,	// VMEB
    0U,	// VMEF
    0U,	// VMEH
    256U,	// VMH
    0U,	// VMHB
    0U,	// VMHF
    0U,	// VMHH
    256U,	// VML
    0U,	// VMLB
    256U,	// VMLE
    0U,	// VMLEB
    0U,	// VMLEF
    0U,	// VMLEH
    0U,	// VMLF
    256U,	// VMLH
    0U,	// VMLHB
    0U,	// VMLHF
    0U,	// VMLHH
    0U,	// VMLHW
    256U,	// VMLO
    0U,	// VMLOB
    0U,	// VMLOF
    0U,	// VMLOH
    256U,	// VMN
    0U,	// VMNB
    0U,	// VMNF
    0U,	// VMNG
    0U,	// VMNH
    256U,	// VMNL
    0U,	// VMNLB
    0U,	// VMNLF
    0U,	// VMNLG
    0U,	// VMNLH
    256U,	// VMO
    0U,	// VMOB
    0U,	// VMOF
    0U,	// VMOH
    256U,	// VMRH
    0U,	// VMRHB
    0U,	// VMRHF
    0U,	// VMRHG
    0U,	// VMRHH
    256U,	// VMRL
    0U,	// VMRLB
    0U,	// VMRLF
    0U,	// VMRLG
    0U,	// VMRLH
    256U,	// VMX
    0U,	// VMXB
    0U,	// VMXF
    0U,	// VMXG
    0U,	// VMXH
    256U,	// VMXL
    0U,	// VMXLB
    0U,	// VMXLF
    0U,	// VMXLG
    0U,	// VMXLH
    0U,	// VN
    0U,	// VNC
    0U,	// VNO
    0U,	// VO
    0U,	// VONE
    256U,	// VPDI
    10496U,	// VPERM
    256U,	// VPK
    0U,	// VPKF
    0U,	// VPKG
    0U,	// VPKH
    33024U,	// VPKLS
    0U,	// VPKLSF
    0U,	// VPKLSFS
    0U,	// VPKLSG
    0U,	// VPKLSGS
    0U,	// VPKLSH
    0U,	// VPKLSHS
    33024U,	// VPKS
    0U,	// VPKSF
    0U,	// VPKSFS
    0U,	// VPKSG
    0U,	// VPKSGS
    0U,	// VPKSH
    0U,	// VPKSHS
    48U,	// VPOPCT
    480U,	// VREP
    224U,	// VREPB
    224U,	// VREPF
    224U,	// VREPG
    224U,	// VREPH
    48U,	// VREPI
    0U,	// VREPIB
    0U,	// VREPIF
    0U,	// VREPIG
    0U,	// VREPIH
    256U,	// VS
    0U,	// VSB
    43264U,	// VSBCBI
    10496U,	// VSBCBIQ
    43264U,	// VSBI
    10496U,	// VSBIQ
    256U,	// VSCBI
    0U,	// VSCBIB
    0U,	// VSCBIF
    0U,	// VSCBIG
    0U,	// VSCBIH
    0U,	// VSCBIQ
    4U,	// VSCEF
    4U,	// VSCEG
    48U,	// VSEG
    0U,	// VSEGB
    0U,	// VSEGF
    0U,	// VSEGH
    10496U,	// VSEL
    0U,	// VSF
    0U,	// VSG
    0U,	// VSH
    0U,	// VSL
    0U,	// VSLB
    16640U,	// VSLDB
    0U,	// VSQ
    0U,	// VSRA
    0U,	// VSRAB
    0U,	// VSRL
    0U,	// VSRLB
    0U,	// VST
    0U,	// VST32
    0U,	// VST64
    104U,	// VSTEB
    232U,	// VSTEF
    240U,	// VSTEG
    248U,	// VSTEH
    56U,	// VSTL
    56U,	// VSTM
    43264U,	// VSTRC
    43264U,	// VSTRCB
    43264U,	// VSTRCBS
    43264U,	// VSTRCF
    43264U,	// VSTRCFS
    43264U,	// VSTRCH
    43264U,	// VSTRCHS
    43264U,	// VSTRCZB
    43264U,	// VSTRCZBS
    43264U,	// VSTRCZF
    43264U,	// VSTRCZFS
    43264U,	// VSTRCZH
    43264U,	// VSTRCZHS
    256U,	// VSUM
    0U,	// VSUMB
    256U,	// VSUMG
    0U,	// VSUMGF
    0U,	// VSUMGH
    0U,	// VSUMH
    256U,	// VSUMQ
    0U,	// VSUMQF
    0U,	// VSUMQG
    0U,	// VTM
    48U,	// VUPH
    0U,	// VUPHB
    0U,	// VUPHF
    0U,	// VUPHH
    48U,	// VUPL
    0U,	// VUPLB
    0U,	// VUPLF
    48U,	// VUPLH
    0U,	// VUPLHB
    0U,	// VUPLHF
    0U,	// VUPLHH
    0U,	// VUPLHW
    48U,	// VUPLL
    0U,	// VUPLLB
    0U,	// VUPLLF
    0U,	// VUPLLH
    0U,	// VX
    0U,	// VZERO
    304U,	// WCDGB
    304U,	// WCDLGB
    304U,	// WCGDB
    304U,	// WCLGDB
    0U,	// WFADB
    304U,	// WFC
    0U,	// WFCDB
    0U,	// WFCEDB
    0U,	// WFCEDBS
    0U,	// WFCHDB
    0U,	// WFCHDBS
    0U,	// WFCHEDB
    0U,	// WFCHEDBS
    0U,	// WFDDB
    304U,	// WFIDB
    304U,	// WFK
    0U,	// WFKDB
    0U,	// WFLCDB
    0U,	// WFLNDB
    0U,	// WFLPDB
    10496U,	// WFMADB
    0U,	// WFMDB
    10496U,	// WFMSDB
    48U,	// WFPSODB
    0U,	// WFSDB
    0U,	// WFSQDB
    168U,	// WFTCIDB
    0U,	// WLDEB
    304U,	// WLEDB
    0U,	// X
    0U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    0U,	// XG
    0U,	// XGR
    0U,	// XGRK
    0U,	// XI
    0U,	// XIFMux
    0U,	// XIHF
    0U,	// XIHF64
    0U,	// XILF
    0U,	// XILF64
    0U,	// XIY
    0U,	// XR
    0U,	// XRK
    0U,	// XY
    0U,	// ZAP
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_SEQUENCE
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_STORE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// A
    0U,	// AD
    0U,	// ADB
    0U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    0U,	// ADR
    0U,	// ADTR
    0U,	// ADTRA
    0U,	// AE
    0U,	// AEB
    0U,	// AEBR
    0U,	// AER
    0U,	// AEXT128_64
    0U,	// AFI
    0U,	// AFIMux
    0U,	// AG
    0U,	// AGF
    0U,	// AGFI
    0U,	// AGFR
    0U,	// AGHI
    0U,	// AGHIK
    0U,	// AGR
    0U,	// AGRK
    0U,	// AGSI
    0U,	// AH
    0U,	// AHI
    0U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    0U,	// AHY
    0U,	// AIH
    0U,	// AL
    0U,	// ALC
    0U,	// ALCG
    0U,	// ALCGR
    0U,	// ALCR
    0U,	// ALFI
    0U,	// ALG
    0U,	// ALGF
    0U,	// ALGFI
    0U,	// ALGFR
    0U,	// ALGHSIK
    0U,	// ALGR
    0U,	// ALGRK
    0U,	// ALGSI
    0U,	// ALHSIK
    0U,	// ALR
    0U,	// ALRK
    0U,	// ALSI
    0U,	// ALY
    0U,	// AP
    0U,	// AR
    0U,	// ARK
    0U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    0U,	// AU
    0U,	// AUR
    0U,	// AW
    0U,	// AWR
    0U,	// AXBR
    0U,	// AXR
    0U,	// AXTR
    0U,	// AXTRA
    0U,	// AY
    0U,	// B
    0U,	// BAL
    0U,	// BALR
    0U,	// BAS
    0U,	// BASR
    0U,	// BASSM
    0U,	// BAsmE
    0U,	// BAsmH
    0U,	// BAsmHE
    0U,	// BAsmL
    0U,	// BAsmLE
    0U,	// BAsmLH
    0U,	// BAsmM
    0U,	// BAsmNE
    0U,	// BAsmNH
    0U,	// BAsmNHE
    0U,	// BAsmNL
    0U,	// BAsmNLE
    0U,	// BAsmNLH
    0U,	// BAsmNM
    0U,	// BAsmNO
    0U,	// BAsmNP
    0U,	// BAsmNZ
    0U,	// BAsmO
    0U,	// BAsmP
    0U,	// BAsmZ
    0U,	// BC
    0U,	// BCAsm
    0U,	// BCR
    0U,	// BCRAsm
    0U,	// BCT
    0U,	// BCTG
    0U,	// BCTGR
    0U,	// BCTR
    0U,	// BPP
    0U,	// BPRP
    0U,	// BR
    0U,	// BRAS
    0U,	// BRASL
    0U,	// BRAsmE
    0U,	// BRAsmH
    0U,	// BRAsmHE
    0U,	// BRAsmL
    0U,	// BRAsmLE
    0U,	// BRAsmLH
    0U,	// BRAsmM
    0U,	// BRAsmNE
    0U,	// BRAsmNH
    0U,	// BRAsmNHE
    0U,	// BRAsmNL
    0U,	// BRAsmNLE
    0U,	// BRAsmNLH
    0U,	// BRAsmNM
    0U,	// BRAsmNO
    0U,	// BRAsmNP
    0U,	// BRAsmNZ
    0U,	// BRAsmO
    0U,	// BRAsmP
    0U,	// BRAsmZ
    0U,	// BRC
    0U,	// BRCAsm
    0U,	// BRCL
    0U,	// BRCLAsm
    0U,	// BRCT
    0U,	// BRCTG
    0U,	// BRCTH
    0U,	// BRXH
    0U,	// BRXHG
    0U,	// BRXLE
    0U,	// BRXLG
    0U,	// BSM
    0U,	// BXH
    0U,	// BXHG
    0U,	// BXLE
    0U,	// BXLEG
    0U,	// C
    0U,	// CD
    0U,	// CDB
    0U,	// CDBR
    0U,	// CDFBR
    0U,	// CDFBRA
    0U,	// CDFR
    0U,	// CDFTR
    0U,	// CDGBR
    0U,	// CDGBRA
    0U,	// CDGR
    0U,	// CDGTR
    0U,	// CDGTRA
    0U,	// CDLFBR
    0U,	// CDLFTR
    0U,	// CDLGBR
    0U,	// CDLGTR
    0U,	// CDPT
    0U,	// CDR
    0U,	// CDS
    0U,	// CDSG
    0U,	// CDSTR
    0U,	// CDSY
    0U,	// CDTR
    0U,	// CDUTR
    0U,	// CDZT
    0U,	// CE
    0U,	// CEB
    0U,	// CEBR
    0U,	// CEDTR
    0U,	// CEFBR
    0U,	// CEFBRA
    0U,	// CEFR
    0U,	// CEGBR
    0U,	// CEGBRA
    0U,	// CEGR
    0U,	// CELFBR
    0U,	// CELGBR
    0U,	// CER
    0U,	// CEXTR
    0U,	// CFC
    0U,	// CFDBR
    0U,	// CFDBRA
    0U,	// CFDR
    0U,	// CFDTR
    0U,	// CFEBR
    0U,	// CFEBRA
    0U,	// CFER
    0U,	// CFI
    0U,	// CFIMux
    0U,	// CFXBR
    0U,	// CFXBRA
    0U,	// CFXR
    0U,	// CFXTR
    0U,	// CG
    0U,	// CGDBR
    0U,	// CGDBRA
    0U,	// CGDR
    0U,	// CGDTR
    0U,	// CGDTRA
    0U,	// CGEBR
    0U,	// CGEBRA
    0U,	// CGER
    0U,	// CGF
    0U,	// CGFI
    0U,	// CGFR
    0U,	// CGFRL
    0U,	// CGH
    0U,	// CGHI
    0U,	// CGHRL
    0U,	// CGHSI
    0U,	// CGIB
    0U,	// CGIBAsm
    0U,	// CGIBAsmE
    0U,	// CGIBAsmH
    0U,	// CGIBAsmHE
    0U,	// CGIBAsmL
    0U,	// CGIBAsmLE
    0U,	// CGIBAsmLH
    0U,	// CGIBAsmNE
    0U,	// CGIBAsmNH
    0U,	// CGIBAsmNHE
    0U,	// CGIBAsmNL
    0U,	// CGIBAsmNLE
    0U,	// CGIBAsmNLH
    0U,	// CGIBCall
    0U,	// CGIBReturn
    0U,	// CGIJ
    0U,	// CGIJAsm
    0U,	// CGIJAsmE
    0U,	// CGIJAsmH
    0U,	// CGIJAsmHE
    0U,	// CGIJAsmL
    0U,	// CGIJAsmLE
    0U,	// CGIJAsmLH
    0U,	// CGIJAsmNE
    0U,	// CGIJAsmNH
    0U,	// CGIJAsmNHE
    0U,	// CGIJAsmNL
    0U,	// CGIJAsmNLE
    0U,	// CGIJAsmNLH
    0U,	// CGIT
    0U,	// CGITAsm
    0U,	// CGITAsmE
    0U,	// CGITAsmH
    0U,	// CGITAsmHE
    0U,	// CGITAsmL
    0U,	// CGITAsmLE
    0U,	// CGITAsmLH
    0U,	// CGITAsmNE
    0U,	// CGITAsmNH
    0U,	// CGITAsmNHE
    0U,	// CGITAsmNL
    0U,	// CGITAsmNLE
    0U,	// CGITAsmNLH
    0U,	// CGR
    0U,	// CGRB
    0U,	// CGRBAsm
    0U,	// CGRBAsmE
    0U,	// CGRBAsmH
    0U,	// CGRBAsmHE
    0U,	// CGRBAsmL
    0U,	// CGRBAsmLE
    0U,	// CGRBAsmLH
    0U,	// CGRBAsmNE
    0U,	// CGRBAsmNH
    0U,	// CGRBAsmNHE
    0U,	// CGRBAsmNL
    0U,	// CGRBAsmNLE
    0U,	// CGRBAsmNLH
    0U,	// CGRBCall
    0U,	// CGRBReturn
    0U,	// CGRJ
    0U,	// CGRJAsm
    0U,	// CGRJAsmE
    0U,	// CGRJAsmH
    0U,	// CGRJAsmHE
    0U,	// CGRJAsmL
    0U,	// CGRJAsmLE
    0U,	// CGRJAsmLH
    0U,	// CGRJAsmNE
    0U,	// CGRJAsmNH
    0U,	// CGRJAsmNHE
    0U,	// CGRJAsmNL
    0U,	// CGRJAsmNLE
    0U,	// CGRJAsmNLH
    0U,	// CGRL
    0U,	// CGRT
    0U,	// CGRTAsm
    0U,	// CGRTAsmE
    0U,	// CGRTAsmH
    0U,	// CGRTAsmHE
    0U,	// CGRTAsmL
    0U,	// CGRTAsmLE
    0U,	// CGRTAsmLH
    0U,	// CGRTAsmNE
    0U,	// CGRTAsmNH
    0U,	// CGRTAsmNHE
    0U,	// CGRTAsmNL
    0U,	// CGRTAsmNLE
    0U,	// CGRTAsmNLH
    0U,	// CGXBR
    0U,	// CGXBRA
    0U,	// CGXR
    0U,	// CGXTR
    0U,	// CGXTRA
    0U,	// CH
    0U,	// CHF
    0U,	// CHHSI
    0U,	// CHI
    0U,	// CHIMux
    0U,	// CHRL
    0U,	// CHSI
    0U,	// CHY
    0U,	// CIB
    0U,	// CIBAsm
    0U,	// CIBAsmE
    0U,	// CIBAsmH
    0U,	// CIBAsmHE
    0U,	// CIBAsmL
    0U,	// CIBAsmLE
    0U,	// CIBAsmLH
    0U,	// CIBAsmNE
    0U,	// CIBAsmNH
    0U,	// CIBAsmNHE
    0U,	// CIBAsmNL
    0U,	// CIBAsmNLE
    0U,	// CIBAsmNLH
    0U,	// CIBCall
    0U,	// CIBReturn
    0U,	// CIH
    0U,	// CIJ
    0U,	// CIJAsm
    0U,	// CIJAsmE
    0U,	// CIJAsmH
    0U,	// CIJAsmHE
    0U,	// CIJAsmL
    0U,	// CIJAsmLE
    0U,	// CIJAsmLH
    0U,	// CIJAsmNE
    0U,	// CIJAsmNH
    0U,	// CIJAsmNHE
    0U,	// CIJAsmNL
    0U,	// CIJAsmNLE
    0U,	// CIJAsmNLH
    0U,	// CIT
    0U,	// CITAsm
    0U,	// CITAsmE
    0U,	// CITAsmH
    0U,	// CITAsmHE
    0U,	// CITAsmL
    0U,	// CITAsmLE
    0U,	// CITAsmLH
    0U,	// CITAsmNE
    0U,	// CITAsmNH
    0U,	// CITAsmNHE
    0U,	// CITAsmNL
    0U,	// CITAsmNLE
    0U,	// CITAsmNLH
    0U,	// CKSM
    0U,	// CL
    0U,	// CLC
    0U,	// CLCL
    0U,	// CLCLE
    0U,	// CLCLU
    0U,	// CLCLoop
    0U,	// CLCSequence
    0U,	// CLFDBR
    0U,	// CLFDTR
    0U,	// CLFEBR
    0U,	// CLFHSI
    0U,	// CLFI
    0U,	// CLFIMux
    0U,	// CLFIT
    0U,	// CLFITAsm
    0U,	// CLFITAsmE
    0U,	// CLFITAsmH
    0U,	// CLFITAsmHE
    0U,	// CLFITAsmL
    0U,	// CLFITAsmLE
    0U,	// CLFITAsmLH
    0U,	// CLFITAsmNE
    0U,	// CLFITAsmNH
    0U,	// CLFITAsmNHE
    0U,	// CLFITAsmNL
    0U,	// CLFITAsmNLE
    0U,	// CLFITAsmNLH
    0U,	// CLFXBR
    0U,	// CLFXTR
    0U,	// CLG
    0U,	// CLGDBR
    0U,	// CLGDTR
    0U,	// CLGEBR
    0U,	// CLGF
    0U,	// CLGFI
    0U,	// CLGFR
    0U,	// CLGFRL
    0U,	// CLGHRL
    0U,	// CLGHSI
    0U,	// CLGIB
    0U,	// CLGIBAsm
    0U,	// CLGIBAsmE
    0U,	// CLGIBAsmH
    0U,	// CLGIBAsmHE
    0U,	// CLGIBAsmL
    0U,	// CLGIBAsmLE
    0U,	// CLGIBAsmLH
    0U,	// CLGIBAsmNE
    0U,	// CLGIBAsmNH
    0U,	// CLGIBAsmNHE
    0U,	// CLGIBAsmNL
    0U,	// CLGIBAsmNLE
    0U,	// CLGIBAsmNLH
    0U,	// CLGIBCall
    0U,	// CLGIBReturn
    0U,	// CLGIJ
    0U,	// CLGIJAsm
    0U,	// CLGIJAsmE
    0U,	// CLGIJAsmH
    0U,	// CLGIJAsmHE
    0U,	// CLGIJAsmL
    0U,	// CLGIJAsmLE
    0U,	// CLGIJAsmLH
    0U,	// CLGIJAsmNE
    0U,	// CLGIJAsmNH
    0U,	// CLGIJAsmNHE
    0U,	// CLGIJAsmNL
    0U,	// CLGIJAsmNLE
    0U,	// CLGIJAsmNLH
    0U,	// CLGIT
    0U,	// CLGITAsm
    0U,	// CLGITAsmE
    0U,	// CLGITAsmH
    0U,	// CLGITAsmHE
    0U,	// CLGITAsmL
    0U,	// CLGITAsmLE
    0U,	// CLGITAsmLH
    0U,	// CLGITAsmNE
    0U,	// CLGITAsmNH
    0U,	// CLGITAsmNHE
    0U,	// CLGITAsmNL
    0U,	// CLGITAsmNLE
    0U,	// CLGITAsmNLH
    0U,	// CLGR
    0U,	// CLGRB
    0U,	// CLGRBAsm
    0U,	// CLGRBAsmE
    0U,	// CLGRBAsmH
    0U,	// CLGRBAsmHE
    0U,	// CLGRBAsmL
    0U,	// CLGRBAsmLE
    0U,	// CLGRBAsmLH
    0U,	// CLGRBAsmNE
    0U,	// CLGRBAsmNH
    0U,	// CLGRBAsmNHE
    0U,	// CLGRBAsmNL
    0U,	// CLGRBAsmNLE
    0U,	// CLGRBAsmNLH
    0U,	// CLGRBCall
    0U,	// CLGRBReturn
    0U,	// CLGRJ
    0U,	// CLGRJAsm
    0U,	// CLGRJAsmE
    0U,	// CLGRJAsmH
    0U,	// CLGRJAsmHE
    0U,	// CLGRJAsmL
    0U,	// CLGRJAsmLE
    0U,	// CLGRJAsmLH
    0U,	// CLGRJAsmNE
    0U,	// CLGRJAsmNH
    0U,	// CLGRJAsmNHE
    0U,	// CLGRJAsmNL
    0U,	// CLGRJAsmNLE
    0U,	// CLGRJAsmNLH
    0U,	// CLGRL
    0U,	// CLGRT
    0U,	// CLGRTAsm
    0U,	// CLGRTAsmE
    0U,	// CLGRTAsmH
    0U,	// CLGRTAsmHE
    0U,	// CLGRTAsmL
    0U,	// CLGRTAsmLE
    0U,	// CLGRTAsmLH
    0U,	// CLGRTAsmNE
    0U,	// CLGRTAsmNH
    0U,	// CLGRTAsmNHE
    0U,	// CLGRTAsmNL
    0U,	// CLGRTAsmNLE
    0U,	// CLGRTAsmNLH
    0U,	// CLGT
    0U,	// CLGTAsm
    0U,	// CLGTAsmE
    0U,	// CLGTAsmH
    0U,	// CLGTAsmHE
    0U,	// CLGTAsmL
    0U,	// CLGTAsmLE
    0U,	// CLGTAsmLH
    0U,	// CLGTAsmNE
    0U,	// CLGTAsmNH
    0U,	// CLGTAsmNHE
    0U,	// CLGTAsmNL
    0U,	// CLGTAsmNLE
    0U,	// CLGTAsmNLH
    0U,	// CLGXBR
    0U,	// CLGXTR
    0U,	// CLHF
    0U,	// CLHHSI
    0U,	// CLHRL
    0U,	// CLI
    0U,	// CLIB
    0U,	// CLIBAsm
    0U,	// CLIBAsmE
    0U,	// CLIBAsmH
    0U,	// CLIBAsmHE
    0U,	// CLIBAsmL
    0U,	// CLIBAsmLE
    0U,	// CLIBAsmLH
    0U,	// CLIBAsmNE
    0U,	// CLIBAsmNH
    0U,	// CLIBAsmNHE
    0U,	// CLIBAsmNL
    0U,	// CLIBAsmNLE
    0U,	// CLIBAsmNLH
    0U,	// CLIBCall
    0U,	// CLIBReturn
    0U,	// CLIH
    0U,	// CLIJ
    0U,	// CLIJAsm
    0U,	// CLIJAsmE
    0U,	// CLIJAsmH
    0U,	// CLIJAsmHE
    0U,	// CLIJAsmL
    0U,	// CLIJAsmLE
    0U,	// CLIJAsmLH
    0U,	// CLIJAsmNE
    0U,	// CLIJAsmNH
    0U,	// CLIJAsmNHE
    0U,	// CLIJAsmNL
    0U,	// CLIJAsmNLE
    0U,	// CLIJAsmNLH
    0U,	// CLIY
    0U,	// CLM
    0U,	// CLMH
    0U,	// CLMY
    0U,	// CLMux
    0U,	// CLR
    0U,	// CLRB
    0U,	// CLRBAsm
    0U,	// CLRBAsmE
    0U,	// CLRBAsmH
    0U,	// CLRBAsmHE
    0U,	// CLRBAsmL
    0U,	// CLRBAsmLE
    0U,	// CLRBAsmLH
    0U,	// CLRBAsmNE
    0U,	// CLRBAsmNH
    0U,	// CLRBAsmNHE
    0U,	// CLRBAsmNL
    0U,	// CLRBAsmNLE
    0U,	// CLRBAsmNLH
    0U,	// CLRBCall
    0U,	// CLRBReturn
    0U,	// CLRJ
    0U,	// CLRJAsm
    0U,	// CLRJAsmE
    0U,	// CLRJAsmH
    0U,	// CLRJAsmHE
    0U,	// CLRJAsmL
    0U,	// CLRJAsmLE
    0U,	// CLRJAsmLH
    0U,	// CLRJAsmNE
    0U,	// CLRJAsmNH
    0U,	// CLRJAsmNHE
    0U,	// CLRJAsmNL
    0U,	// CLRJAsmNLE
    0U,	// CLRJAsmNLH
    0U,	// CLRL
    0U,	// CLRT
    0U,	// CLRTAsm
    0U,	// CLRTAsmE
    0U,	// CLRTAsmH
    0U,	// CLRTAsmHE
    0U,	// CLRTAsmL
    0U,	// CLRTAsmLE
    0U,	// CLRTAsmLH
    0U,	// CLRTAsmNE
    0U,	// CLRTAsmNH
    0U,	// CLRTAsmNHE
    0U,	// CLRTAsmNL
    0U,	// CLRTAsmNLE
    0U,	// CLRTAsmNLH
    0U,	// CLST
    0U,	// CLSTLoop
    0U,	// CLT
    0U,	// CLTAsm
    0U,	// CLTAsmE
    0U,	// CLTAsmH
    0U,	// CLTAsmHE
    0U,	// CLTAsmL
    0U,	// CLTAsmLE
    0U,	// CLTAsmLH
    0U,	// CLTAsmNE
    0U,	// CLTAsmNH
    0U,	// CLTAsmNHE
    0U,	// CLTAsmNL
    0U,	// CLTAsmNLE
    0U,	// CLTAsmNLH
    0U,	// CLY
    0U,	// CMPSC
    0U,	// CMux
    0U,	// CP
    0U,	// CPDT
    0U,	// CPSDRdd
    0U,	// CPSDRds
    0U,	// CPSDRsd
    0U,	// CPSDRss
    0U,	// CPXT
    0U,	// CPYA
    0U,	// CR
    0U,	// CRB
    0U,	// CRBAsm
    0U,	// CRBAsmE
    0U,	// CRBAsmH
    0U,	// CRBAsmHE
    0U,	// CRBAsmL
    0U,	// CRBAsmLE
    0U,	// CRBAsmLH
    0U,	// CRBAsmNE
    0U,	// CRBAsmNH
    0U,	// CRBAsmNHE
    0U,	// CRBAsmNL
    0U,	// CRBAsmNLE
    0U,	// CRBAsmNLH
    0U,	// CRBCall
    0U,	// CRBReturn
    0U,	// CRJ
    0U,	// CRJAsm
    0U,	// CRJAsmE
    0U,	// CRJAsmH
    0U,	// CRJAsmHE
    0U,	// CRJAsmL
    0U,	// CRJAsmLE
    0U,	// CRJAsmLH
    0U,	// CRJAsmNE
    0U,	// CRJAsmNH
    0U,	// CRJAsmNHE
    0U,	// CRJAsmNL
    0U,	// CRJAsmNLE
    0U,	// CRJAsmNLH
    0U,	// CRL
    0U,	// CRT
    0U,	// CRTAsm
    0U,	// CRTAsmE
    0U,	// CRTAsmH
    0U,	// CRTAsmHE
    0U,	// CRTAsmL
    0U,	// CRTAsmLE
    0U,	// CRTAsmLH
    0U,	// CRTAsmNE
    0U,	// CRTAsmNH
    0U,	// CRTAsmNHE
    0U,	// CRTAsmNL
    0U,	// CRTAsmNLE
    0U,	// CRTAsmNLH
    0U,	// CS
    0U,	// CSDTR
    0U,	// CSG
    0U,	// CSST
    0U,	// CSXTR
    0U,	// CSY
    0U,	// CU12
    0U,	// CU12Opt
    0U,	// CU14
    0U,	// CU14Opt
    0U,	// CU21
    0U,	// CU21Opt
    0U,	// CU24
    0U,	// CU24Opt
    0U,	// CU41
    0U,	// CU42
    0U,	// CUDTR
    0U,	// CUSE
    0U,	// CUTFU
    0U,	// CUTFUOpt
    0U,	// CUUTF
    0U,	// CUUTFOpt
    0U,	// CUXTR
    0U,	// CVB
    0U,	// CVBG
    0U,	// CVBY
    0U,	// CVD
    0U,	// CVDG
    0U,	// CVDY
    0U,	// CXBR
    0U,	// CXFBR
    0U,	// CXFBRA
    0U,	// CXFR
    0U,	// CXFTR
    0U,	// CXGBR
    0U,	// CXGBRA
    0U,	// CXGR
    0U,	// CXGTR
    0U,	// CXGTRA
    0U,	// CXLFBR
    0U,	// CXLFTR
    0U,	// CXLGBR
    0U,	// CXLGTR
    0U,	// CXPT
    0U,	// CXR
    0U,	// CXSTR
    0U,	// CXTR
    0U,	// CXUTR
    0U,	// CXZT
    0U,	// CY
    0U,	// CZDT
    0U,	// CZXT
    0U,	// CallBASR
    0U,	// CallBCR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallBRCL
    0U,	// CallJG
    0U,	// CondReturn
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore32Mux
    0U,	// CondStore32MuxInv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    0U,	// CondTrap
    0U,	// D
    0U,	// DD
    0U,	// DDB
    0U,	// DDBR
    0U,	// DDR
    0U,	// DDTR
    0U,	// DDTRA
    0U,	// DE
    0U,	// DEB
    0U,	// DEBR
    0U,	// DER
    0U,	// DIDBR
    0U,	// DIEBR
    0U,	// DL
    0U,	// DLG
    0U,	// DLGR
    0U,	// DLR
    0U,	// DP
    0U,	// DR
    0U,	// DSG
    0U,	// DSGF
    0U,	// DSGFR
    0U,	// DSGR
    0U,	// DXBR
    0U,	// DXR
    0U,	// DXTR
    0U,	// DXTRA
    0U,	// EAR
    0U,	// ECAG
    0U,	// ECTG
    0U,	// ED
    0U,	// EDMK
    0U,	// EEDTR
    0U,	// EEXTR
    0U,	// EFPC
    0U,	// EPSW
    0U,	// ESDTR
    0U,	// ESXTR
    0U,	// ETND
    0U,	// EX
    0U,	// EXRL
    0U,	// FIDBR
    0U,	// FIDBRA
    0U,	// FIDR
    0U,	// FIDTR
    0U,	// FIEBR
    0U,	// FIEBRA
    0U,	// FIER
    0U,	// FIXBR
    0U,	// FIXBRA
    0U,	// FIXR
    0U,	// FIXTR
    0U,	// FLOGR
    0U,	// GOT
    0U,	// HDR
    0U,	// HER
    0U,	// IC
    0U,	// IC32
    0U,	// IC32Y
    0U,	// ICM
    0U,	// ICMH
    0U,	// ICMY
    0U,	// ICY
    0U,	// IEDTR
    0U,	// IEXTR
    0U,	// IIFMux
    0U,	// IIHF
    0U,	// IIHF64
    0U,	// IIHH
    0U,	// IIHH64
    0U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    0U,	// IILF
    0U,	// IILF64
    0U,	// IILH
    0U,	// IILH64
    0U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    0U,	// IPM
    0U,	// InsnE
    0U,	// InsnRI
    0U,	// InsnRIE
    0U,	// InsnRIL
    0U,	// InsnRILU
    0U,	// InsnRIS
    0U,	// InsnRR
    0U,	// InsnRRE
    0U,	// InsnRRF
    0U,	// InsnRRS
    0U,	// InsnRS
    0U,	// InsnRSE
    0U,	// InsnRSI
    0U,	// InsnRSY
    0U,	// InsnRX
    0U,	// InsnRXE
    0U,	// InsnRXF
    0U,	// InsnRXY
    0U,	// InsnS
    0U,	// InsnSI
    0U,	// InsnSIL
    0U,	// InsnSIY
    0U,	// InsnSS
    0U,	// InsnSSE
    0U,	// InsnSSF
    0U,	// J
    0U,	// JAsmE
    0U,	// JAsmH
    0U,	// JAsmHE
    0U,	// JAsmL
    0U,	// JAsmLE
    0U,	// JAsmLH
    0U,	// JAsmM
    0U,	// JAsmNE
    0U,	// JAsmNH
    0U,	// JAsmNHE
    0U,	// JAsmNL
    0U,	// JAsmNLE
    0U,	// JAsmNLH
    0U,	// JAsmNM
    0U,	// JAsmNO
    0U,	// JAsmNP
    0U,	// JAsmNZ
    0U,	// JAsmO
    0U,	// JAsmP
    0U,	// JAsmZ
    0U,	// JG
    0U,	// JGAsmE
    0U,	// JGAsmH
    0U,	// JGAsmHE
    0U,	// JGAsmL
    0U,	// JGAsmLE
    0U,	// JGAsmLH
    0U,	// JGAsmM
    0U,	// JGAsmNE
    0U,	// JGAsmNH
    0U,	// JGAsmNHE
    0U,	// JGAsmNL
    0U,	// JGAsmNLE
    0U,	// JGAsmNLH
    0U,	// JGAsmNM
    0U,	// JGAsmNO
    0U,	// JGAsmNP
    0U,	// JGAsmNZ
    0U,	// JGAsmO
    0U,	// JGAsmP
    0U,	// JGAsmZ
    0U,	// KDB
    0U,	// KDBR
    0U,	// KDTR
    0U,	// KEB
    0U,	// KEBR
    0U,	// KIMD
    0U,	// KLMD
    0U,	// KM
    0U,	// KMAC
    0U,	// KMC
    0U,	// KMCTR
    0U,	// KMF
    0U,	// KMO
    0U,	// KXBR
    0U,	// KXTR
    0U,	// L
    0U,	// L128
    0U,	// LA
    0U,	// LAA
    0U,	// LAAG
    0U,	// LAAL
    0U,	// LAALG
    0U,	// LAE
    0U,	// LAEY
    0U,	// LAM
    0U,	// LAMY
    0U,	// LAN
    0U,	// LANG
    0U,	// LAO
    0U,	// LAOG
    0U,	// LARL
    0U,	// LAT
    0U,	// LAX
    0U,	// LAXG
    0U,	// LAY
    0U,	// LB
    0U,	// LBH
    0U,	// LBMux
    0U,	// LBR
    0U,	// LCBB
    0U,	// LCDBR
    0U,	// LCDFR
    0U,	// LCDFR_32
    0U,	// LCDR
    0U,	// LCEBR
    0U,	// LCER
    0U,	// LCGFR
    0U,	// LCGR
    0U,	// LCR
    0U,	// LCXBR
    0U,	// LCXR
    0U,	// LD
    0U,	// LDE
    0U,	// LDE32
    0U,	// LDEB
    0U,	// LDEBR
    0U,	// LDER
    0U,	// LDETR
    0U,	// LDGR
    0U,	// LDR
    0U,	// LDR32
    0U,	// LDXBR
    0U,	// LDXBRA
    0U,	// LDXR
    0U,	// LDXTR
    0U,	// LDY
    0U,	// LE
    0U,	// LEDBR
    0U,	// LEDBRA
    0U,	// LEDR
    0U,	// LEDTR
    0U,	// LEFR
    0U,	// LER
    0U,	// LEXBR
    0U,	// LEXBRA
    0U,	// LEXR
    0U,	// LEY
    0U,	// LFAS
    0U,	// LFER
    0U,	// LFH
    0U,	// LFHAT
    0U,	// LFPC
    0U,	// LG
    0U,	// LGAT
    0U,	// LGB
    0U,	// LGBR
    0U,	// LGDR
    0U,	// LGF
    0U,	// LGFI
    0U,	// LGFR
    0U,	// LGFRL
    0U,	// LGH
    0U,	// LGHI
    0U,	// LGHR
    0U,	// LGHRL
    0U,	// LGR
    0U,	// LGRL
    0U,	// LH
    0U,	// LHH
    0U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    0U,	// LHR
    0U,	// LHRL
    0U,	// LHY
    0U,	// LLC
    0U,	// LLCH
    0U,	// LLCMux
    0U,	// LLCR
    0U,	// LLCRMux
    0U,	// LLGC
    0U,	// LLGCR
    0U,	// LLGF
    0U,	// LLGFAT
    0U,	// LLGFR
    0U,	// LLGFRL
    0U,	// LLGH
    0U,	// LLGHR
    0U,	// LLGHRL
    0U,	// LLGT
    0U,	// LLGTAT
    0U,	// LLGTR
    0U,	// LLH
    0U,	// LLHH
    0U,	// LLHMux
    0U,	// LLHR
    0U,	// LLHRL
    0U,	// LLHRMux
    0U,	// LLIHF
    0U,	// LLIHH
    0U,	// LLIHL
    0U,	// LLILF
    0U,	// LLILH
    0U,	// LLILL
    0U,	// LLZRGF
    0U,	// LM
    0U,	// LMD
    0U,	// LMG
    0U,	// LMH
    0U,	// LMY
    0U,	// LMux
    0U,	// LNDBR
    0U,	// LNDFR
    0U,	// LNDFR_32
    0U,	// LNDR
    0U,	// LNEBR
    0U,	// LNER
    0U,	// LNGFR
    0U,	// LNGR
    0U,	// LNR
    0U,	// LNXBR
    0U,	// LNXR
    0U,	// LOC
    0U,	// LOCAsm
    0U,	// LOCAsmE
    0U,	// LOCAsmH
    0U,	// LOCAsmHE
    0U,	// LOCAsmL
    0U,	// LOCAsmLE
    0U,	// LOCAsmLH
    0U,	// LOCAsmM
    0U,	// LOCAsmNE
    0U,	// LOCAsmNH
    0U,	// LOCAsmNHE
    0U,	// LOCAsmNL
    0U,	// LOCAsmNLE
    0U,	// LOCAsmNLH
    0U,	// LOCAsmNM
    0U,	// LOCAsmNO
    0U,	// LOCAsmNP
    0U,	// LOCAsmNZ
    0U,	// LOCAsmO
    0U,	// LOCAsmP
    0U,	// LOCAsmZ
    0U,	// LOCFH
    0U,	// LOCFHAsm
    0U,	// LOCFHAsmE
    0U,	// LOCFHAsmH
    0U,	// LOCFHAsmHE
    0U,	// LOCFHAsmL
    0U,	// LOCFHAsmLE
    0U,	// LOCFHAsmLH
    0U,	// LOCFHAsmM
    0U,	// LOCFHAsmNE
    0U,	// LOCFHAsmNH
    0U,	// LOCFHAsmNHE
    0U,	// LOCFHAsmNL
    0U,	// LOCFHAsmNLE
    0U,	// LOCFHAsmNLH
    0U,	// LOCFHAsmNM
    0U,	// LOCFHAsmNO
    0U,	// LOCFHAsmNP
    0U,	// LOCFHAsmNZ
    0U,	// LOCFHAsmO
    0U,	// LOCFHAsmP
    0U,	// LOCFHAsmZ
    0U,	// LOCFHR
    0U,	// LOCFHRAsm
    0U,	// LOCFHRAsmE
    0U,	// LOCFHRAsmH
    0U,	// LOCFHRAsmHE
    0U,	// LOCFHRAsmL
    0U,	// LOCFHRAsmLE
    0U,	// LOCFHRAsmLH
    0U,	// LOCFHRAsmM
    0U,	// LOCFHRAsmNE
    0U,	// LOCFHRAsmNH
    0U,	// LOCFHRAsmNHE
    0U,	// LOCFHRAsmNL
    0U,	// LOCFHRAsmNLE
    0U,	// LOCFHRAsmNLH
    0U,	// LOCFHRAsmNM
    0U,	// LOCFHRAsmNO
    0U,	// LOCFHRAsmNP
    0U,	// LOCFHRAsmNZ
    0U,	// LOCFHRAsmO
    0U,	// LOCFHRAsmP
    0U,	// LOCFHRAsmZ
    0U,	// LOCG
    0U,	// LOCGAsm
    0U,	// LOCGAsmE
    0U,	// LOCGAsmH
    0U,	// LOCGAsmHE
    0U,	// LOCGAsmL
    0U,	// LOCGAsmLE
    0U,	// LOCGAsmLH
    0U,	// LOCGAsmM
    0U,	// LOCGAsmNE
    0U,	// LOCGAsmNH
    0U,	// LOCGAsmNHE
    0U,	// LOCGAsmNL
    0U,	// LOCGAsmNLE
    0U,	// LOCGAsmNLH
    0U,	// LOCGAsmNM
    0U,	// LOCGAsmNO
    0U,	// LOCGAsmNP
    0U,	// LOCGAsmNZ
    0U,	// LOCGAsmO
    0U,	// LOCGAsmP
    0U,	// LOCGAsmZ
    0U,	// LOCGHI
    0U,	// LOCGHIAsm
    0U,	// LOCGHIAsmE
    0U,	// LOCGHIAsmH
    0U,	// LOCGHIAsmHE
    0U,	// LOCGHIAsmL
    0U,	// LOCGHIAsmLE
    0U,	// LOCGHIAsmLH
    0U,	// LOCGHIAsmM
    0U,	// LOCGHIAsmNE
    0U,	// LOCGHIAsmNH
    0U,	// LOCGHIAsmNHE
    0U,	// LOCGHIAsmNL
    0U,	// LOCGHIAsmNLE
    0U,	// LOCGHIAsmNLH
    0U,	// LOCGHIAsmNM
    0U,	// LOCGHIAsmNO
    0U,	// LOCGHIAsmNP
    0U,	// LOCGHIAsmNZ
    0U,	// LOCGHIAsmO
    0U,	// LOCGHIAsmP
    0U,	// LOCGHIAsmZ
    0U,	// LOCGR
    0U,	// LOCGRAsm
    0U,	// LOCGRAsmE
    0U,	// LOCGRAsmH
    0U,	// LOCGRAsmHE
    0U,	// LOCGRAsmL
    0U,	// LOCGRAsmLE
    0U,	// LOCGRAsmLH
    0U,	// LOCGRAsmM
    0U,	// LOCGRAsmNE
    0U,	// LOCGRAsmNH
    0U,	// LOCGRAsmNHE
    0U,	// LOCGRAsmNL
    0U,	// LOCGRAsmNLE
    0U,	// LOCGRAsmNLH
    0U,	// LOCGRAsmNM
    0U,	// LOCGRAsmNO
    0U,	// LOCGRAsmNP
    0U,	// LOCGRAsmNZ
    0U,	// LOCGRAsmO
    0U,	// LOCGRAsmP
    0U,	// LOCGRAsmZ
    0U,	// LOCHHI
    0U,	// LOCHHIAsm
    0U,	// LOCHHIAsmE
    0U,	// LOCHHIAsmH
    0U,	// LOCHHIAsmHE
    0U,	// LOCHHIAsmL
    0U,	// LOCHHIAsmLE
    0U,	// LOCHHIAsmLH
    0U,	// LOCHHIAsmM
    0U,	// LOCHHIAsmNE
    0U,	// LOCHHIAsmNH
    0U,	// LOCHHIAsmNHE
    0U,	// LOCHHIAsmNL
    0U,	// LOCHHIAsmNLE
    0U,	// LOCHHIAsmNLH
    0U,	// LOCHHIAsmNM
    0U,	// LOCHHIAsmNO
    0U,	// LOCHHIAsmNP
    0U,	// LOCHHIAsmNZ
    0U,	// LOCHHIAsmO
    0U,	// LOCHHIAsmP
    0U,	// LOCHHIAsmZ
    0U,	// LOCHI
    0U,	// LOCHIAsm
    0U,	// LOCHIAsmE
    0U,	// LOCHIAsmH
    0U,	// LOCHIAsmHE
    0U,	// LOCHIAsmL
    0U,	// LOCHIAsmLE
    0U,	// LOCHIAsmLH
    0U,	// LOCHIAsmM
    0U,	// LOCHIAsmNE
    0U,	// LOCHIAsmNH
    0U,	// LOCHIAsmNHE
    0U,	// LOCHIAsmNL
    0U,	// LOCHIAsmNLE
    0U,	// LOCHIAsmNLH
    0U,	// LOCHIAsmNM
    0U,	// LOCHIAsmNO
    0U,	// LOCHIAsmNP
    0U,	// LOCHIAsmNZ
    0U,	// LOCHIAsmO
    0U,	// LOCHIAsmP
    0U,	// LOCHIAsmZ
    0U,	// LOCHIMux
    0U,	// LOCMux
    0U,	// LOCR
    0U,	// LOCRAsm
    0U,	// LOCRAsmE
    0U,	// LOCRAsmH
    0U,	// LOCRAsmHE
    0U,	// LOCRAsmL
    0U,	// LOCRAsmLE
    0U,	// LOCRAsmLH
    0U,	// LOCRAsmM
    0U,	// LOCRAsmNE
    0U,	// LOCRAsmNH
    0U,	// LOCRAsmNHE
    0U,	// LOCRAsmNL
    0U,	// LOCRAsmNLE
    0U,	// LOCRAsmNLH
    0U,	// LOCRAsmNM
    0U,	// LOCRAsmNO
    0U,	// LOCRAsmNP
    0U,	// LOCRAsmNZ
    0U,	// LOCRAsmO
    0U,	// LOCRAsmP
    0U,	// LOCRAsmZ
    0U,	// LOCRMux
    0U,	// LPD
    0U,	// LPDBR
    0U,	// LPDFR
    0U,	// LPDFR_32
    0U,	// LPDG
    0U,	// LPDR
    0U,	// LPEBR
    0U,	// LPER
    0U,	// LPGFR
    0U,	// LPGR
    0U,	// LPQ
    0U,	// LPR
    0U,	// LPXBR
    0U,	// LPXR
    0U,	// LR
    0U,	// LRDR
    0U,	// LRER
    0U,	// LRL
    0U,	// LRMux
    0U,	// LRV
    0U,	// LRVG
    0U,	// LRVGR
    0U,	// LRVH
    0U,	// LRVR
    0U,	// LT
    0U,	// LTDBR
    0U,	// LTDBRCompare
    0U,	// LTDBRCompare_VecPseudo
    0U,	// LTDR
    0U,	// LTDTR
    0U,	// LTEBR
    0U,	// LTEBRCompare
    0U,	// LTEBRCompare_VecPseudo
    0U,	// LTER
    0U,	// LTG
    0U,	// LTGF
    0U,	// LTGFR
    0U,	// LTGR
    0U,	// LTR
    0U,	// LTXBR
    0U,	// LTXBRCompare
    0U,	// LTXBRCompare_VecPseudo
    0U,	// LTXR
    0U,	// LTXTR
    0U,	// LX
    0U,	// LXD
    0U,	// LXDB
    0U,	// LXDBR
    0U,	// LXDR
    0U,	// LXDTR
    0U,	// LXE
    0U,	// LXEB
    0U,	// LXEBR
    0U,	// LXER
    0U,	// LXR
    0U,	// LY
    0U,	// LZDR
    0U,	// LZER
    0U,	// LZRF
    0U,	// LZRG
    0U,	// LZXR
    0U,	// M
    0U,	// MAD
    0U,	// MADB
    0U,	// MADBR
    0U,	// MADR
    0U,	// MAE
    0U,	// MAEB
    0U,	// MAEBR
    0U,	// MAER
    0U,	// MAY
    0U,	// MAYH
    0U,	// MAYHR
    0U,	// MAYL
    0U,	// MAYLR
    0U,	// MAYR
    0U,	// MC
    0U,	// MD
    0U,	// MDB
    0U,	// MDBR
    0U,	// MDE
    0U,	// MDEB
    0U,	// MDEBR
    0U,	// MDER
    0U,	// MDR
    0U,	// MDTR
    0U,	// MDTRA
    0U,	// ME
    0U,	// MEE
    0U,	// MEEB
    0U,	// MEEBR
    0U,	// MEER
    0U,	// MER
    0U,	// MFY
    0U,	// MGHI
    0U,	// MH
    0U,	// MHI
    0U,	// MHY
    0U,	// ML
    0U,	// MLG
    0U,	// MLGR
    0U,	// MLR
    0U,	// MP
    0U,	// MR
    0U,	// MS
    0U,	// MSD
    0U,	// MSDB
    0U,	// MSDBR
    0U,	// MSDR
    0U,	// MSE
    0U,	// MSEB
    0U,	// MSEBR
    0U,	// MSER
    0U,	// MSFI
    0U,	// MSG
    0U,	// MSGF
    0U,	// MSGFI
    0U,	// MSGFR
    0U,	// MSGR
    0U,	// MSR
    0U,	// MSY
    0U,	// MVC
    0U,	// MVCIN
    0U,	// MVCK
    0U,	// MVCL
    0U,	// MVCLE
    0U,	// MVCLU
    0U,	// MVCLoop
    0U,	// MVCSequence
    0U,	// MVGHI
    0U,	// MVHHI
    0U,	// MVHI
    0U,	// MVI
    0U,	// MVIY
    0U,	// MVN
    0U,	// MVO
    0U,	// MVST
    0U,	// MVSTLoop
    0U,	// MVZ
    0U,	// MXBR
    0U,	// MXD
    0U,	// MXDB
    0U,	// MXDBR
    0U,	// MXDR
    0U,	// MXR
    0U,	// MXTR
    0U,	// MXTRA
    0U,	// MY
    0U,	// MYH
    0U,	// MYHR
    0U,	// MYL
    0U,	// MYLR
    0U,	// MYR
    0U,	// MemBarrier
    0U,	// N
    0U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    0U,	// NG
    0U,	// NGR
    0U,	// NGRK
    0U,	// NI
    0U,	// NIAI
    0U,	// NIFMux
    0U,	// NIHF
    0U,	// NIHF64
    0U,	// NIHH
    0U,	// NIHH64
    0U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    0U,	// NILF
    0U,	// NILF64
    0U,	// NILH
    0U,	// NILH64
    0U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    0U,	// NIY
    0U,	// NR
    0U,	// NRK
    0U,	// NTSTG
    0U,	// NY
    0U,	// O
    0U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    0U,	// OG
    0U,	// OGR
    0U,	// OGRK
    0U,	// OI
    0U,	// OIFMux
    0U,	// OIHF
    0U,	// OIHF64
    0U,	// OIHH
    0U,	// OIHH64
    0U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    0U,	// OILF
    0U,	// OILF64
    0U,	// OILH
    0U,	// OILH64
    0U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    0U,	// OIY
    0U,	// OR
    0U,	// ORK
    0U,	// OY
    0U,	// PACK
    0U,	// PCC
    0U,	// PFD
    0U,	// PFDRL
    0U,	// PFPO
    0U,	// PKA
    0U,	// PKU
    0U,	// PLO
    0U,	// POPCNT
    0U,	// PPA
    0U,	// PPNO
    0U,	// PR
    0U,	// QADTR
    0U,	// QAXTR
    0U,	// RISBG
    0U,	// RISBG32
    0U,	// RISBGN
    0U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    0U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    0U,	// RLL
    0U,	// RLLG
    0U,	// RNSBG
    0U,	// ROSBG
    0U,	// RRDTR
    0U,	// RRXTR
    0U,	// RXSBG
    0U,	// Return
    0U,	// S
    0U,	// SAM24
    0U,	// SAM31
    0U,	// SAM64
    0U,	// SAR
    0U,	// SD
    0U,	// SDB
    0U,	// SDBR
    0U,	// SDR
    0U,	// SDTR
    0U,	// SDTRA
    0U,	// SE
    0U,	// SEB
    0U,	// SEBR
    0U,	// SER
    0U,	// SFASR
    0U,	// SFPC
    0U,	// SG
    0U,	// SGF
    0U,	// SGFR
    0U,	// SGR
    0U,	// SGRK
    0U,	// SH
    0U,	// SHY
    0U,	// SL
    0U,	// SLA
    0U,	// SLAG
    0U,	// SLAK
    0U,	// SLB
    0U,	// SLBG
    0U,	// SLBGR
    0U,	// SLBR
    0U,	// SLDA
    0U,	// SLDL
    0U,	// SLDT
    0U,	// SLFI
    0U,	// SLG
    0U,	// SLGF
    0U,	// SLGFI
    0U,	// SLGFR
    0U,	// SLGR
    0U,	// SLGRK
    0U,	// SLL
    0U,	// SLLG
    0U,	// SLLK
    0U,	// SLR
    0U,	// SLRK
    0U,	// SLXT
    0U,	// SLY
    0U,	// SP
    0U,	// SPM
    0U,	// SQD
    0U,	// SQDB
    0U,	// SQDBR
    0U,	// SQDR
    0U,	// SQE
    0U,	// SQEB
    0U,	// SQEBR
    0U,	// SQER
    0U,	// SQXBR
    0U,	// SQXR
    0U,	// SR
    0U,	// SRA
    0U,	// SRAG
    0U,	// SRAK
    0U,	// SRDA
    0U,	// SRDL
    0U,	// SRDT
    0U,	// SRK
    0U,	// SRL
    0U,	// SRLG
    0U,	// SRLK
    0U,	// SRNM
    0U,	// SRNMB
    0U,	// SRNMT
    0U,	// SRP
    0U,	// SRST
    0U,	// SRSTLoop
    0U,	// SRSTU
    0U,	// SRXT
    0U,	// ST
    0U,	// ST128
    0U,	// STAM
    0U,	// STAMY
    0U,	// STC
    0U,	// STCH
    0U,	// STCK
    0U,	// STCKE
    0U,	// STCKF
    0U,	// STCM
    0U,	// STCMH
    0U,	// STCMY
    0U,	// STCMux
    0U,	// STCY
    0U,	// STD
    0U,	// STDY
    0U,	// STE
    0U,	// STEY
    0U,	// STFH
    0U,	// STFLE
    0U,	// STFPC
    0U,	// STG
    0U,	// STGRL
    0U,	// STH
    0U,	// STHH
    0U,	// STHMux
    0U,	// STHRL
    0U,	// STHY
    0U,	// STM
    0U,	// STMG
    0U,	// STMH
    0U,	// STMY
    0U,	// STMux
    0U,	// STOC
    0U,	// STOCAsm
    0U,	// STOCAsmE
    0U,	// STOCAsmH
    0U,	// STOCAsmHE
    0U,	// STOCAsmL
    0U,	// STOCAsmLE
    0U,	// STOCAsmLH
    0U,	// STOCAsmM
    0U,	// STOCAsmNE
    0U,	// STOCAsmNH
    0U,	// STOCAsmNHE
    0U,	// STOCAsmNL
    0U,	// STOCAsmNLE
    0U,	// STOCAsmNLH
    0U,	// STOCAsmNM
    0U,	// STOCAsmNO
    0U,	// STOCAsmNP
    0U,	// STOCAsmNZ
    0U,	// STOCAsmO
    0U,	// STOCAsmP
    0U,	// STOCAsmZ
    0U,	// STOCFH
    0U,	// STOCFHAsm
    0U,	// STOCFHAsmE
    0U,	// STOCFHAsmH
    0U,	// STOCFHAsmHE
    0U,	// STOCFHAsmL
    0U,	// STOCFHAsmLE
    0U,	// STOCFHAsmLH
    0U,	// STOCFHAsmM
    0U,	// STOCFHAsmNE
    0U,	// STOCFHAsmNH
    0U,	// STOCFHAsmNHE
    0U,	// STOCFHAsmNL
    0U,	// STOCFHAsmNLE
    0U,	// STOCFHAsmNLH
    0U,	// STOCFHAsmNM
    0U,	// STOCFHAsmNO
    0U,	// STOCFHAsmNP
    0U,	// STOCFHAsmNZ
    0U,	// STOCFHAsmO
    0U,	// STOCFHAsmP
    0U,	// STOCFHAsmZ
    0U,	// STOCG
    0U,	// STOCGAsm
    0U,	// STOCGAsmE
    0U,	// STOCGAsmH
    0U,	// STOCGAsmHE
    0U,	// STOCGAsmL
    0U,	// STOCGAsmLE
    0U,	// STOCGAsmLH
    0U,	// STOCGAsmM
    0U,	// STOCGAsmNE
    0U,	// STOCGAsmNH
    0U,	// STOCGAsmNHE
    0U,	// STOCGAsmNL
    0U,	// STOCGAsmNLE
    0U,	// STOCGAsmNLH
    0U,	// STOCGAsmNM
    0U,	// STOCGAsmNO
    0U,	// STOCGAsmNP
    0U,	// STOCGAsmNZ
    0U,	// STOCGAsmO
    0U,	// STOCGAsmP
    0U,	// STOCGAsmZ
    0U,	// STOCMux
    0U,	// STPQ
    0U,	// STRAG
    0U,	// STRL
    0U,	// STRV
    0U,	// STRVG
    0U,	// STRVH
    0U,	// STX
    0U,	// STY
    0U,	// SU
    0U,	// SUR
    0U,	// SVC
    0U,	// SW
    0U,	// SWR
    0U,	// SXBR
    0U,	// SXR
    0U,	// SXTR
    0U,	// SXTRA
    0U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    0U,	// TABORT
    0U,	// TAM
    0U,	// TBDR
    0U,	// TBEDR
    0U,	// TBEGIN
    0U,	// TBEGINC
    0U,	// TBEGIN_nofloat
    0U,	// TCDB
    0U,	// TCEB
    0U,	// TCXB
    0U,	// TDCDT
    0U,	// TDCET
    0U,	// TDCXT
    0U,	// TDGDT
    0U,	// TDGET
    0U,	// TDGXT
    0U,	// TEND
    0U,	// THDER
    0U,	// THDR
    0U,	// TLS_GDCALL
    0U,	// TLS_LDCALL
    0U,	// TM
    0U,	// TMHH
    0U,	// TMHH64
    0U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    0U,	// TMLH
    0U,	// TMLH64
    0U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    0U,	// TMY
    0U,	// TP
    0U,	// TR
    0U,	// TRE
    0U,	// TROO
    0U,	// TROOOpt
    0U,	// TROT
    0U,	// TROTOpt
    0U,	// TRT
    0U,	// TRTE
    0U,	// TRTEOpt
    0U,	// TRTO
    0U,	// TRTOOpt
    0U,	// TRTR
    0U,	// TRTRE
    0U,	// TRTREOpt
    0U,	// TRTT
    0U,	// TRTTOpt
    0U,	// TS
    0U,	// Trap
    0U,	// UNPK
    0U,	// UNPKA
    0U,	// UNPKU
    0U,	// UPT
    0U,	// VA
    0U,	// VAB
    0U,	// VAC
    0U,	// VACC
    0U,	// VACCB
    0U,	// VACCC
    0U,	// VACCCQ
    0U,	// VACCF
    0U,	// VACCG
    0U,	// VACCH
    0U,	// VACCQ
    0U,	// VACQ
    0U,	// VAF
    0U,	// VAG
    0U,	// VAH
    0U,	// VAQ
    0U,	// VAVG
    0U,	// VAVGB
    0U,	// VAVGF
    0U,	// VAVGG
    0U,	// VAVGH
    0U,	// VAVGL
    0U,	// VAVGLB
    0U,	// VAVGLF
    0U,	// VAVGLG
    0U,	// VAVGLH
    0U,	// VCDG
    0U,	// VCDGB
    0U,	// VCDLG
    0U,	// VCDLGB
    0U,	// VCEQ
    0U,	// VCEQB
    0U,	// VCEQBS
    0U,	// VCEQF
    0U,	// VCEQFS
    0U,	// VCEQG
    0U,	// VCEQGS
    0U,	// VCEQH
    0U,	// VCEQHS
    0U,	// VCGD
    0U,	// VCGDB
    0U,	// VCH
    0U,	// VCHB
    0U,	// VCHBS
    0U,	// VCHF
    0U,	// VCHFS
    0U,	// VCHG
    0U,	// VCHGS
    0U,	// VCHH
    0U,	// VCHHS
    0U,	// VCHL
    0U,	// VCHLB
    0U,	// VCHLBS
    0U,	// VCHLF
    0U,	// VCHLFS
    0U,	// VCHLG
    0U,	// VCHLGS
    0U,	// VCHLH
    0U,	// VCHLHS
    0U,	// VCKSM
    0U,	// VCLGD
    0U,	// VCLGDB
    0U,	// VCLZ
    0U,	// VCLZB
    0U,	// VCLZF
    0U,	// VCLZG
    0U,	// VCLZH
    0U,	// VCTZ
    0U,	// VCTZB
    0U,	// VCTZF
    0U,	// VCTZG
    0U,	// VCTZH
    0U,	// VEC
    0U,	// VECB
    0U,	// VECF
    0U,	// VECG
    0U,	// VECH
    0U,	// VECL
    0U,	// VECLB
    0U,	// VECLF
    0U,	// VECLG
    0U,	// VECLH
    1U,	// VERIM
    0U,	// VERIMB
    0U,	// VERIMF
    0U,	// VERIMG
    0U,	// VERIMH
    0U,	// VERLL
    0U,	// VERLLB
    0U,	// VERLLF
    0U,	// VERLLG
    0U,	// VERLLH
    0U,	// VERLLV
    0U,	// VERLLVB
    0U,	// VERLLVF
    0U,	// VERLLVG
    0U,	// VERLLVH
    0U,	// VESL
    0U,	// VESLB
    0U,	// VESLF
    0U,	// VESLG
    0U,	// VESLH
    0U,	// VESLV
    0U,	// VESLVB
    0U,	// VESLVF
    0U,	// VESLVG
    0U,	// VESLVH
    0U,	// VESRA
    0U,	// VESRAB
    0U,	// VESRAF
    0U,	// VESRAG
    0U,	// VESRAH
    0U,	// VESRAV
    0U,	// VESRAVB
    0U,	// VESRAVF
    0U,	// VESRAVG
    0U,	// VESRAVH
    0U,	// VESRL
    0U,	// VESRLB
    0U,	// VESRLF
    0U,	// VESRLG
    0U,	// VESRLH
    0U,	// VESRLV
    0U,	// VESRLVB
    0U,	// VESRLVF
    0U,	// VESRLVG
    0U,	// VESRLVH
    0U,	// VFA
    0U,	// VFADB
    0U,	// VFAE
    0U,	// VFAEB
    0U,	// VFAEBS
    0U,	// VFAEF
    0U,	// VFAEFS
    0U,	// VFAEH
    0U,	// VFAEHS
    0U,	// VFAEZB
    0U,	// VFAEZBS
    0U,	// VFAEZF
    0U,	// VFAEZFS
    0U,	// VFAEZH
    0U,	// VFAEZHS
    2U,	// VFCE
    0U,	// VFCEDB
    0U,	// VFCEDBS
    2U,	// VFCH
    0U,	// VFCHDB
    0U,	// VFCHDBS
    2U,	// VFCHE
    0U,	// VFCHEDB
    0U,	// VFCHEDBS
    0U,	// VFD
    0U,	// VFDDB
    0U,	// VFEE
    0U,	// VFEEB
    0U,	// VFEEBS
    0U,	// VFEEF
    0U,	// VFEEFS
    0U,	// VFEEH
    0U,	// VFEEHS
    0U,	// VFEEZB
    0U,	// VFEEZBS
    0U,	// VFEEZF
    0U,	// VFEEZFS
    0U,	// VFEEZH
    0U,	// VFEEZHS
    0U,	// VFENE
    0U,	// VFENEB
    0U,	// VFENEBS
    0U,	// VFENEF
    0U,	// VFENEFS
    0U,	// VFENEH
    0U,	// VFENEHS
    0U,	// VFENEZB
    0U,	// VFENEZBS
    0U,	// VFENEZF
    0U,	// VFENEZFS
    0U,	// VFENEZH
    0U,	// VFENEZHS
    0U,	// VFI
    0U,	// VFIDB
    0U,	// VFLCDB
    0U,	// VFLNDB
    0U,	// VFLPDB
    0U,	// VFM
    2U,	// VFMA
    0U,	// VFMADB
    0U,	// VFMDB
    2U,	// VFMS
    0U,	// VFMSDB
    0U,	// VFPSO
    0U,	// VFPSODB
    0U,	// VFS
    0U,	// VFSDB
    0U,	// VFSQ
    0U,	// VFSQDB
    0U,	// VFTCI
    0U,	// VFTCIDB
    0U,	// VGBM
    0U,	// VGEF
    0U,	// VGEG
    0U,	// VGFM
    0U,	// VGFMA
    0U,	// VGFMAB
    0U,	// VGFMAF
    0U,	// VGFMAG
    0U,	// VGFMAH
    0U,	// VGFMB
    0U,	// VGFMF
    0U,	// VGFMG
    0U,	// VGFMH
    0U,	// VGM
    0U,	// VGMB
    0U,	// VGMF
    0U,	// VGMG
    0U,	// VGMH
    0U,	// VISTR
    0U,	// VISTRB
    0U,	// VISTRBS
    0U,	// VISTRF
    0U,	// VISTRFS
    0U,	// VISTRH
    0U,	// VISTRHS
    0U,	// VL
    0U,	// VL32
    0U,	// VL64
    0U,	// VLBB
    0U,	// VLC
    0U,	// VLCB
    0U,	// VLCF
    0U,	// VLCG
    0U,	// VLCH
    0U,	// VLDE
    0U,	// VLDEB
    0U,	// VLEB
    0U,	// VLED
    0U,	// VLEDB
    0U,	// VLEF
    0U,	// VLEG
    0U,	// VLEH
    0U,	// VLEIB
    0U,	// VLEIF
    0U,	// VLEIG
    0U,	// VLEIH
    0U,	// VLGV
    0U,	// VLGVB
    0U,	// VLGVF
    0U,	// VLGVG
    0U,	// VLGVH
    0U,	// VLL
    0U,	// VLLEZ
    0U,	// VLLEZB
    0U,	// VLLEZF
    0U,	// VLLEZG
    0U,	// VLLEZH
    0U,	// VLM
    0U,	// VLP
    0U,	// VLPB
    0U,	// VLPF
    0U,	// VLPG
    0U,	// VLPH
    0U,	// VLR
    0U,	// VLR32
    0U,	// VLR64
    0U,	// VLREP
    0U,	// VLREPB
    0U,	// VLREPF
    0U,	// VLREPG
    0U,	// VLREPH
    0U,	// VLVG
    0U,	// VLVGB
    0U,	// VLVGF
    0U,	// VLVGG
    0U,	// VLVGH
    0U,	// VLVGP
    0U,	// VLVGP32
    0U,	// VMAE
    0U,	// VMAEB
    0U,	// VMAEF
    0U,	// VMAEH
    0U,	// VMAH
    0U,	// VMAHB
    0U,	// VMAHF
    0U,	// VMAHH
    0U,	// VMAL
    0U,	// VMALB
    0U,	// VMALE
    0U,	// VMALEB
    0U,	// VMALEF
    0U,	// VMALEH
    0U,	// VMALF
    0U,	// VMALH
    0U,	// VMALHB
    0U,	// VMALHF
    0U,	// VMALHH
    0U,	// VMALHW
    0U,	// VMALO
    0U,	// VMALOB
    0U,	// VMALOF
    0U,	// VMALOH
    0U,	// VMAO
    0U,	// VMAOB
    0U,	// VMAOF
    0U,	// VMAOH
    0U,	// VME
    0U,	// VMEB
    0U,	// VMEF
    0U,	// VMEH
    0U,	// VMH
    0U,	// VMHB
    0U,	// VMHF
    0U,	// VMHH
    0U,	// VML
    0U,	// VMLB
    0U,	// VMLE
    0U,	// VMLEB
    0U,	// VMLEF
    0U,	// VMLEH
    0U,	// VMLF
    0U,	// VMLH
    0U,	// VMLHB
    0U,	// VMLHF
    0U,	// VMLHH
    0U,	// VMLHW
    0U,	// VMLO
    0U,	// VMLOB
    0U,	// VMLOF
    0U,	// VMLOH
    0U,	// VMN
    0U,	// VMNB
    0U,	// VMNF
    0U,	// VMNG
    0U,	// VMNH
    0U,	// VMNL
    0U,	// VMNLB
    0U,	// VMNLF
    0U,	// VMNLG
    0U,	// VMNLH
    0U,	// VMO
    0U,	// VMOB
    0U,	// VMOF
    0U,	// VMOH
    0U,	// VMRH
    0U,	// VMRHB
    0U,	// VMRHF
    0U,	// VMRHG
    0U,	// VMRHH
    0U,	// VMRL
    0U,	// VMRLB
    0U,	// VMRLF
    0U,	// VMRLG
    0U,	// VMRLH
    0U,	// VMX
    0U,	// VMXB
    0U,	// VMXF
    0U,	// VMXG
    0U,	// VMXH
    0U,	// VMXL
    0U,	// VMXLB
    0U,	// VMXLF
    0U,	// VMXLG
    0U,	// VMXLH
    0U,	// VN
    0U,	// VNC
    0U,	// VNO
    0U,	// VO
    0U,	// VONE
    0U,	// VPDI
    0U,	// VPERM
    0U,	// VPK
    0U,	// VPKF
    0U,	// VPKG
    0U,	// VPKH
    0U,	// VPKLS
    0U,	// VPKLSF
    0U,	// VPKLSFS
    0U,	// VPKLSG
    0U,	// VPKLSGS
    0U,	// VPKLSH
    0U,	// VPKLSHS
    0U,	// VPKS
    0U,	// VPKSF
    0U,	// VPKSFS
    0U,	// VPKSG
    0U,	// VPKSGS
    0U,	// VPKSH
    0U,	// VPKSHS
    0U,	// VPOPCT
    0U,	// VREP
    0U,	// VREPB
    0U,	// VREPF
    0U,	// VREPG
    0U,	// VREPH
    0U,	// VREPI
    0U,	// VREPIB
    0U,	// VREPIF
    0U,	// VREPIG
    0U,	// VREPIH
    0U,	// VS
    0U,	// VSB
    0U,	// VSBCBI
    0U,	// VSBCBIQ
    0U,	// VSBI
    0U,	// VSBIQ
    0U,	// VSCBI
    0U,	// VSCBIB
    0U,	// VSCBIF
    0U,	// VSCBIG
    0U,	// VSCBIH
    0U,	// VSCBIQ
    0U,	// VSCEF
    0U,	// VSCEG
    0U,	// VSEG
    0U,	// VSEGB
    0U,	// VSEGF
    0U,	// VSEGH
    0U,	// VSEL
    0U,	// VSF
    0U,	// VSG
    0U,	// VSH
    0U,	// VSL
    0U,	// VSLB
    0U,	// VSLDB
    0U,	// VSQ
    0U,	// VSRA
    0U,	// VSRAB
    0U,	// VSRL
    0U,	// VSRLB
    0U,	// VST
    0U,	// VST32
    0U,	// VST64
    0U,	// VSTEB
    0U,	// VSTEF
    0U,	// VSTEG
    0U,	// VSTEH
    0U,	// VSTL
    0U,	// VSTM
    2U,	// VSTRC
    0U,	// VSTRCB
    0U,	// VSTRCBS
    0U,	// VSTRCF
    0U,	// VSTRCFS
    0U,	// VSTRCH
    0U,	// VSTRCHS
    0U,	// VSTRCZB
    0U,	// VSTRCZBS
    0U,	// VSTRCZF
    0U,	// VSTRCZFS
    0U,	// VSTRCZH
    0U,	// VSTRCZHS
    0U,	// VSUM
    0U,	// VSUMB
    0U,	// VSUMG
    0U,	// VSUMGF
    0U,	// VSUMGH
    0U,	// VSUMH
    0U,	// VSUMQ
    0U,	// VSUMQF
    0U,	// VSUMQG
    0U,	// VTM
    0U,	// VUPH
    0U,	// VUPHB
    0U,	// VUPHF
    0U,	// VUPHH
    0U,	// VUPL
    0U,	// VUPLB
    0U,	// VUPLF
    0U,	// VUPLH
    0U,	// VUPLHB
    0U,	// VUPLHF
    0U,	// VUPLHH
    0U,	// VUPLHW
    0U,	// VUPLL
    0U,	// VUPLLB
    0U,	// VUPLLF
    0U,	// VUPLLH
    0U,	// VX
    0U,	// VZERO
    0U,	// WCDGB
    0U,	// WCDLGB
    0U,	// WCGDB
    0U,	// WCLGDB
    0U,	// WFADB
    0U,	// WFC
    0U,	// WFCDB
    0U,	// WFCEDB
    0U,	// WFCEDBS
    0U,	// WFCHDB
    0U,	// WFCHDBS
    0U,	// WFCHEDB
    0U,	// WFCHEDBS
    0U,	// WFDDB
    0U,	// WFIDB
    0U,	// WFK
    0U,	// WFKDB
    0U,	// WFLCDB
    0U,	// WFLNDB
    0U,	// WFLPDB
    0U,	// WFMADB
    0U,	// WFMDB
    0U,	// WFMSDB
    0U,	// WFPSODB
    0U,	// WFSDB
    0U,	// WFSQDB
    0U,	// WFTCIDB
    0U,	// WLDEB
    0U,	// WLEDB
    0U,	// X
    0U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    0U,	// XG
    0U,	// XGR
    0U,	// XGRK
    0U,	// XI
    0U,	// XIFMux
    0U,	// XIHF
    0U,	// XIHF64
    0U,	// XILF
    0U,	// XILF64
    0U,	// XIY
    0U,	// XR
    0U,	// XRK
    0U,	// XY
    0U,	// ZAP
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  Bits |= (uint64_t)OpInfo2[MI->getOpcode()] << 48;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 16383)-1;


  // Fragment 0 encoded into 5 bits for 18 unique commands.
  switch ((Bits >> 14) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CALL, PATCHABL...
    return;
    break;
  case 1:
    // A, AD, ADB, ADBR, ADR, ADTR, ADTRA, AE, AEB, AEBR, AER, AFI, AG, AGF, ...
    printOperand(MI, 0, O);
    break;
  case 2:
    // AGSI, ALGSI, ALSI, ASI, CFC, CGHSI, CHHSI, CHSI, CLFHSI, CLGHSI, CLHHS...
    printBDAddrOperand(MI, 0, O);
    break;
  case 3:
    // AP, CLC, CP, DP, ED, EDMK, MP, MVC, MVCIN, MVN, MVO, MVZ, NC, OC, PACK...
    printBDLAddrOperand(MI, 0, O);
    break;
  case 4:
    // B, BAsmE, BAsmH, BAsmHE, BAsmL, BAsmLE, BAsmLH, BAsmM, BAsmNE, BAsmNH,...
    printBDXAddrOperand(MI, 0, O);
    return;
    break;
  case 5:
    // BC, BCR, BRC, BRCL
    printCond4Operand(MI, 1, O);
    break;
  case 6:
    // BCAsm, BCRAsm, BPP, BPRP, BRCAsm, BRCLAsm, NIAI, PFD, PFDRL
    printU4ImmOperand(MI, 0, O);
    O << ", ";
    break;
  case 7:
    // CGIB, CGIJ, CGIT, CGRB, CGRJ, CGRT, CIB, CIJ, CIT, CLFIT, CLGIB, CLGIJ...
    printCond4Operand(MI, 2, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    break;
  case 8:
    // CLGT, CLT
    printCond4Operand(MI, 3, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    printBDAddrOperand(MI, 1, O);
    return;
    break;
  case 9:
    // InsnE, InsnRR
    printU16ImmOperand(MI, 0, O);
    break;
  case 10:
    // InsnRI, InsnRRE, InsnRRF, InsnRS, InsnRX, InsnS, InsnSI
    printU32ImmOperand(MI, 0, O);
    O << ',';
    break;
  case 11:
    // InsnRIE, InsnRIL, InsnRILU, InsnRIS, InsnRRS, InsnRSE, InsnRSI, InsnRS...
    printU48ImmOperand(MI, 0, O);
    O << ',';
    break;
  case 12:
    // J, JAsmE, JAsmH, JAsmHE, JAsmL, JAsmLE, JAsmLH, JAsmM, JAsmNE, JAsmNH,...
    printPCRelOperand(MI, 0, O);
    return;
    break;
  case 13:
    // KIMD, KLMD, KMAC, TRTE, TRTEOpt, TRTRE, TRTREOpt
    printOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 0, O);
    break;
  case 14:
    // LOC, LOCFH, LOCG
    printCond4Operand(MI, 5, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    printBDAddrOperand(MI, 2, O);
    return;
    break;
  case 15:
    // LOCFHR, LOCGHI, LOCGR, LOCHHI, LOCHI, LOCR, STOC, STOCFH, STOCG
    printCond4Operand(MI, 4, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    break;
  case 16:
    // MVCK
    printBDRAddrOperand(MI, 0, O);
    O << ", ";
    printBDAddrOperand(MI, 3, O);
    O << ", ";
    printOperand(MI, 5, O);
    return;
    break;
  case 17:
    // SVC
    printU8ImmOperand(MI, 0, O);
    return;
    break;
  }


  // Fragment 1 encoded into 5 bits for 17 unique commands.
  switch ((Bits >> 19) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, AD, ADB, ADBR, ADR, ADTR, ADTRA, AE, AEB, AEBR, AER, AFI, AG, AGF, ...
    O << ", ";
    break;
  case 1:
    // BC, BRC, BRCL
    O << "\t";
    break;
  case 2:
    // BCAsm, PFD
    printBDXAddrOperand(MI, 1, O);
    return;
    break;
  case 3:
    // BCR
    O << "r\t";
    printOperand(MI, 2, O);
    return;
    break;
  case 4:
    // BCRAsm, CGRB, CGRJ, CGRT, CLGRB, CLGRJ, CLGRT, CLRB, CLRJ, CLRT, CRB, ...
    printOperand(MI, 1, O);
    break;
  case 5:
    // BPP, BPRP, BRCAsm, BRCLAsm, PFDRL
    printPCRelOperand(MI, 1, O);
    break;
  case 6:
    // BR, BRAsmE, BRAsmH, BRAsmHE, BRAsmL, BRAsmLE, BRAsmLH, BRAsmM, BRAsmNE...
    return;
    break;
  case 7:
    // CGIB, CGIJ, CIB, CIJ
    printS8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 8:
    // CGIT, CIT
    printS16ImmOperand(MI, 1, O);
    return;
    break;
  case 9:
    // CLFIT, CLGIT
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 10:
    // CLGIB, CLGIJ, CLIB, CLIJ
    printU8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 11:
    // InsnRR
    O << ',';
    printOperand(MI, 1, O);
    O << ',';
    printOperand(MI, 2, O);
    return;
    break;
  case 12:
    // InsnS, InsnSI, InsnSIL, InsnSIY, InsnSSE, InsnSSF, STOC, STOCFH, STOCG
    printBDAddrOperand(MI, 1, O);
    break;
  case 13:
    // InsnSS
    printBDRAddrOperand(MI, 1, O);
    O << ',';
    printBDAddrOperand(MI, 4, O);
    O << ',';
    printOperand(MI, 6, O);
    return;
    break;
  case 14:
    // LOCFHR, LOCGR, LOCR
    printOperand(MI, 2, O);
    return;
    break;
  case 15:
    // LOCGHI, LOCHHI, LOCHI
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 16:
    // NIAI
    printU4ImmOperand(MI, 1, O);
    return;
    break;
  }


  // Fragment 2 encoded into 6 bits for 34 unique commands.
  switch ((Bits >> 24) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, AD, ADB, AE, AEB, AG, AGF, AH, AHY, AL, ALC, ALCG, ALG, ALGF, ALY, ...
    printBDXAddrOperand(MI, 2, O);
    break;
  case 1:
    // ADBR, ADR, AEBR, AER, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AU...
    printOperand(MI, 2, O);
    break;
  case 2:
    // ADTR, ADTRA, AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AXT...
    printOperand(MI, 1, O);
    break;
  case 3:
    // AFI, AGFI, AIH, MSFI, MSGFI
    printS32ImmOperand(MI, 2, O);
    return;
    break;
  case 4:
    // AGHI, AHI, CGHSI, CHHSI, CHSI, LOCGHIAsm, LOCGHIAsmE, LOCGHIAsmH, LOCG...
    printS16ImmOperand(MI, 2, O);
    break;
  case 5:
    // AGSI, ALGSI, ALSI, ASI
    printS8ImmOperand(MI, 2, O);
    return;
    break;
  case 6:
    // ALFI, ALGFI, NIHF, NILF, OIHF, OILF, SLFI, SLGFI, XIHF, XILF
    printU32ImmOperand(MI, 2, O);
    return;
    break;
  case 7:
    // AP, CP, DP, MP, MVO, PACK, SP, UNPK, ZAP
    printBDLAddrOperand(MI, 3, O);
    return;
    break;
  case 8:
    // BAL, BAS, C, CD, CDB, CE, CEB, CG, CGF, CGH, CH, CHF, CHY, CL, CLG, CL...
    printBDXAddrOperand(MI, 1, O);
    break;
  case 9:
    // BCRAsm, BRCAsm, BRCLAsm, CGRT, CLGRT, CLRT, CRT, InsnS, PFDRL, STOC, S...
    return;
    break;
  case 10:
    // BPP, BPRP, CGRB, CGRJ, CLGRB, CLGRJ, CLRB, CLRJ, CRB, CRJ
    O << ", ";
    break;
  case 11:
    // BRAS, BRASL
    printPCRelTLSOperand(MI, 1, O);
    return;
    break;
  case 12:
    // BRC, BRCL, BRCT, BRCTG, BRCTH
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 13:
    // CDFBRA, CDFTR, CDGBRA, CDGTRA, CDLFBR, CDLFTR, CDLGBR, CDLGTR, CEFBRA,...
    printU4ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 14:
    // CDPT, CDZT, CPDT, CPXT, CXPT, CXZT, CZDT, CZXT
    printBDLAddrOperand(MI, 1, O);
    O << ", ";
    printU4ImmOperand(MI, 4, O);
    return;
    break;
  case 15:
    // CFI, CGFI, CIH, LGFI
    printS32ImmOperand(MI, 1, O);
    return;
    break;
  case 16:
    // CGFRL, CGHRL, CGRL, CHRL, CLGFRL, CLGHRL, CLGRL, CLHRL, CLRL, CRL, EXR...
    printPCRelOperand(MI, 1, O);
    return;
    break;
  case 17:
    // CGHI, CGITAsm, CGITAsmE, CGITAsmH, CGITAsmHE, CGITAsmL, CGITAsmLE, CGI...
    printS16ImmOperand(MI, 1, O);
    break;
  case 18:
    // CGIB, CIB, CLC, CLGIB, CLIB, ED, EDMK, MVC, MVCIN, MVN, MVZ, NC, OC, S...
    printBDAddrOperand(MI, 3, O);
    break;
  case 19:
    // CGIBAsm, CGIBAsmE, CGIBAsmH, CGIBAsmHE, CGIBAsmL, CGIBAsmLE, CGIBAsmLH...
    printS8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 20:
    // CGIJ, CIJ, CLGIJ, CLIJ
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 21:
    // CLFHSI, CLGHSI, CLHHSI, IIHH, IIHL, IILH, IILL, NIHH, NIHL, NILH, NILL...
    printU16ImmOperand(MI, 2, O);
    return;
    break;
  case 22:
    // CLFI, CLGFI, CLIH, IIHF, IILF, LLIHF, LLILF
    printU32ImmOperand(MI, 1, O);
    return;
    break;
  case 23:
    // CLFITAsm, CLFITAsmE, CLFITAsmH, CLFITAsmHE, CLFITAsmL, CLFITAsmLE, CLF...
    printU16ImmOperand(MI, 1, O);
    break;
  case 24:
    // CLGIBAsm, CLGIBAsmE, CLGIBAsmH, CLGIBAsmHE, CLGIBAsmL, CLGIBAsmLE, CLG...
    printU8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 25:
    // CLGTAsm, CLTAsm, TRTE, TRTRE
    printU4ImmOperand(MI, 3, O);
    break;
  case 26:
    // CLGTAsmE, CLGTAsmH, CLGTAsmHE, CLGTAsmL, CLGTAsmLE, CLGTAsmLH, CLGTAsm...
    printBDAddrOperand(MI, 1, O);
    break;
  case 27:
    // CLI, CLIY, MC, MVI, MVIY, NI, NIY, OI, OIY, TM, TMY, XI, XIY
    printU8ImmOperand(MI, 2, O);
    return;
    break;
  case 28:
    // CSST, ECTG, LOCAsm, LOCAsmE, LOCAsmH, LOCAsmHE, LOCAsmL, LOCAsmLE, LOC...
    printBDAddrOperand(MI, 2, O);
    break;
  case 29:
    // ICM, ICMH, ICMY
    printU4ImmOperand(MI, 2, O);
    O << ", ";
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 30:
    // InsnRI, InsnRIE, InsnRIL, InsnRILU, InsnRIS, InsnRRE, InsnRRF, InsnRRS...
    O << ',';
    break;
  case 31:
    // PKA, PKU
    printBDLAddrOperand(MI, 2, O);
    return;
    break;
  case 32:
    // VGEF, VGEG
    printBDVAddrOperand(MI, 2, O);
    O << ", ";
    break;
  case 33:
    // VSCEF, VSCEG
    printBDVAddrOperand(MI, 1, O);
    O << ", ";
    break;
  }


  // Fragment 3 encoded into 5 bits for 20 unique commands.
  switch ((Bits >> 30) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, AD, ADB, ADBR, ADR, AE, AEB, AEBR, AER, AG, AGF, AGFR, AGHI, AGR, A...
    return;
    break;
  case 1:
    // ADTR, ADTRA, AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AXT...
    O << ", ";
    break;
  case 2:
    // BPP, InsnRX, InsnRXE, InsnRXY
    printBDXAddrOperand(MI, 2, O);
    return;
    break;
  case 3:
    // BPRP, CGIJAsmE, CGIJAsmH, CGIJAsmHE, CGIJAsmL, CGIJAsmLE, CGIJAsmLH, C...
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 4:
    // CDFBRA, CDFTR, CDGBRA, CDGTRA, CDLFBR, CDLFTR, CDLGBR, CDLGTR, CEFBRA,...
    printOperand(MI, 2, O);
    break;
  case 5:
    // CGIBAsm, CGIJAsm, CIBAsm, CIJAsm, CLGIBAsm, CLGIJAsm, CLIBAsm, CLIJAsm
    printU4ImmOperand(MI, 2, O);
    O << ", ";
    break;
  case 6:
    // CGIBAsmE, CGIBAsmH, CGIBAsmHE, CGIBAsmL, CGIBAsmLE, CGIBAsmLH, CGIBAsm...
    printBDAddrOperand(MI, 2, O);
    return;
    break;
  case 7:
    // CGRB, CLGRB, CLRB, CRB, InsnSSE, InsnSSF
    printBDAddrOperand(MI, 3, O);
    break;
  case 8:
    // CGRJ, CLGRJ, CLRJ, CRJ
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 9:
    // InsnRI
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 10:
    // InsnRILU
    printU32ImmOperand(MI, 2, O);
    return;
    break;
  case 11:
    // InsnRIS
    printS8ImmOperand(MI, 2, O);
    O << ',';
    printU4ImmOperand(MI, 3, O);
    O << ',';
    printBDAddrOperand(MI, 4, O);
    return;
    break;
  case 12:
    // InsnSI
    printS8ImmOperand(MI, 3, O);
    return;
    break;
  case 13:
    // InsnSIL
    printU16ImmOperand(MI, 3, O);
    return;
    break;
  case 14:
    // InsnSIY
    printU8ImmOperand(MI, 3, O);
    return;
    break;
  case 15:
    // VGEF
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  case 16:
    // VGEG
    printU1ImmOperand(MI, 5, O);
    return;
    break;
  case 17:
    // VGM, VGMB, VGMF, VGMG, VGMH
    printU8ImmOperand(MI, 2, O);
    break;
  case 18:
    // VSCEF
    printU2ImmOperand(MI, 4, O);
    return;
    break;
  case 19:
    // VSCEG
    printU1ImmOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 32 unique commands.
  switch ((Bits >> 35) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADTR, ADTRA, AGRK, ALGRK, ALRK, ARK, AXTR, AXTRA, DDTR, DDTRA, DXTR, D...
    printOperand(MI, 2, O);
    break;
  case 1:
    // AGHIK, AHIK, ALGHSIK, ALHSIK
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 2:
    // BRXH, BRXHG, BRXLE, BRXLG, CGIJAsm, CIJAsm, CLGIJAsm, CLIJAsm
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 3:
    // BXH, BXHG, BXLE, BXLEG, CDS, CDSG, CDSY, CGIBAsm, CIBAsm, CLGIBAsm, CL...
    printBDAddrOperand(MI, 3, O);
    break;
  case 4:
    // CDFBRA, CDFTR, CDGBRA, CDGTRA, CDLFBR, CDLFTR, CDLGBR, CDLGTR, CEFBRA,...
    O << ", ";
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  case 5:
    // CFDBR, CFDR, CFEBR, CFER, CFXBR, CFXR, CGDBR, CGDR, CGDTR, CGEBR, CGER...
    return;
    break;
  case 6:
    // CGITAsm, CGRBAsm, CGRJAsm, CGRTAsm, CITAsm, CLFITAsm, CLGITAsm, CLGRBA...
    printU4ImmOperand(MI, 2, O);
    break;
  case 7:
    // CGRBAsmE, CGRBAsmH, CGRBAsmHE, CGRBAsmL, CGRBAsmLE, CGRBAsmLH, CGRBAsm...
    printBDAddrOperand(MI, 2, O);
    break;
  case 8:
    // CGRJAsmE, CGRJAsmH, CGRJAsmHE, CGRJAsmL, CGRJAsmLE, CGRJAsmLH, CGRJAsm...
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 9:
    // CLCLE, CLCLU, MVCLE, MVCLU
    printBDAddrOperand(MI, 4, O);
    return;
    break;
  case 10:
    // CLGTAsm, CLTAsm
    printBDAddrOperand(MI, 1, O);
    return;
    break;
  case 11:
    // CPSDRdd, CPSDRds, CPSDRsd, CPSDRss, IEDTR, IEXTR, KMCTR
    printOperand(MI, 1, O);
    return;
    break;
  case 12:
    // CSST, ECTG
    printOperand(MI, 4, O);
    return;
    break;
  case 13:
    // CU12, CU14, CU21, CU24, CUTFU, CUUTF, LCBB, LOCAsm, LOCFHAsm, LOCGAsm,...
    printU4ImmOperand(MI, 4, O);
    return;
    break;
  case 14:
    // DIDBR, DIEBR, MADBR, MADR, MAEBR, MAER, MAYHR, MAYLR, MAYR, MSDBR, MSD...
    printOperand(MI, 3, O);
    break;
  case 15:
    // InsnRIE, InsnRRF, InsnRRS, InsnRS, InsnRSE, InsnRSI, InsnRSY, InsnRXF,...
    O << ',';
    break;
  case 16:
    // LOCFHRAsm, LOCGHIAsm, LOCGRAsm, LOCHHIAsm, LOCHIAsm, LOCRAsm, STOCAsm,...
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  case 17:
    // MAD, MADB, MAE, MAEB, MAY, MAYH, MAYL, MSD, MSDB, MSE, MSEB
    printBDXAddrOperand(MI, 3, O);
    return;
    break;
  case 18:
    // MY, MYH, MYL, SLDT, SLXT, SRDT, SRXT
    printBDXAddrOperand(MI, 2, O);
    return;
    break;
  case 19:
    // RISBG, RISBG32, RISBGN, RISBHG, RISBLG, RNSBG, ROSBG, RXSBG
    printU8ImmOperand(MI, 3, O);
    O << ", ";
    printU8ImmOperand(MI, 4, O);
    O << ", ";
    printU6ImmOperand(MI, 5, O);
    return;
    break;
  case 20:
    // SRP, VLEB
    printU4ImmOperand(MI, 5, O);
    return;
    break;
  case 21:
    // VFTCI, VFTCIDB, WFTCIDB
    printU12ImmOperand(MI, 2, O);
    break;
  case 22:
    // VLEF
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  case 23:
    // VLEG
    printU1ImmOperand(MI, 5, O);
    return;
    break;
  case 24:
    // VLEH
    printU3ImmOperand(MI, 5, O);
    return;
    break;
  case 25:
    // VLEIF
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 26:
    // VLEIG
    printU1ImmOperand(MI, 3, O);
    return;
    break;
  case 27:
    // VLEIH
    printU3ImmOperand(MI, 3, O);
    return;
    break;
  case 28:
    // VREP, VREPB, VREPF, VREPG, VREPH
    printU16ImmOperand(MI, 2, O);
    break;
  case 29:
    // VSTEF
    printU2ImmOperand(MI, 4, O);
    return;
    break;
  case 30:
    // VSTEG
    printU1ImmOperand(MI, 4, O);
    return;
    break;
  case 31:
    // VSTEH
    printU3ImmOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 5 encoded into 3 bits for 8 unique commands.
  switch ((Bits >> 40) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADTR, AGRK, ALGRK, ALRK, ARK, AXTR, BXH, BXHG, BXLE, BXLEG, CDS, CDSG,...
    return;
    break;
  case 1:
    // ADTRA, AXTRA, CGRBAsm, CGRJAsm, CLGRBAsm, CLGRJAsm, CLRBAsm, CLRJAsm, ...
    O << ", ";
    break;
  case 2:
    // InsnRIE, InsnRSI
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 3:
    // InsnRRF
    printOperand(MI, 3, O);
    O << ',';
    printU4ImmOperand(MI, 4, O);
    return;
    break;
  case 4:
    // InsnRRS
    printU4ImmOperand(MI, 3, O);
    O << ',';
    printBDAddrOperand(MI, 4, O);
    return;
    break;
  case 5:
    // InsnRS, InsnRSE, InsnRSY
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 6:
    // InsnRXF
    printBDXAddrOperand(MI, 3, O);
    return;
    break;
  case 7:
    // InsnSSF
    printOperand(MI, 5, O);
    return;
    break;
  }


  // Fragment 6 encoded into 4 bits for 9 unique commands.
  switch ((Bits >> 43) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADTRA, AXTRA, DDTRA, DXTRA, MDTRA, MXTRA, SDTRA, SXTRA, VA, VACC, VAVG...
    printU4ImmOperand(MI, 3, O);
    break;
  case 1:
    // CGRBAsm, CLGRBAsm, CLRBAsm, CRBAsm
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 2:
    // CGRJAsm, CLGRJAsm, CLRJAsm, CRJAsm
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 3:
    // DIDBR, DIEBR, QADTR, QAXTR, RRDTR, RRXTR, VERLL, VESL, VESRA, VESRL, V...
    printU4ImmOperand(MI, 4, O);
    return;
    break;
  case 4:
    // LMD, PLO
    printBDAddrOperand(MI, 4, O);
    return;
    break;
  case 5:
    // VAC, VACCC, VACCCQ, VACQ, VFMA, VFMADB, VFMS, VFMSDB, VGFMA, VGFMAB, V...
    printOperand(MI, 3, O);
    break;
  case 6:
    // VERIM, VERIMB, VERIMF, VERIMG, VERIMH
    printU8ImmOperand(MI, 4, O);
    break;
  case 7:
    // VLVG
    printU4ImmOperand(MI, 5, O);
    return;
    break;
  case 8:
    // VSLDB
    printU8ImmOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 47) & 1) {
    // VAC, VACCC, VCDG, VCDLG, VCEQ, VCGD, VCH, VCHL, VCLGD, VERIM, VFA, VFA...
    O << ", ";
  } else {
    // ADTRA, AXTRA, DDTRA, DXTRA, MDTRA, MXTRA, SDTRA, SXTRA, VA, VACC, VACC...
    return;
  }


  // Fragment 8 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 48) & 1) {
    // VERIM
    printU4ImmOperand(MI, 5, O);
    return;
  } else {
    // VAC, VACCC, VCDG, VCDLG, VCEQ, VCGD, VCH, VCHL, VCLGD, VFA, VFAE, VFCE...
    printU4ImmOperand(MI, 4, O);
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 49) & 1) {
    // VFCE, VFCH, VFCHE, VFMA, VFMS, VSTRC
    O << ", ";
    printU4ImmOperand(MI, 5, O);
    return;
  } else {
    // VAC, VACCC, VCDG, VCDLG, VCEQ, VCGD, VCH, VCHL, VCLGD, VFA, VFAE, VFD,...
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *SystemZInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 178 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'a', '1', '0', 0,
  /* 4 */ 'f', '1', '0', 0,
  /* 8 */ 'r', '1', '0', 0,
  /* 12 */ 'v', '1', '0', 0,
  /* 16 */ 'v', '2', '0', 0,
  /* 20 */ 'v', '3', '0', 0,
  /* 24 */ 'a', '0', 0,
  /* 27 */ 'f', '0', 0,
  /* 30 */ 'r', '0', 0,
  /* 33 */ 'v', '0', 0,
  /* 36 */ 'a', '1', '1', 0,
  /* 40 */ 'f', '1', '1', 0,
  /* 44 */ 'r', '1', '1', 0,
  /* 48 */ 'v', '1', '1', 0,
  /* 52 */ 'v', '2', '1', 0,
  /* 56 */ 'v', '3', '1', 0,
  /* 60 */ 'a', '1', 0,
  /* 63 */ 'f', '1', 0,
  /* 66 */ 'r', '1', 0,
  /* 69 */ 'v', '1', 0,
  /* 72 */ 'a', '1', '2', 0,
  /* 76 */ 'f', '1', '2', 0,
  /* 80 */ 'r', '1', '2', 0,
  /* 84 */ 'v', '1', '2', 0,
  /* 88 */ 'v', '2', '2', 0,
  /* 92 */ 'a', '2', 0,
  /* 95 */ 'f', '2', 0,
  /* 98 */ 'r', '2', 0,
  /* 101 */ 'v', '2', 0,
  /* 104 */ 'a', '1', '3', 0,
  /* 108 */ 'f', '1', '3', 0,
  /* 112 */ 'r', '1', '3', 0,
  /* 116 */ 'v', '1', '3', 0,
  /* 120 */ 'v', '2', '3', 0,
  /* 124 */ 'a', '3', 0,
  /* 127 */ 'f', '3', 0,
  /* 130 */ 'r', '3', 0,
  /* 133 */ 'v', '3', 0,
  /* 136 */ 'a', '1', '4', 0,
  /* 140 */ 'f', '1', '4', 0,
  /* 144 */ 'r', '1', '4', 0,
  /* 148 */ 'v', '1', '4', 0,
  /* 152 */ 'v', '2', '4', 0,
  /* 156 */ 'a', '4', 0,
  /* 159 */ 'f', '4', 0,
  /* 162 */ 'r', '4', 0,
  /* 165 */ 'v', '4', 0,
  /* 168 */ 'a', '1', '5', 0,
  /* 172 */ 'f', '1', '5', 0,
  /* 176 */ 'r', '1', '5', 0,
  /* 180 */ 'v', '1', '5', 0,
  /* 184 */ 'v', '2', '5', 0,
  /* 188 */ 'a', '5', 0,
  /* 191 */ 'f', '5', 0,
  /* 194 */ 'r', '5', 0,
  /* 197 */ 'v', '5', 0,
  /* 200 */ 'v', '1', '6', 0,
  /* 204 */ 'v', '2', '6', 0,
  /* 208 */ 'a', '6', 0,
  /* 211 */ 'f', '6', 0,
  /* 214 */ 'r', '6', 0,
  /* 217 */ 'v', '6', 0,
  /* 220 */ 'v', '1', '7', 0,
  /* 224 */ 'v', '2', '7', 0,
  /* 228 */ 'a', '7', 0,
  /* 231 */ 'f', '7', 0,
  /* 234 */ 'r', '7', 0,
  /* 237 */ 'v', '7', 0,
  /* 240 */ 'v', '1', '8', 0,
  /* 244 */ 'v', '2', '8', 0,
  /* 248 */ 'a', '8', 0,
  /* 251 */ 'f', '8', 0,
  /* 254 */ 'r', '8', 0,
  /* 257 */ 'v', '8', 0,
  /* 260 */ 'v', '1', '9', 0,
  /* 264 */ 'v', '2', '9', 0,
  /* 268 */ 'a', '9', 0,
  /* 271 */ 'f', '9', 0,
  /* 274 */ 'r', '9', 0,
  /* 277 */ 'v', '9', 0,
  /* 280 */ 'c', 'c', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    280, 24, 60, 92, 124, 156, 188, 208, 228, 248, 268, 0, 36, 72, 
    104, 136, 168, 33, 69, 101, 133, 165, 197, 217, 237, 257, 277, 12, 
    48, 84, 116, 148, 180, 200, 220, 240, 260, 16, 52, 88, 120, 152, 
    184, 204, 224, 244, 264, 20, 56, 27, 63, 95, 127, 159, 191, 211, 
    231, 251, 271, 4, 40, 76, 108, 140, 172, 200, 220, 240, 260, 16, 
    52, 88, 120, 152, 184, 204, 224, 244, 264, 20, 56, 27, 63, 159, 
    191, 251, 271, 76, 108, 27, 63, 95, 127, 159, 191, 211, 231, 251, 
    271, 4, 40, 76, 108, 140, 172, 200, 220, 240, 260, 16, 52, 88, 
    120, 152, 184, 204, 224, 244, 264, 20, 56, 30, 66, 98, 130, 162, 
    194, 214, 234, 254, 274, 8, 44, 80, 112, 144, 176, 30, 66, 98, 
    130, 162, 194, 214, 234, 254, 274, 8, 44, 80, 112, 144, 176, 30, 
    66, 98, 130, 162, 194, 214, 234, 254, 274, 8, 44, 80, 112, 144, 
    176, 30, 98, 162, 214, 254, 8, 80, 144, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool SystemZInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  const char *AsmString;
  switch (MI->getOpcode()) {
  default: return false;
  case SystemZ::VFAE:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VFAE VR128:$V1, VR128:$V2, VR128:$V3, imm32zx4:$M4, 0)
      AsmString = "vfae	$\x01, $\x02, $\x03, $\xFF\x04\x01";
      break;
    }
    return false;
  case SystemZ::VFAEB:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEB VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaeb	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEBS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEBS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaebs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEF:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEF VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaef	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEFS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEFS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaefs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEH:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEH VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaeh	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEHS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEHS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaehs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZB:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZB VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezb	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZBS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZBS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezbs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZF:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZF VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezf	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZFS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZFS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezfs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZH:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZH VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezh	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZHS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZHS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezhs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFEE:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VFEE VR128:$V1, VR128:$V2, VR128:$V3, imm32zx4:$M4, 0)
      AsmString = "vfee	$\x01, $\x02, $\x03, $\xFF\x04\x01";
      break;
    }
    return false;
  case SystemZ::VFEEB:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFEEB VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfeeb	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFEEF:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFEEF VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfeef	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFEEH:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFEEH VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfeeh	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFENE:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VFENE VR128:$V1, VR128:$V2, VR128:$V3, imm32zx4:$M4, 0)
      AsmString = "vfene	$\x01, $\x02, $\x03, $\xFF\x04\x01";
      break;
    }
    return false;
  case SystemZ::VFENEB:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFENEB VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfeneb	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFENEF:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFENEF VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfenef	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFENEH:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFENEH VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfeneh	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VISTR:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VISTR VR128:$V1, VR128:$V2, imm32zx4:$M3, 0)
      AsmString = "vistr	$\x01, $\x02, $\xFF\x03\x01";
      break;
    }
    return false;
  case SystemZ::VISTRB:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (VISTRB VR128:$V1, VR128:$V2, 0)
      AsmString = "vistrb	$\x01, $\x02";
      break;
    }
    return false;
  case SystemZ::VISTRF:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (VISTRF VR128:$V1, VR128:$V2, 0)
      AsmString = "vistrf	$\x01, $\x02";
      break;
    }
    return false;
  case SystemZ::VISTRH:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (VISTRH VR128:$V1, VR128:$V2, 0)
      AsmString = "vistrh	$\x01, $\x02";
      break;
    }
    return false;
  case SystemZ::VSTRC:
    if (MI->getNumOperands() == 6 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(5).isImm() &&
        MI->getOperand(5).getImm() == 0) {
      // (VSTRC VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, imm32zx4:$M5, 0)
      AsmString = "vstrc	$\x01, $\x02, $\x03, $\x04, $\xFF\x05\x01";
      break;
    }
    return false;
  case SystemZ::VSTRCB:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCB VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcb	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCBS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCBS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcbs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCF:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCF VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcf	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCFS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCFS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcfs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCH:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCH VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrch	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCHS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCHS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrchs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZB:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZB VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczb	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZBS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZBS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczbs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZF:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZF VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczf	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZFS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZFS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczfs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZH:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZH VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczh	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZHS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZHS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczhs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  }

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t')      OS << '\t';
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void SystemZInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printU4ImmOperand(MI, OpIdx, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
